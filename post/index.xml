<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Az's Blog</title><link>https://lhy0424.top/post/</link><description>Recent content in Posts on Az's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 18 Apr 2025 18:28:00 +0000</lastBuildDate><atom:link href="https://lhy0424.top/post/index.xml" rel="self" type="application/rss+xml"/><item><title>BUAA-OO-Unit2</title><link>https://lhy0424.top/p/oo-unit2/</link><pubDate>Fri, 18 Apr 2025 18:28:00 +0000</pubDate><guid>https://lhy0424.top/p/oo-unit2/</guid><description>&lt;img src="https://lhy0424.top/p/oo-unit2/cover.jpg" alt="Featured image of post BUAA-OO-Unit2" />&lt;h1 id="buaa-oo-unit2总结">BUAA-OO-Unit2总结
&lt;/h1>&lt;h2 id="三次迭代回顾">三次迭代回顾
&lt;/h2>&lt;p>&lt;strong>第五次作业&lt;/strong>&lt;/p>
&lt;p>本单元以某公司大楼的&lt;strong>目的选层电梯系统&lt;/strong>为背景。&lt;/p>
&lt;blockquote>
&lt;p>目的选层电梯系统的运行流程：&lt;/p>
&lt;ol>
&lt;li>进入电梯前，乘客输入目标楼层；&lt;/li>
&lt;li>系统根据设定的策略指定最合适的电梯来服务，将结果告知乘客；&lt;/li>
&lt;li>乘客进入指定电梯后，无需再次按楼层按钮，电梯会自动将其送至目标楼层。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>与普通的目的选层电梯系统有所区分的是，该公司为提高运行效率，充分考虑不同职位的员工所从事工作的时间急迫性，为不同类型的乘客请求赋予了&lt;strong>优先级指数&lt;/strong>。优先级指数描述了乘客到达目的楼层的急迫程度。&lt;/p>
&lt;p>&lt;strong>第六次作业&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>本次作业的新增内容有：&lt;/p>
&lt;ol>
&lt;li>取消“乘客请求指定电梯”约束，需要自行设计电梯分配策略&lt;/li>
&lt;li>新增“临时调度”请求；新增“RECEIVE”约束&lt;/li>
&lt;li>修改乘客请求格式；修改“OUT”指令输出格式；修改测试数据约束；修改“实现提示”“提示与警示”部分&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>&lt;strong>第七次作业&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>本次作业的新增内容有：&lt;/p>
&lt;ul>
&lt;li>新增双轿厢电梯改造&lt;/li>
&lt;li>修改&amp;quot;RECEIVE&amp;quot;约束；修改临时调度约束&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>&lt;strong>性能要求&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>抛开麻烦的公式，简单来说就是&lt;/p>
&lt;ul>
&lt;li>运行时间尽量短&lt;/li>
&lt;li>尽量满足乘客请求的优先级&lt;/li>
&lt;li>尽量减少系统的无效运行&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;h2 id="生产者-消费者模型">生产者-消费者模型
&lt;/h2>&lt;p>程序在运行中任何时刻都有可能收到用户请求，我们不能收到一个请求就立刻将其分配给某个电梯去处理，因为电梯处理一个请求需要时间，如果在处理一个请求的过程中接收到了一个请求该怎么办呢？是放弃当前请求还是放弃新接受到的请求？显然都不合理。&lt;/p>
&lt;p>于是我们想到可以给每部电梯新建一个待处理的容器（队列、数组等等），里面放着分配给该部电梯的乘客请求。我们收到一个请求只需要把该请求放入对应电梯的待处理容器里即可，而对于电梯来说，它的任务只有一个，那就是把这个容器里的请求全部处理完即可。于是我们很自然的实现了一个多线程中的经典设计模型**&amp;ldquo;生产者-消费者模型&amp;rdquo;**。&lt;/p>
&lt;p>在第一次作业中，由于每一个请求都有指定的电梯，所以我们可以直接把请求放在对应电梯的待处理容器里。而在后续两次迭代中，需要我们自己决定乘客请求分配给哪个电梯，并且已经分配的请求有可能被取消需要被再次分配，因此我们还需要一个分配线程（Dispatch Thread）。&lt;/p>
&lt;p>综上，在本次电梯单元，我们需要用到两个&lt;strong>生产者-消费者模型&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>输入线程&lt;/strong>作为生产者，&lt;strong>分配线程&lt;/strong>作为消费者。输入线程负责从外部读取用户请求，这些请求被放入⼀个输入缓冲区（请求队列）中。分配线程持续从该缓冲区中取出请求，进行传递sche和update信号、选择电梯等操作，并将调度结果发送到另⼀个调度缓冲区（电梯的待分配队列）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>分配线程&lt;/strong>作为生产者，六个&lt;strong>电梯线程&lt;/strong>作为消费者。分配线程将这些任务传递给具体的&lt;strong>电梯线程&lt;/strong>，后者执行具体的操作，如移动电梯、开关门、响应请求等。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="多线程中的同步块与锁">多线程中的同步块与锁
&lt;/h2>&lt;p>在学习了OS之后，我们发现 Java 中的&lt;code>synchronized&lt;/code> 关键字实现的就是一种管程（Monitor）机制，更准确地说，它实现的是一种&lt;strong>MESA风格的管程&lt;/strong>。相比于Hoare管程，MESA管程的特点是当一个线程被 &lt;code>notify()&lt;/code> 或 &lt;code>notifyAll()&lt;/code> 唤醒时，它只是被放入了就绪队列，还要等待重新竞争锁，我们在设计时需要考虑这个问题。&lt;/p>
&lt;p>synchronized是Java中的关键字，告诉JVM要对这个语句块进行线程互斥控制，其后的括号内需要一个对象用作锁，获取到锁才会执行代码块内的代码，执行结束后会释放锁。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">synchronized&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">object&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 获取锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 释放锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>为什么在Object.java中找不到和锁相关的代码？&lt;/strong>&lt;/p>
&lt;p>在 Java 里，每个对象都自动带有一个对象监视器（Monitor），这个机制由 JVM 层面（C++ 代码）实现，而不是在 &lt;code>Object.java&lt;/code> 源码中。&lt;/p>
&lt;p>Java 的 &lt;code>synchronized&lt;/code> 依赖于 &lt;strong>对象头（Object Header）&lt;/strong> 中的 &lt;strong>Mark Word&lt;/strong> 来存储锁状态。&lt;/p>
&lt;p>每个 Java 对象在 JVM 内存中存储结构如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>对象头&lt;/strong> (Header)&lt;/th>
&lt;th>&lt;strong>实例数据&lt;/strong>&lt;/th>
&lt;th>&lt;strong>对齐填充&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Mark Word（存储锁状态） + Class Pointer&lt;/td>
&lt;td>成员变量&lt;/td>
&lt;td>对齐数据&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>其中：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mark Word&lt;/strong> 记录了&lt;strong>对象的锁状态&lt;/strong>、线程 ID、GC 信息等。&lt;/li>
&lt;li>当 &lt;code>synchronized&lt;/code> 代码块运行时，JVM 会修改 &lt;code>Mark Word&lt;/code>，进行加锁和解锁操作。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>synchronized的使用方法有以下三种：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 关键字在实例方法上，锁为当前实例&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">instanceLock&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 关键字在静态方法上，锁为当前Class对象&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ssynchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">classLock&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 关键字在代码块上，锁为括号里面的对象&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">blockLock&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// code&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在三次作业中，我的所有同步设计都是通过synchronized关键字实现的，其实为了更好的性能应该使用读写锁分开处理读操作和写操作，但是由于时间原因就没有去重构。&lt;/p>
&lt;p>什么时候需要加锁是一个很关键的问题，笔者认为如果一个对象或数据可能同时被多个线程修改，或者多个线程同时读写该对象的状态，就应该加锁，或者使用线程安全的数据结构或机制。在三次作业中，RequestQueue（也就是电梯的待处理队列）就是需要重点关注的对象，因为分配线程和电梯线程都会对其进行访问。我们对其中可能造成数据冲突的方法都加上synchronized关键字，确保这些方法之间的互斥，这样我们就可以称RequestQueue类是&lt;strong>线程安全&lt;/strong>的，这样我们在使用该类的方法时就无需考虑同步问题。&lt;/p>
&lt;p>当然也需要注意不能无脑加锁，把所有方法都加上synchronized关键字固然能保证没有数据冲突，但这样会大幅降低并发效率，可能会在一些情况下超出课程组给出的一些时间限制。&lt;/p>
&lt;h2 id="策略设计">策略设计
&lt;/h2>&lt;h3 id="电梯调度策略">电梯调度策略
&lt;/h3>&lt;p>在三次作业中，每部电梯最多容纳6个乘客，我们该怎么保证在所有乘客都能到达目的地的情况下电梯运行时间尽可能少，优先级高的乘客能尽快到达目的地，并且尽可能减少耗电量。&lt;/p>
&lt;p>最常规的电梯调度策略是&lt;strong>Look算法&lt;/strong>。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>SCAN 算法&lt;/strong>（也称电梯算法）是一种磁盘调度算法，用于确定磁盘臂和磁头在处理读写请求时的运动。它让电梯在最底层和最顶层之间连续往返运行，在运行过程中响应处在于电梯运行方向相同的各楼层上的请求。&lt;/p>
&lt;p>&lt;strong>LOOK算法&lt;/strong>是对SCAN算法的改进，也是一种硬盘调度算法。当LOOK算法发现电梯所移动的方向上不再有请求时立即改变运行方向，而扫描算法则需要移动到最底层或者最顶层时才改变运行方向。&lt;/p>&lt;/blockquote>
&lt;p>现实中大多数电梯都采用LOOK算法或优化后的LOOK算法，但我们发现这个算法并没有考虑乘客的优先级。假设当前电梯在F1下行，电梯里有一个优先级为1的乘客正在前往B4，而这是有一个优先级为100的乘客在F2发出请求想要前往F7，显然这时候我们应该优先让电梯服务优先级为100的乘客。&lt;/p>
&lt;p>于是笔者尝试自己改造LOOK算法。仔细分析后，我们发现电梯调度问题的关键其实就是&lt;strong>何时反转方向&lt;/strong>。不过需要注意的是我们在设计算法时不能针对某种特殊情况去优化，这样容易过拟合（Overfitting），即特殊情况下性能优越，但是平均性能有所下降。&lt;/p>
&lt;p>以下是笔者的一次算法优化尝试：&lt;/p>
&lt;ul>
&lt;li>对于电梯内的乘客，我们应该优先送优先级足够大的乘客，确保优先级大的乘客能尽快到达目的地，而不会被优先级太小的乘客拖长到达时间。具体实现方法为如果电梯里非空，比较向上的优先级和向下的优先级来确定下一步的移动方向。&lt;/li>
&lt;/ul>
$$
Priority\_up = \sum_{toFLoor > curfloor} \frac{priority}{toFloor - curFloor}(对于电梯内所以目标楼层大于当前楼层的乘客)
$$$$
Priority\_up = \sum_{toFLoor &lt; curfloor} \frac{priority}{curFloor-toFloor}(对于电梯内所以目标楼层小于当前楼层的乘客)
$$&lt;ul>
&lt;li>对于电梯外的请求，我们应该先接优先级大且行程（ $|toFloor - fromFloor|$ ）较大的乘客。具体实现方法为如果电梯内部没人且电梯的待处理队列非空，则遍历待处理队列，找出综合优先级最大的乘客，根据该乘客的楼层确定电梯运行方向。&lt;/li>
&lt;/ul>
$$
Priority\_complex = priority \times |toFloor - fromFloor|
$$&lt;ul>
&lt;li>电梯内部满员时，我们可以让优先级足够小的乘客中途下电梯，让优先级足够大的乘客上去。具体实现方法为每到一层，先让到达目的地的乘客下来，如果电梯满员且该层存在未处理请求，则依次比较该层的所有请求乘客，如果其优先级为电梯内优先级最小的乘客的&lt;strong>5倍&lt;/strong>以上，则让电梯内优先级最小的乘客下来，让对应的外部请求乘客上电梯。&lt;/li>
&lt;/ul>
&lt;p>其实这是一次比较失败的算法优化，在一些极端情况性能确实优于LOOK算法，在中测时性能和LOOK相当，但在强测数据量较大时普遍不如LOOK算法。&lt;/p>
&lt;h3 id="分配策略">分配策略
&lt;/h3>&lt;p>在第六和第七次作业中，我们需要自己决定一个请求应该分配给哪部电梯。这就涉及到一个问题，分配给哪部电梯才能保证性能分尽可能高。&lt;/p>
&lt;ul>
&lt;li>如果其他5部电梯都正在sche或update，如果这时突然来了100个请求，这时100个请求全部分配给一个电梯会导致整体运行时间过长。我们应该给电梯接收乘客请求的数量设置一个最大值，在所有电梯都不接收请求时分配线程进入等待状态，某个电梯空闲时唤醒分配线程。&lt;/li>
&lt;li>对于第七次作业，电梯的可达楼层范围发生了变化，我们在分配时的条件也应该发生变化。我们应该首选可达fromFloor和toFloor的电梯接收请求，减少换乘带来的时间和电量损失，次选可达fromFloor，确保电梯可以接到对应乘客。&lt;/li>
&lt;/ul>
&lt;h2 id="调度器dispatch设计">调度器（Dispatch）设计
&lt;/h2>&lt;h3 id="结束和等待条件">结束和等待条件
&lt;/h3>&lt;ul>
&lt;li>未分配队列为空，但输入还未结束，应该进入等待状态，避免轮询。&lt;/li>
&lt;li>因为所有电梯暂时无法接收乘客请求而无法继续分配，但是未分配队列非空，应该进入等待，避免轮询。&lt;/li>
&lt;li>输入结束且未分配队列，此时应该跳出循环结束dispatch线程。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 输入未结束，还有可能获取请求&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEmpty&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">isEnd&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dispatchWait&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 所有电梯处于忙碌状态，但是还有未分配请求，等待空闲电梯&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">allElevatorsBusy&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">busyLock&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">busyLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">wait&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 输入结束，且没有未分配队列，告知电梯的已分配队列不会再有来自dispatch的分配&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isEnd&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getRequestQueue&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">setEnd&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 等待所有子任务结束&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Future&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">futures&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 关闭线程池&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">executor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">shutdown&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 分配操作&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dispatch&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其实分配线程有点类似 Java 中的&lt;strong>守护（Daemon）线程&lt;/strong>，其必须要等到其他所有线程都结束之后才能结束，其必须要在所有电梯线程都结束之后才能结束。&lt;/p>
&lt;h3 id="接收乘客请求">接收乘客请求
&lt;/h3>&lt;p>提供统一的&lt;code>offer&lt;/code>接口，通过传参区分不同行为。&lt;/p>
&lt;p>对于乘客请求，其所在楼层是会发生变化的，由于我们无法直接修改personRequest实例的fromFloor，我们可以通过一个map来记录每个乘客的当前楼层。&lt;/p>
&lt;p>请求有以下分类：&lt;/p>
&lt;ul>
&lt;li>乘客请求（PersonRequest）
&lt;ul>
&lt;li>首次请求，nowFloorMap记录的楼层即为请求的fromFloor，需要记入总请求数&lt;/li>
&lt;li>被取消的请求，nowFloorMap记录的楼层为乘客当前的楼层（通过参数传入），无需记入总请求数&lt;/li>
&lt;li>中途下电梯的乘客请求，nowFloorMap记录的楼层为乘客当前的楼层（通过参数传入），无需记入总请求数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>调度请求（ScheRequest）&lt;/li>
&lt;li>双轿厢改造请求（UpdateRequest）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Request&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isRearrange&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nowFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">instanceof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PersonRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PersonRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PersonRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">nowFloorMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">intOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getFromFloor&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isRearrange&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">nowFloorMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nowFloor&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">isRearrange&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">personRequestReceive&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">instanceof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ScheRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ScheRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ScheRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchSche&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sr&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">instanceof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">acceptUpdate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">acceptUpdate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchUpdate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hasFreeElevator&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">notifyAll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="分配请求">分配请求
&lt;/h3>&lt;ul>
&lt;li>对于调度请求和乘客请求，我们直接将请求放入电梯的未分配队列即可&lt;/li>
&lt;li>对于双轿厢改造请求，我们通过线程池来实现异步操作（后续详细解释）。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">dispatch&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">unDispatchSche&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ScheRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchSche&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">peek&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">sr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getRequestQueue&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unDispatchSche&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">unDispatchUpdate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchUpdate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Future&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">executor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">submit&lt;/span>&lt;span class="p">(()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">wait2clearInside&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">wait2clearInside&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UPDATE-BEGIN-%d-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UPDATE-END-%d-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">updateDone&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">updateDone&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">futures&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 分配给最近的空闲电梯&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">unDispatchQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PersonRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">peek&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 获取被分配电梯的序号&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">......&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;RECEIVE-%d-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getPersonId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getId&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getRequestQueue&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">unDispatchQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nowFloorMap&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pr&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">notifyAll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="双轿厢改造">双轿厢改造
&lt;/h2>&lt;p>&amp;ldquo;将一部电梯移动另一部电梯的电梯井中&amp;quot;的操作并不需要体现在代码中，我们只需要改变两部电梯的可达楼层范围即可。&lt;/p>
&lt;h3 id="输出同步">输出同步
&lt;/h3>&lt;p>同步输出是双轿厢电梯改造中比较麻烦的一点，因为其要求是两部电梯分别改造，但是需要统一输出。&lt;/p>
&lt;p>具体有两种实现方式：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>利用信号量进行线程间通信，当两个电梯都完成对应操作后统⼀输出&lt;/p>
&lt;/li>
&lt;li>
&lt;p>异步处理，让电梯在处理完之后sleep一段时间确保二者都完成了对应操作之后由分配线程输出。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>笔者采用的第二种方法：&lt;/p>
&lt;ul>
&lt;li>在电梯线程接收到update请求后，立即告知两部电梯，让其尽快停下来，并且不再接收请求，因为update请求优先级大于乘客请求，所以要让电梯从等待中唤醒（如果所有电梯都不能接收乘客请求了）。&lt;/li>
&lt;li>分配时，因为处理过程中涉及到分配线程的sleep，为了避免sleep期间不能接收请求的问题，我们创建一个子线程处理，子线程sleep并不影响分配线程。&lt;/li>
&lt;li>等待两部电梯线程处于静止状态并清空内部所有的乘客之后由分配器子线程统一输出BEGIN，接着子线程会sleep一秒，确保满足改造时间限制。&lt;/li>
&lt;li>电梯线程在清理完内部乘客之后也应该sleep1秒（最好大于1秒），因为BEGIN-END之间电梯是不能移动的，要等到输出END之后再输出。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Dispatch.java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExecutorService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">executor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newFixedThreadPool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Request&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">isRearrange&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">first&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nowFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">instanceof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PersonRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">instanceof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ScheRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">instanceof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">acceptUpdate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">acceptUpdate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchUpdate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hasFreeElevator&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">notifyAll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">dispatch&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">unDispatchSche&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{...}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">unDispatchUpdate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">UpdateRequest&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unDispatchUpdate&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Future&lt;/span>&lt;span class="o">&amp;lt;?&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">executor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">submit&lt;/span>&lt;span class="p">(()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">wait2clearInside&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">wait2clearInside&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UPDATE-BEGIN-%d-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1000&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UPDATE-END-%d-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorAId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">updateDone&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">elevators&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">ur&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getElevatorBId&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">updateDone&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">futures&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">future&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 分配给最近的空闲电梯&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">unDispatchQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{...}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">notifyAll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Elevator.java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">executeUpdate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">inUpdate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">updateHasBegin&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">insideQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;OPEN-%s-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">formatFloor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">minTimeOpen2Close&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">allPersonOut&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CLOSE-%s-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">formatFloor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">insideHasClear&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">hasAcceptUpdate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1100&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">updateParam&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">removeAllReceive&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">inUpdate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="换乘层限制">换乘层限制
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>线程间通信确保在同一电梯井的电梯的不会同时出现在换乘层。&lt;/p>
&lt;ul>
&lt;li>需要注意的是，在电梯前往换乘层的过程中就应该判定换乘层已经被占用。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>电梯不应在换乘层等待，到达换乘层完成对应操作后应尽快离开。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">WAIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">afterUpdate&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">canMove&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">MOVE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">canReverse&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">REVERSE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Status&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">WAIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UPDATE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OPEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MOVE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloorIsOccupied&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">modifyFloor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timePerFloor&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ARRIVE-%s-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">formatFloor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloorIsOccupied&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">REVERSE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloorIsOccupied&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">modifyFloor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">timePerFloor&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;ARRIVE-%s-%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">formatFloor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">curFloor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloor&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">transferFloorIsOccupied&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="架构设计">架构设计
&lt;/h2>&lt;p>整体架构比较简单，只有五个类&lt;/p>
&lt;ul>
&lt;li>MainClass主线程接收输入&lt;/li>
&lt;li>Dispatch线程对不同的请求进行分类处理&lt;/li>
&lt;li>RequestQueue类是电梯的待处理队列，每个电梯实例都有一个RequestQueue实例作为缓冲区&lt;/li>
&lt;li>Elevator线程对请求进行处理&lt;/li>
&lt;/ul>
&lt;p>笔者在设计的过程中找不到理由再抽象出一个类（可能OOP的思想还没学透彻吧），所以大量的处理逻辑集中在Elevator类中，导致Elevator类的代码行数接近500行。&lt;/p>
&lt;p>&lt;strong>HW5&lt;/strong> 无分配线程，输入线程直接分配给电梯的待处理队列，当时认为完全没有必要引入分配线程，没能考虑后续迭代问题&lt;/p>
&lt;p>&lt;strong>HW6&lt;/strong> 新增分配线程，在分配线程和电梯线程中增加调度逻辑&lt;/p>
&lt;p>&lt;strong>HW7&lt;/strong> 在分配线程和电梯线程中新增Update异步处理逻辑&lt;/p>
&lt;p>三次迭代中整体架构设计变化不大，所以这里只放最后一次的设计架构：&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedexported_from_idea.drawio%20%282%29.png"
loading="lazy"
alt="exported_from_idea.drawio (2)"
>&lt;/p>
&lt;p>时序图（sequence diagram）：&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedsequenceDiagram.drawio.png"
loading="lazy"
alt="sequenceDiagram.drawio"
>&lt;/p>
&lt;h2 id="debug">Debug
&lt;/h2>&lt;p>&lt;strong>输出顺序&lt;/strong>&lt;/p>
&lt;p>在多线程中print的顺序十分重要，因为当前线程的操作会影响到其他线程的运行，且题目中有着严格的输出循序要求。一些print需要在操作之后，一些需要在操作之前。&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-04-19%20111357.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-04-19%20110913.png"
loading="lazy"
>&lt;/p>
&lt;p>&lt;strong>楼层计数&lt;/strong>&lt;/p>
&lt;p>把楼层转化为int类型后，使用时不能直接用floor+1或floor-1，因为F1（+1）的下一层是B1（-1）而不是0。&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-04-19%20111931.png"
loading="lazy"
>&lt;/p>
&lt;h3 id="debug方法">debug方法
&lt;/h3>&lt;p>由于程序的输出需要通过官方程序，调试起来很麻烦，所以我大部分的debug都是通过添加输出来实现的。&lt;/p>
&lt;p>由于Java好像没有全局变量，只好在MainClass里声明一个public static final类型的变量来近似实现全局变量的效果。&lt;/p>
&lt;p>声明一个全局debug控制开关，用来控制是否显示调试信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// MainClass.java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MainClass&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// debug info&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RESET&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;\u001B[0m&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 重置颜色&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">YELLOW&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;\u001B[33m&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 黄色&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BLUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;\u001B[34m&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 蓝色&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Elevator.java&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MainClass&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">debug&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimableOutput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MainClass&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">BLUE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;WAITING...&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MainClass&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">RESET&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="评测机">评测机
&lt;/h2>&lt;p>由于官方的数据投喂包使用起来比较麻烦，所以自己写了一个自动化程序，能够实现快速的输入数据，再加上对输出的逻辑判断和性能指标计算即可构成一个简易评测机。&lt;/p>
&lt;p>hw7评测机源码：https://github.com/Accepted0424/quickHacker/blob/master/utils/quickInput_elevator3.py&lt;/p>
&lt;ul>
&lt;li>
&lt;p>支持windows和mac平台。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>给定java项目文件夹，每次运行时会遍历文件夹下所有&lt;code>.java&lt;/code>文件并自动引入官方依赖包生成&lt;code>.jar&lt;/code>文件。操作简便，编辑完 java文件之后只需要直接&lt;code>Run Code&lt;/code>即可，无需额外操作。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>可能&lt;/strong>比较完善的输出逻辑判断。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持输出三项性能指标。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>重要信息特殊颜色突出（SCHE、UPDATE、RECEIVE）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将输入输出保存至log，便于查找。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="心得体会">心得体会
&lt;/h2>&lt;h3 id="线程安全">线程安全
&lt;/h3>&lt;p>在接触多线程编程之前，我一直以为“让多个线程一起工作”只是提升程序效率的一种手段。然而，真正深入学习之后才发现：线程安全是多线程编程中最难也最核心的问题之一。它不像语法错误那样容易察觉，往往潜伏在系统中，直到某一次并发冲突才暴露出严重的后果。线程安全并不是“写代码时加几把锁”那么简单，而是一种思维方式，它需要我们从程序整体考虑，而不是局限于单一线程。写好多线程程序需要大量的经验积累！&lt;/p>
&lt;h3 id="层次化设计">层次化设计
&lt;/h3>&lt;p>在这个单元中，我并没有很好的关注”层次化设计“，大量的逻辑写在了Elevator类中，各种逻辑的耦合导致debug的时候十分痛苦，往往是牵一发而动全身，改好了一个bug可能导致了更多的bug。这也是我需要反思学习、积累经验的，很多时候一个优秀的架构设计往往能避免很多问题。&lt;/p>
&lt;h3 id="其他">其他
&lt;/h3>&lt;ul>
&lt;li>多线程编程需要摒弃之前的编程思维，更多的考虑时序关系。单线程程序的执行是线性的，开发者只需要关注代码从上到下的执行逻辑即可；但在多线程环境中，代码的执行顺序不再可控，线程之间可能并发运行、抢占资源，造成不可预测的结果。&lt;/li>
&lt;li>很多时候本地无法跑出官方评测机的结果，甚至在本地跑的结果也千奇百怪，这主要是因为我们只能让线程进入&lt;strong>就绪状态&lt;/strong>，而无法控制线程何时执行，这就带来了很多不确定性。最理想的情况当然是确保逻辑严密，JVM无论怎么调度都能保证正确性，但是这需要大量的经验累积和对底层知识的深入理解。&lt;/li>
&lt;li>在第三次作业的处理中引入了异步操作导致不确定性进一步增加，而且也有点不符合实际，个人认为是一次比较失败的设计，但是由于时间原因确实没精力再重构了。&lt;/li>
&lt;li>在刚学习Java的多线程编程时很多地方都感到困惑，不理解其背后的原理，但是在OS也学到线程和进程后，对很多东西都感到豁然开朗。&lt;/li>
&lt;li>原本以为手机上的软件开发没什么难度，但是自己实操了之后才明白，写一个软件不难，但是想写一个支持高并发，能够让几亿人同时使用的软件确实绝非易事，毕竟自己处理6个电梯线程就出现了数不清的bug。&lt;/li>
&lt;/ul></description></item><item><title>BUAA-OS-lab1杂记</title><link>https://lhy0424.top/p/os-lab1/</link><pubDate>Fri, 21 Mar 2025 17:00:00 +0000</pubDate><guid>https://lhy0424.top/p/os-lab1/</guid><description>&lt;img src="https://lhy0424.top/p/os-lab1/cover.jpg" alt="Featured image of post BUAA-OS-lab1杂记" />&lt;h1 id="buaa-os-lab1杂记">BUAA-OS-lab1杂记
&lt;/h1>&lt;h2 id="字节序byte-order">字节序（byte order）
&lt;/h2>&lt;p>Little endian(小端)与Big endian(大端)&lt;/p>
&lt;blockquote>
&lt;p>“endian”这个词出自 Jonathan Swin 在 1726 年写的讽刺小说《格列佛游记》( Guliver&amp;rsquo;s Travels )，小人国的内战就源于吃水煮鸡蛋时究竟是从大头(Big-Endian)敲开还是从小头(Little-Endian)敲开，由此曾发生过 6 次叛乱，其中一个皇帝送了命，另一个丢了王位。&lt;/p>&lt;/blockquote>
&lt;p>MSB（most significant bit/byte）LSB（least significant bit/byte）&lt;/p>
&lt;p>Little-endian 把MSB存放在高地址，Big-endian把MSB存放在低地址&lt;/p>
&lt;p>例如0x12345678&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>0字节&lt;/th>
&lt;th>1字节&lt;/th>
&lt;th>2字节&lt;/th>
&lt;th>3字节&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>EL&lt;/td>
&lt;td>0x78&lt;/td>
&lt;td>0x56&lt;/td>
&lt;td>0x34&lt;/td>
&lt;td>0x12&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EB&lt;/td>
&lt;td>0x12&lt;/td>
&lt;td>0x34&lt;/td>
&lt;td>0x56&lt;/td>
&lt;td>0x78&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Big-endian在内存中的顺序比较符合数字的书写习惯，而Little-endian可以确保在变量指针转换的时候地址保持不变。比如&lt;code>uint32*&lt;/code>转换为&lt;code>char*&lt;/code>，只需要取0字节即可。&lt;/p>
&lt;p>使用readelf -h可以查看elf header信息，可以看到mos操作系统是Little-endian的。&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E6%88%AA%E5%B1%8F2025-03-17%2011.10.35.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="elf">ELF
&lt;/h2>&lt;p>程序代码被编译和链接成包含二进制计算机指令的可执行文件。而可执行文件是有格式规范的，在 Linux 中，这个规范叫 Executable and Linkable format (ELF)。ELF 中包含二进制计算机指令、静态数据、元信息。&lt;/p>
&lt;p>从ELF的全称可以看出，ELF文件有两个特性Executable可执行的和Linkable可链接的，对应的ELF文件有两种视角。&lt;/p>
&lt;ul>
&lt;li>Linking view链接视角，节头表（section header table）包含了链接时所需的信息，告诉操作系统如何链接可执行文件，完成进程内存的初始化。&lt;/li>
&lt;li>Execution view执行视角，段头表（program header table）包含了运行时加载程序所需的信息，告诉操作系统如何加载可执行文件，完成进程内存的初始化。一个可执行的ELF一定有program header table。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedtypical_elf.jpg"
loading="lazy"
>&lt;/p>
&lt;p>ELF有三种类型&lt;/p>
&lt;ul>
&lt;li>relocatable 可重定位文件&lt;/li>
&lt;li>executable 可执行文件&lt;/li>
&lt;li>shared object 共享对象文件&lt;/li>
&lt;/ul>
&lt;h2 id="readelf">readelf
&lt;/h2>&lt;p>c语言中结构体就是一片连续的内存，elf.h文件里的结构体实际上是对内存的一种映射。&lt;/p>
&lt;p>我们在main.c中获得了一个指向ELF文件二进制数据的指针p，接着我们要实现的就是根据ELF文件的结构去解析这些二进制数据。&lt;/p>
&lt;p>解析之前我们需要先判断这些二进制数据是不是ELF文件。&lt;/p>
&lt;p>先假设这些数据是ELF格式的（将指针转换为我们定义的Elf32_Ehdr去读取ELF的文件头），ELF文件头里的e_ident就是用于告诉外界这是一个ELF文件的，我们只需要判断e_ident里是不是特定内容即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">is_elf_format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">binary&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">size_t&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Ehdr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ehdr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Elf32_Ehdr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">binary&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">size&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Elf32_Ehdr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_ident&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">EI_MAG0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ELFMAG0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_ident&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">EI_MAG1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ELFMAG1&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_ident&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">EI_MAG2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ELFMAG2&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_ident&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">EI_MAG3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ELFMAG3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">e_ident&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">EI_NIDENT&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="cm">/* Magic number and other info */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_type&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Object file type */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_machine&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Architecture */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">e_version&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Object file version */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Addr&lt;/span> &lt;span class="n">e_entry&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Entry point virtual address */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Off&lt;/span> &lt;span class="n">e_phoff&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Program header table file offset */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Off&lt;/span> &lt;span class="n">e_shoff&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section header table file offset */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">e_flags&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Processor-specific flags */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_ehsize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* ELF header size in bytes */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_phentsize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Program header table entry size */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_phnum&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Program header table entry count */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_shentsize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section header table entry size */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_shnum&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section header table entry count */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">e_shstrndx&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section header string table index */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">Elf32_Ehdr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Fields in the e_ident array. The EI_* macros are indices into the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> array. The macros under each EI_* macro are the values the byte
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> may have. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define EI_MAG0 0 &lt;/span>&lt;span class="cm">/* File identification byte 0 index */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define ELFMAG0 0x7f &lt;/span>&lt;span class="cm">/* Magic number byte 0 */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define EI_MAG1 1 &lt;/span>&lt;span class="cm">/* File identification byte 1 index */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define ELFMAG1 &amp;#39;E&amp;#39; &lt;/span>&lt;span class="cm">/* Magic number byte 1 */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define EI_MAG2 2 &lt;/span>&lt;span class="cm">/* File identification byte 2 index */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define ELFMAG2 &amp;#39;L&amp;#39; &lt;/span>&lt;span class="cm">/* Magic number byte 2 */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define EI_MAG3 3 &lt;/span>&lt;span class="cm">/* File identification byte 3 index */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define ELFMAG3 &amp;#39;F&amp;#39; &lt;/span>&lt;span class="cm">/* Magic number byte 3 */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>知道了这些二进制数据是一个ELF格式的文件之后我们就可以解析了。课程组需要我们实现的是解析section header table，我们该如何找到section header table呢？显然ELF文件头里已经告诉我们了，且还告诉了我们tabel里有几个header，每个header有多大，我们只需要在当前指针加上一个偏移量即可找到section header table。&lt;/p>
&lt;blockquote>
&lt;p>为什么要把binary转换为char类型的指针？&lt;/p>
&lt;p>假设偏移量为1，const void类型的指针不知道1指的是1字节还是1比特，而转换为char类型的指针指示就明确了偏移量的单位是一个char，即一字节。&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Get the address of the section table, the number of section headers and the size of a
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// section header.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sh_table&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">sh_entry_count&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Half&lt;/span> &lt;span class="n">sh_entry_size&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.1: Your code here. (1/2) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Off&lt;/span> &lt;span class="n">sh_off&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_shoff&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// section header table file offset
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh_entry_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_shnum&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// table entry num
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh_entry_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">ehdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">e_shentsize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// size of each table entry
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">sh_table&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)((&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">binary&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">sh_off&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// move to section header
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到section header table之后输出每个header的地址即可。需要注意的是结构体Elf32_Shdr映射的是一个section header，移动指针的时候需要转换指针类型确保每次移动一个header的长度。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// For each section header, output its index and the section address.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// The index should start from 0.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">sh_entry_count&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="n">Elf32_Shdr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">shdr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.1: Your code here. (2/2) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shdr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="n">Elf32_Shdr&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">sh_table&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">shdr&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">sh_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d:0x%x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Section segment header. */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_name&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section name */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_type&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section type */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_flags&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section flags */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Addr&lt;/span> &lt;span class="n">sh_addr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section addr */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Off&lt;/span> &lt;span class="n">sh_offset&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section offset */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_size&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section size */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_link&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section link */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_info&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section extra info */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_addralign&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section alignment */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Elf32_Word&lt;/span> &lt;span class="n">sh_entsize&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="cm">/* Section entry size */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="n">Elf32_Shdr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="加载内核文件">加载内核文件
&lt;/h2>&lt;p>了解了ELF格式之后，我们就要开始学习如何我们的mos操作系统内核了。&lt;/p>
&lt;p>对于32位处理器，MIPS体系结构中的虚拟内存为4GB。&lt;/p>
&lt;p>课程组已经贴心地给出了内存图，我们只需要把各部分放到正确的地址即可。&lt;/p>
&lt;p>根据内存图，我们把.text放到kernel text处（0x80020000），.data和.bss依次放置即可。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>.text 保存可执行文件的操作指令。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>.data 保存已初始化的全局变量和静态变量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>.bss 保存未初始化的全局变量和静态变量。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>.text .data .bss是ELF中比较重要的三个section。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o 4G -----------&amp;gt; +----------------------------+------------0x100000000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | ... | kseg2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o KSEG2 -----&amp;gt; +----------------------------+------------0xc000 0000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | Devices | kseg1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o KSEG1 -----&amp;gt; +----------------------------+------------0xa000 0000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | Invalid Memory | /|\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o +----------------------------+----|-------Physical Memory Max
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | ... | kseg0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o KSTACKTOP-----&amp;gt; +----------------------------+----|-------0x8040 0000-------end
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | Kernel Stack | | KSTKSIZE /|\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o +----------------------------+----|------ |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | Kernel Text | | PDMAP
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o KERNBASE -----&amp;gt; +----------------------------+----|-------0x8002 0000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | Exception Entry | \|/ \|/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o ULIM -----&amp;gt; +----------------------------+------------0x8000 0000-------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | User VPT | PDMAP /|\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UVPT -----&amp;gt; +----------------------------+------------0x7fc0 0000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | pages | PDMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UPAGES -----&amp;gt; +----------------------------+------------0x7f80 0000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | envs | PDMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UTOP,UENVS -----&amp;gt; +----------------------------+------------0x7f40 0000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UXSTACKTOP -/ | user exception stack | PTMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o +----------------------------+------------0x7f3f f000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | | PTMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o USTACKTOP ----&amp;gt; +----------------------------+------------0x7f3f e000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | normal user stack | PTMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o +----------------------------+------------0x7f3f d000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a | | |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a . . |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a . . kuseg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a . . |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a |~~~~~~~~~~~~~~~~~~~~~~~~~~~~| |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a | | |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UTEXT -----&amp;gt; +----------------------------+------------0x0040 0000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | reserved for COW | PTMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UCOW -----&amp;gt; +----------------------------+------------0x003f f000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | reversed for temporary | PTMAP |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o UTEMP -----&amp;gt; +----------------------------+------------0x003f e000 |
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o | invalid memory | \|/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> a 0 ------------&amp;gt; +----------------------------+ ----------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> o
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>SECTIONS {
/* Exercise 3.10: Your code here. */
/* fill in the correct address of the key sections: text, data, bss. */
/* Hint: The loading address can be found in the memory layout. And the data section
* and bss section are right after the text section, so you can just define
* them after the text section.
*/
/* Step 1: Set the loading address of the text section to the location counter &amp;quot;.&amp;quot;. */
/* Exercise 1.2: Your code here. (1/4) */
. = 0x80020000;
/* Step 2: Define the text section. */
/* Exercise 1.2: Your code here. (2/4) */
.text : { *(.text) }
/* Step 3: Define the data section. */
/* Exercise 1.2: Your code here. (3/4) */
.data : { *(.data) }
bss_start = .;
/* Step 4: Define the bss section. */
/* Exercise 1.2: Your code here. (4/4) */
.bss : { *(.bss) }
bss_end = .;
. = 0x80400000;
end = . ;
}
&lt;/code>&lt;/pre>
&lt;p>其实内存布局并不像内存图画的那样界限分明，.text放到其他地方也是可以正常运行的，比如把.text放到0x80010000也是可以正常运行的，不过最好遵循课程组的要求。&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E6%88%AA%E5%B1%8F2025-03-17%2020.48.42.png"
loading="lazy"
>&lt;/p>
&lt;h2 id="内核入口">内核入口
&lt;/h2>&lt;p>在把对应的section加载到正确的位置后，我们需要考虑如何启动内核。第一步当然是找到内核的入口了。&lt;/p>
&lt;p>打开init目录下的start.S，补全我们的代码，将 sp 寄存器设置到内核栈空间的位置上，随后跳转到 mips_init 函数。&lt;/p>
&lt;p>在kernel.lds文件中我们看到这样一行，其作用是告诉链接器程序的入口地址，即程序执行的第一条指令的地址。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ENTRY(_start)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>那么这个_start在哪呢？在start.S文件中我们看到这样一行，其作用是声明一个全局符号_start，使链接器能找到_start。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">EXPORT(_start)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在include/asm/asm.h文件下我们可以看到EXPORT宏的展开形式。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define EXPORT(symbol) \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> .globl symbol; \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> symbol:
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>继续往下看，我们看到以下两行代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.set at
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.set reorder
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在上学期的co中，我们在mars里一定看到过一个叫$at的寄存器，其全称是&lt;strong>Assembler Temporary&lt;/strong>，即临时寄存器。&lt;/p>
&lt;p>在mips中有一些指令本身并不是 MIPS 硬件支持的原生指令，而是由汇编器自动翻译成一条或多条真正的 MIPS 指令。比如&lt;code>li&lt;/code>指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">li $t0, 0x12345678 # 伪指令
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这条指令会被汇编器翻译为&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">lui $at, 0x1234
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori $t0, $at, 0x5678
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里就用到了at寄存器。&lt;code>.set at&lt;/code>指令就是告诉汇编器允许使用at寄存器进行伪指令展开。如果使用了&lt;code>.set noat&lt;/code>，那么汇编器再遇到需要使用到at寄存器的伪指令时会报错。&lt;/p>
&lt;p>在co中我们对流水线印象深刻。我们知道一些指令会在不影响结果的情况下被放到延迟槽里执行，这项工作也是由汇编器来完成的，&lt;code>.set reorder&lt;/code>指令就是允许汇编器对指令进行重排的，我们也可以使用&lt;code>.set noreorder&lt;/code>来禁止汇编器的重排行为。&lt;/p>
&lt;p>完成了一些初始化设置之后，start.S文件会先对.bss区域进行清零操作，即未初始化的全局变量和静态变量初始值为0。这里我们回顾一下c语言中的变量类型。&lt;/p>
&lt;ul>
&lt;li>static类型的int变量存储在.bss（未初始化）和.data（已初始化）生命周期是从主程序的开始到结束，我们每次调用func函数变量c和d都会自增1。需要注意的是，虽然它们的生命周期是整个程序的运行周期，但它们只在其定义的函数内可访问。&lt;/li>
&lt;li>普通类型的int变量存储在栈上，其生命周期是从函数的开始到结束，每次进入 &lt;code>func()&lt;/code> 时会重新分配内存，并在函数返回时销毁。&lt;/li>
&lt;li>普通类型的变量如何没有初始化其数值是不确定的，static类型的变量如果未初始化其数值默认为0。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span>&lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// staged in .data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// staged in .bss
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">func&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// staged in .data
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// staged in .bss
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">e&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// staged in stack
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// staged in stack
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;c is %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;d is %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;e is %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;f is %d&lt;/span>&lt;span class="se">\n\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">func&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">func&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">func&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git@23373112:~/learnClang $ gcc main.c -o main &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> ./main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c is &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d is &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e is &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">f is &lt;span class="m">32677&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c is &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d is &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e is &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">f is &lt;span class="m">32678&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">c is &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">d is &lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e is &lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">f is &lt;span class="m">32679&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>.bss清零结束之后，程序会先把CP0状态置为0禁用中断，确保内核的初始化不会被打断，然后把栈指针放到正确的位置，最后跳转到mips_init（init/init.c文件中），对于lab1，mips_init只有打印的功能。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">mips_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">u_int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">penv&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">u_int&lt;/span> &lt;span class="n">ram_low_size&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;init.c:&lt;/span>&lt;span class="se">\t&lt;/span>&lt;span class="s">mips_init() is called&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab2:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// mips_detect_memory(ram_low_size);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// mips_vm_init();
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// page_init();
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab3:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// env_init();
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab3:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE_PRIORITY(user_bare_loop, 1);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE_PRIORITY(user_bare_loop, 2);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab4:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(user_tltest);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(user_fktest);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(user_pingpong);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab6:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(user_icode); // This must be the first env!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab5:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(user_fstest);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(fs_serv); // This must be the second env!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// ENV_CREATE(user_devtst);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// lab3:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// schedule(0);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">halt&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>我们在内存图中可以找到kernel stack的位置，但是为什么栈帧要设置在kernel stack的栈顶（KSTACKTOP = 0x8004000）？&lt;/p>
&lt;p>进程地址的分布取决于操作系统，栈向什么方向增长取决于操作系统与CPU的组合。&lt;/p>
&lt;p>是否还记得上学期计算机组成原理中mips是如何在调用函数前保护和恢复寄存器的，是先$sp自减再$sp自增，表明对于mips指令集栈的生长方向是由高地址向低地址生长的。&lt;/p>
&lt;p>至于为什么要这样设定，更多的是历史原因，许多早期处理器在基址寄存器寻址时仅支持无符号偏移，因此如果栈向低地址增长，相对栈指针的地址计算更高效。&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;asm/asm.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;mmu.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">text&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">EXPORT&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_start&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">set&lt;/span> &lt;span class="n">at&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="n">set&lt;/span> &lt;span class="n">reorder&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Lab 1 Key Code &amp;#34;enter-kernel&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* clear .bss segment */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">la&lt;/span> &lt;span class="n">v0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bss_start&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">la&lt;/span> &lt;span class="n">v1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bss_end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">clear_bss_loop&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">beq&lt;/span> &lt;span class="n">v0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">clear_bss_done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sb&lt;/span> &lt;span class="n">zero&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">v0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">addiu&lt;/span> &lt;span class="n">v0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">v0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">j&lt;/span> &lt;span class="n">clear_bss_loop&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* End of Key Code &amp;#34;enter-kernel&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">clear_bss_done&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* disable interrupts */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mtc0&lt;/span> &lt;span class="n">zero&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CP0_STATUS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* hint: you can refer to the memory layout in include/mmu.h */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* set up the kernel stack */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.3: Your code here. (1/2) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">la&lt;/span> &lt;span class="n">sp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KSTACKTOP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* jump to mips_init */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.3: Your code here. (2/2) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">j&lt;/span> &lt;span class="n">mips_init&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="printk">printk
&lt;/h2>&lt;h3 id="调用链">调用链
&lt;/h3>&lt;p>完成了之前的工作，我们的内核已经能正常启动了，现在要做的是实现打印功能，即完成printk函数，使mips_init中的printk函数能正确被调用。&lt;/p>
&lt;p>观察init.c的头文件声明部分。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;asm/asm.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;env.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;pmap.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;printk.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sched.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;trap.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>显然printk函数的声明在printk.h文件中，下面我们来分析printk.h代码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># include/printk.h
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifndef _printk_h_
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define _printk_h_
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;machine.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdarg.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">_panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef MOS_HANG_ON_PANIC
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="nf">__attribute__&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">noreturn&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define panic(...) _panic(__FILE__, __LINE__, __func__, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define panic_on(expr) \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> do { \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> int _r = (expr); \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> if (_r != 0) { \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> panic(&amp;#34;&amp;#39;&amp;#34; #expr &amp;#34;&amp;#39; returned %d&amp;#34;, _r); \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> } \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"> } while (0)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif &lt;/span>&lt;span class="cm">/* _printk_h_ */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>头文件声明部分&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifndef _printk_h_
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define _printk_h_
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">// 头文件内容
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#endif &lt;/span>&lt;span class="cm">/* _printk_h_ */&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果_printk_h_没有被定义则定义_printk_h_，避免重复头文件被重复包含。&lt;/p>
&lt;p>函数声明部分，panic函数是用来处理错误的函数，这里不做过多的解释。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在开发与操作系统内核相关的项目，&lt;code>printk&lt;/code> 是内核提供的函数（其中k就是kernel的意思）。此处只有声明没有实现，具体实现在kern/printk.c中。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># kern/printk.c
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;print.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;printk.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;trap.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Lab 1 Key Code &amp;#34;outputk&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">outputk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">size_t&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printcharc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* End of Key Code &amp;#34;outputk&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Lab 1 Key Code &amp;#34;printk&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">va_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">vprintfmt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outputk&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">va_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* End of Key Code &amp;#34;printk&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_tf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">Trapframe&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">tf&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">regs&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]);&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;$%2d = %08x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;HI = %08x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">hi&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;LO = %08x&lt;/span>&lt;span class="se">\n\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">lo&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CP0.SR = %08x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">cp0_status&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CP0.BadV = %08x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">cp0_badvaddr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CP0.Cause = %08x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">cp0_cause&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;CP0.EPC = %08x&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">tf&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">cp0_epc&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后我们发现printk函数又调用了vprintfmt函数，继续跳转到vprintfmt的实现（include/print.h）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># include/print.h
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifndef _print_h_
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define _print_h_
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdarg.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;types.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">void&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">size_t&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* Lab 1 Key Code &amp;#34;vprintfmt-overview&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * &amp;#39;vprintfmt&amp;#39; is a formatting function that allows different backends (i.e., output sinks)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * to be used for printing. It takes four arguments:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;fmt_callback_t out&amp;#39;: a function pointer to the output sink that receives the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * formatted output generated by &amp;#39;vprintfmt&amp;#39;.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;void *data&amp;#39;: a context pointer passed to the &amp;#39;out&amp;#39; callback function. It can be used
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * to store additional output sink-specific data.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;const char *fmt&amp;#39;: the format string, similar to the format string in &amp;#39;printf&amp;#39;.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;va_list ap&amp;#39;: a variadic argument list that provides the arguments to be formatted.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The format callback function &amp;#39;out&amp;#39; receives the following arguments:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;void *data&amp;#39;: the same &amp;#39;data&amp;#39; pointer passed to &amp;#39;vprintfmt&amp;#39;.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;const char *buf&amp;#39;: a pointer to a buffer containing the formatted output.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * - &amp;#39;size_t len&amp;#39;: the number of bytes in the buffer.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Note that the buffer may not be null-terminated and may contain embedded null bytes,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * so the output sink should treat &amp;#39;len&amp;#39; as the actual length of the buffer to print.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">vprintfmt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* End of Key Code &amp;#34;vprintfmt-overview&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>typedef 定义了一个名为 &lt;code>fmt_callback_t&lt;/code> 的类型，它是一个函数指针类型，指向一个接受 &lt;code>void *data&lt;/code>、&lt;code>const char *buf&lt;/code> 和 &lt;code>size_t len&lt;/code> 作为参数的函数。&lt;/p>
&lt;p>截止又是只声明了vprintfmt函数但是没有实现，我们继续找，在lib目录下的print.c文件中我们终于找到了vprintfmt的实现，也正是我们需要填空的部分。&lt;/p>
&lt;p>先解释下函数名vprintfmt，v代表&amp;quot;variadic&amp;quot;（可变参数），fmt代表format格式化，即这是一个支持可变参数并且进行格式化输出的函数。&lt;/p>
&lt;p>再来看vprintfmt的传入参数&lt;/p>
&lt;ul>
&lt;li>&lt;code>fmt_callback_t out&lt;/code>回调函数，往前追溯我们发现这个参数在调用时传入的是outputk函数，即遍历buf，每次输出一个char。我们可以理解为一个无格式好打印字符串的函数。&lt;/li>
&lt;li>&lt;code>void *data&lt;/code>指向任意类型的指针，可以用于传递给回调函数的上下文信息。在回调函数中，&lt;code>data&lt;/code> 可以用来存储或传递与输出相关的附加数据（比如输出目的地、日志上下文等），但是在lab1中并没有涉及相关处理。&lt;/li>
&lt;li>&lt;code>const char *fmt&lt;/code>格式化字符串，也就是类似&amp;quot;a is %d&amp;quot;这样带有%d等占位符的字符串。&lt;/li>
&lt;li>&lt;code>va_list ap&lt;/code>可变参数列表，包含我们用来替换占位符的数据。&lt;/li>
&lt;/ul>
&lt;p>我们要做的就是解析格式化字符串fmt，将其中&lt;code>%[flags][width][length]&amp;lt;specifier&amp;gt;&lt;/code>形式的格式符替换为正确的字符串，具体代码如下，遇到&lt;code>%&lt;/code>就将之前的字符串输出，然后解析格式符利用已有函数输出（print_num、print_char等等），直到遇到&lt;code>\0&lt;/code>结束循环。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;span class="lnt">281
&lt;/span>&lt;span class="lnt">282
&lt;/span>&lt;span class="lnt">283
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># lib/print.c
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;print.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* forward declaration */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">print_char&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">print_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">vprintfmt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">long_flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// output is long (rather than int)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">neg_flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// output is negative
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// output is left-aligned
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// padding char
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(;;)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* scan for the next &amp;#39;%&amp;#39; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (1/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="sc">&amp;#39;%&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="sc">&amp;#39;\0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* flush the string found so far */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (2/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* check &amp;#34;are we hitting the end?&amp;#34; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (3/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="sc">&amp;#39;\0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* we found a &amp;#39;%&amp;#39; */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (4/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* check format flag */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (5/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ladjust&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">padc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="sc">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ladjust&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">padc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* get width */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (6/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">width&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="sc">&amp;#39;9&amp;#39;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="sc">&amp;#39;\0&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">width&lt;/span> &lt;span class="o">*=&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">width&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* check for long */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (7/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="sc">&amp;#39;l&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">neg_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">long_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;D&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">long_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Refer to other parts (case &amp;#39;b&amp;#39;, case &amp;#39;o&amp;#39;, etc.) and func &amp;#39;print_num&amp;#39; to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * complete this part. Think the differences between case &amp;#39;d&amp;#39; and the
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * others. (hint: &amp;#39;neg_flag&amp;#39;).
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* Exercise 1.4: Your code here. (8/8) */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">num&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">neg_flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">neg_flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;o&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;O&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">long_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;u&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;U&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">long_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;x&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">long_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;X&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">long_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">c&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_char&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;s&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="nf">va_arg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">print_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="sc">&amp;#39;\0&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* output this char as it is */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fmt&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/* --------------- local help functions --------------------- */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_char&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">space&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ladjust&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">s1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">s1&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">len&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ladjust&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">print_num&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">fmt_callback_t&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">u&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">base&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">neg_flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">ladjust&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">upcase&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* algorithm :
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 1. prints the number from left to right in reverse form.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 2. fill the remaining spaces with padc if length is longer than
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * the actual length
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * TRICKY : if left adjusted, no &amp;#34;0&amp;#34; padding.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * if negtive, insert &amp;#34;0&amp;#34; padding between &amp;#34;0&amp;#34; and number.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 3. if (!ladjust) we reverse the whole string including paddings
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 4. otherwise we only reverse the actual string representing the num.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">actualLength&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">70&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">do&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">u&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">base&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">tmp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">upcase&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;A&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">tmp&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;a&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">tmp&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">u&lt;/span> &lt;span class="o">/=&lt;/span> &lt;span class="n">base&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">u&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">neg_flag&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="o">++&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* figure out actual length and adjust the maximum length */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">actualLength&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">p&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">actualLength&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">actualLength&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* add padding */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ladjust&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">padc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">neg_flag&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">ladjust&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">padc&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="sc">&amp;#39;0&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">actualLength&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sc">&amp;#39;-&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">actualLength&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">padc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* prepare to reverse the string */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">begin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">end&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ladjust&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">actualLength&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* adjust the string pointer */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">end&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">begin&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">buf&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">begin&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">out&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>回顾一下整个调用链&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">graph TD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> printk --&amp;gt; include/printk.h --&amp;gt; kern/printk.c --&amp;gt; include/print.h --&amp;gt; lib/print.c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>include目录：目录通常包含所有的头文件，这些头文件提供了函数声明、宏、结构体定义和常量等，这些头文件为内核的各个模块提供了接口，使得不同模块之间可以共享信息和功能。&lt;/li>
&lt;li>kern目录：通常包含与内核核心功能（如进程调度、内存管理、系统调用等）相关的实现代码。它主要是内核的实现部分。&lt;/li>
&lt;li>lib目录：包含实现内核中通用功能和服务的库函数。它通常存放一些通用的辅助代码，这些代码可以被多个内核模块共享。它通常不涉及具体的硬件操作，而是提供一些基础的功能支持，例如字符串操作、内存管理、数学计算等。&lt;/li>
&lt;/ul>
&lt;p>需要注意，我们实现的是printk函数，而不是printf函数，虽然二者很像。&lt;/p>
&lt;ul>
&lt;li>printk：用于内核空间，是内核中的一个函数，输出到内核日志缓冲区，通常不会直接显示在用户的终端上。&lt;/li>
&lt;li>printf：用于用户空间，是C标准库的一部分，输出到标准输出（stdout），通常是用户的终端。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>如何理解调用链？&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>我们要在一个文件中使用printk函数，就必须使用引入include文件夹里的printk.h头文件，至于它是如何实现的并不是程序员需要关心。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当链接器看到头文件中声明了printk函数时，它会查找所有目标文件，找到 printk 函数的实际实现（&lt;code>kern/printk.c&lt;/code> 中），并将其与其他部分链接在一起。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在kern/printk.c中实现了printk函数，而printk的实现需要用到vprintfmt函数，这个函数在include/print.h中声明，但是仍然没有实现。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当链接器看到头文件中声明了vprintfmt函数时，它会查找所有目标文件，找到vprintfmt函数的实际实现（&lt;code>lib/print.c&lt;/code> 中），并将其与其他部分链接在一起。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="可变参数">可变参数
&lt;/h3>&lt;p>printk的具体实现中，&lt;code>...&lt;/code>代表可变参数，即后面有数量未知的参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">printk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">va_list&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">va_start&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">vprintfmt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">outputk&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fmt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">va_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ap&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>va_xxx是&lt;code>stdarg.h&lt;/code> 库中的宏，&lt;code>stdarg.h&lt;/code>是C标准库，我们在路径&lt;code>/usr/lib/gcc-cross/mips-linux-gnu/12/include&lt;/code>下可以找到这个文件，具体实现细节比较复杂，笔者也没有看懂，感兴趣的可以自行研究。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>va_list&lt;/code>：用来声明一个变量，用于保存可变参数的列表。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>va_start(va_list args, last_fixed_arg)&lt;/code>：初始化 &lt;code>va_list&lt;/code> 变量，告诉宏从哪个固定参数开始提取可变参数。&lt;code>last_fixed_arg&lt;/code> 是在参数列表中的最后一个固定参数。必须调用 &lt;code>va_start&lt;/code> 来初始化 &lt;code>va_list&lt;/code>，否则无法访问可变参数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>va_arg(va_list args, type)&lt;/code>：访问可变参数列表中的下一个参数。&lt;code>type&lt;/code> 是你希望获取的参数类型，每次调用 &lt;code>va_arg&lt;/code> 后，指针都会向后移动。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>va_end(va_list args)&lt;/code>：用于结束对可变参数的访问。调用完 &lt;code>va_arg&lt;/code> 后，必须调用 &lt;code>va_end&lt;/code> 来清理资源。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="结语">结语
&lt;/h2>&lt;p>lab1的课下练习，如果仅仅是完成填空是很容易的，但是如果要理解内核中的每一行代码在干什么是一件很费时间（同时也很有趣）的事情。希望同学们能够保持好奇，不仅仅拘泥于完成练习，积极探索操作系统的魅力。&lt;/p></description></item><item><title>BUAA-OO-Unit1</title><link>https://lhy0424.top/p/oo-unit1/</link><pubDate>Wed, 19 Mar 2025 12:26:00 +0000</pubDate><guid>https://lhy0424.top/p/oo-unit1/</guid><description>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedundefinedimage7-1.png" alt="Featured image of post BUAA-OO-Unit1" />&lt;h1 id="buaa-oo-unit1总结">BUAA-OO-Unit1总结
&lt;/h1>&lt;h2 id="三次迭代回顾">三次迭代回顾
&lt;/h2>&lt;h3 id="hw1">HW1
&lt;/h3>&lt;blockquote>
&lt;p>本次作业需要完成的任务为：读入一个包含加、减、乘、乘方以及括号（其中括号的深度&lt;strong>至多为 1 层&lt;/strong>）的&lt;strong>单变量&lt;/strong>表达式，输出&lt;strong>恒等变形展开所有括号后&lt;/strong>的表达式。&lt;/p>
&lt;p>在本次作业中，&lt;strong>展开所有括号&lt;/strong>的定义是：对原输入表达式 E&lt;em>E&lt;/em> 做&lt;strong>恒等变形&lt;/strong>，得到新表达式 E′&lt;em>E&lt;/em>′，且 E′&lt;em>E&lt;/em>′ 中不含有字符 &lt;code>(&lt;/code> 、 &lt;code>)&lt;/code>和空白字符 。&lt;/p>&lt;/blockquote>
&lt;h3 id="hw2">HW2
&lt;/h3>&lt;blockquote>
&lt;p>本次作业中需要完成的任务为：读入&lt;strong>自定义递推函数的定义&lt;/strong>以及一个包含幂函数、三角函数、自定义递推函数调用的&lt;strong>表达式&lt;/strong>，输出&lt;strong>恒等变形展开所有括号后&lt;/strong>的表达式。&lt;/p>
&lt;p>在本次作业中，&lt;strong>展开所有括号&lt;/strong>的定义是：对原输入表达式 E&lt;em>E&lt;/em> 做&lt;strong>恒等变形&lt;/strong>，得到新表达式 E′&lt;em>E&lt;/em>′。其中，E′&lt;em>E&lt;/em>′ 中不再含有自定义递推函数，且只包含&lt;strong>必要的括号&lt;/strong>（必要括号的定义见&lt;strong>公测说明-正确性判定&lt;/strong>）。&lt;/p>&lt;/blockquote>
&lt;h3 id="hw3">HW3
&lt;/h3>&lt;blockquote>
&lt;p>本次作业中需要完成的任务为：读入&lt;strong>一系列自定义函数的定义&lt;/strong>以及一个包含幂函数、三角函数、自定义函数调用、求导算子的&lt;strong>表达式&lt;/strong>，输出&lt;strong>恒等变形展开所有括号后&lt;/strong>的表达式。&lt;/p>
&lt;p>在本次作业中，&lt;strong>展开所有括号&lt;/strong>的定义是：对原输入表达式 E&lt;em>E&lt;/em> 做&lt;strong>恒等变形&lt;/strong>，得到新表达式 E′&lt;em>E&lt;/em>′。其中，E′&lt;em>E&lt;/em>′ 中不再含有自定义函数，不再含有求导算子，且只包含&lt;strong>必要的括号&lt;/strong>（必要括号的定义见&lt;strong>公测说明-正确性判定&lt;/strong>）。&lt;/p>
&lt;p>在本次作业中，&lt;strong>自定义函数&lt;/strong> 指自定义递推函数和自定义普通函数。&lt;/p>&lt;/blockquote>
&lt;h2 id="设计思路">设计思路
&lt;/h2>&lt;p>&lt;strong>对于一个很复杂的表达式，我们该如何解析？&lt;/strong>&lt;/p>
&lt;p>根据递归下降的思路，我们把表达式分为expr（表达式）、term（项）和factor（因子）。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>term通过 &amp;lsquo;+&amp;rsquo; 或 &amp;lsquo;-&amp;rsquo; (不被括号包裹的加减号) 连接构成expr&lt;/p>
&lt;ul>
&lt;li>为了简化分割过程，我们可以把所有的 &amp;lsquo;-&amp;rsquo; 替换为 &amp;lsquo;+-&amp;rsquo;，把 &amp;lsquo;-&amp;rsquo; 看作项的一部分，从而可以只根据 &amp;lsquo;+&amp;rsquo; (不被括号包裹的加号)分割 。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>factor通过 &amp;lsquo;*&amp;rsquo; (不被括号包裹的乘号) 连接构成term。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>上述两个基本原则是我们解析表达式的关键，基于这两个原则我们可以从expr中提取若干term，从term中提取若干factor。&lt;/p>
&lt;p>笔者舍弃了传统的Lexer和Parser，我认为解析Expr的方法就应该在Expr类里，在new一个Expr的实例的时候就提取出表达式里的term，构成一个ArrayList&amp;lt;Term&amp;gt;作为该Expr实例的一个属性。同理，在new一个Term的实例时候就提取出项里的factor，构成一个ArrayList&amp;lt;Factor&amp;gt;作为该Term实例的一个属性。&lt;/p>
&lt;ul>
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Expr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Term&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">terms&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">expr&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">terms&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">extractTerms&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Term&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">extractTerms&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{...}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Term&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Factor&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">factors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Term&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">term&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">factors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">extractFactors&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Factor&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">extractFactors&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{...}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedundefinedimage7-1.png"
loading="lazy"
alt="image7-1"
>&lt;/p>
&lt;p>&lt;strong>因子有好多类型，该如何处理？&lt;/strong>&lt;/p>
&lt;p>使用抽象类+工厂模式&lt;/p>
&lt;p>各类因子（ExprFactor、powFactor等等）继承抽象类Factor，这样Term里的存储因子的ArrayList&amp;lt;Factor&amp;gt;就可以存储各类因子了。&lt;/p>
&lt;p>但是我们在new一个Factor的时候是不知道这个Factor的类型的，而不同因子又有不同的方法和属性，所以我们需要一个工厂，我们传入一个因子的字符串，工厂为我们提供对应类型的因子。&lt;/p>
&lt;p>至于如何判断因子的种类，我采用的是正则匹配的方法，指导书中给出了明确的形式化表述，所以我们根据其要求构造正则表达式即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">FactorFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Factor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getFactor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">constRe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">matcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ConstFactor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">powerRe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">matcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PowerFactor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sinRe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">matcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cosRe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">matcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SinCosFactor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">recursiveFuncRe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">matcher&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">matches&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RecursiveFuncFactor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>在得到了表达式树之后如何化简？&lt;/strong>&lt;/p>
&lt;p>用我们小学二年级就学到的思路，把每个因子都化成单项式，然后合并同类项。&lt;/p>
&lt;p>在第二次作业添加了三角函数之后，表达式化简后的最小不可分单元不再是单项式，需要重新定义最小单元：&lt;code>AtomElement&lt;/code>。
&lt;/p>
$$
\sum (coe*x^{pow}*\prod sin(factor)^{pow}\prod cos(factor)^{pow})
$$&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">AtomicElement&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BigInteger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">coe&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">xPow&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">yPow&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">SinCosFactor&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">triFactors&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>为什么BigInteger没有用final修饰，因为coe系数会有取相反数的操作。&lt;/li>
&lt;li>为什么会有一个yPow，那是因为后续的函数定义解析过程中会出现y项，不过结果中不会出现y项。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>定义了最小单元之后我们如何获得AtomElement呢？&lt;/strong>&lt;/p>
&lt;p>为了规范和统一，我们定义一个接口，要求能被转化为AtomElement的类（Expr、Term、Factor）都必须实现一个获得ArrayList&amp;lt;AtomElement&amp;gt;的方法。&lt;/p>
&lt;p>我们规定Expr/Term/Factor等价于对应getAtomicElement()得到的ArrayList&amp;lt;AtomElement&amp;gt;中的每个元素&lt;strong>相加&lt;/strong>。&lt;/p>
&lt;p>expr的getAtomicElements()方法需要调用其包含的每一个term的getAtomElements()方法，每一个term又需要调用其包含的每一个factor的getAtomElements()方法，然后一层层返回最终得到表达式expr包含的所有AtomElement，合并可以合并的AtomElement之后再把每一个AtomElement转化为字符串再用 &amp;lsquo;+&amp;rsquo; 相连即得到最终的化简结果。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">interface&lt;/span> &lt;span class="nc">AtomicArrayConvertible&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AtomicElement&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAtomicElements&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>求导该如何解决？&lt;/strong>&lt;/p>
&lt;p>由于作业中规定求导因子的dx(&amp;hellip;)括号内为一个表达式，我们可以仿照getAtomicElements()的思路，再定义一个Derivable接口，所有可导的东西都需要实现这个接口中的derive方法。&lt;/p>
&lt;p>我们同样需要规定Expr/Term/Factor求导后的结果等价于对应derive()得到的ArrayList&amp;lt;AtomElement&amp;gt;中的每个元素&lt;strong>相加&lt;/strong>。&lt;/p>
&lt;p>遇到一个求导因子，我们获取其最外层括号内的内容，构造一个expr实例，然后调用这个expr的derive()方法，expr的derive()方法需要调用其包含的每一个term的derive()方法，每一个term又需要调用其包含的每一个factor的derive()方法，然后一层层返回最终得到表达式expr包含的所有AtomElement，合并可以合并的AtomElement之后再把每一个AtomElement转化为字符串再用 &amp;lsquo;+&amp;rsquo; 相连即得到最终的求导结果。&lt;/p>
&lt;p>需要注意，求导因子也需要实现derive方法，即可以对一个求导因子再求导。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">interface&lt;/span> &lt;span class="nc">Derivable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AtomicElement&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">derive&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>递归函数该如何解决？&lt;/strong>&lt;/p>
&lt;p>由于指导书限制了每次最多只会定义一个递归函数，所以我们可以再递归函数因子下用一个static类型的HashMap存储递归函数的三条定义（f{0}, f{1}, f{n}），key为函数的序号，value为&amp;rsquo;=&amp;lsquo;后的函数表达式。至于形参我们再用一个static类型的ArrayList&amp;lt;String&amp;gt;来存，因为在一个递归函数定义中形参都是一样的。&lt;/p>
&lt;p>在输入递归函数定义时，我们把定义存入HashMap中。在遇到递归函数因子时，我们先判断其序号是否在map中&lt;/p>
&lt;ul>
&lt;li>如果map中有对应的序号key，则直接把对应的value（函数表达式）取出，将形参替换为实参后构造一个Expr类型的实例，然后利用Expr的getAtomicElement()得到化简结果返回即可。&lt;/li>
&lt;li>如果map中没有对应的序号key，这是需要根据f{n}的规则进行递归解析，把n-1和n-2替换为对应的序号，再传入实参得到一个改造后的字符串，利用这个字符串构造Expr，调用Expr的getAtomicElements()即可得到结果。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>普通函数呢？&lt;/strong>&lt;/p>
&lt;p>大致思路和递归函数一样，都是字符串替换后再解析的思路。但是需要注意的是，作业中规定普通函数定义最多有两个，这两个函数的形参可能不一样，我们可以用一个static类型的HashMap&amp;lt;String, ArrayList&amp;lt;String&amp;gt;&amp;gt;存储每个函数对应的形参，其中key是函数名g或者h，value是形参的list。&lt;/p>
&lt;p>在递归函数和普通函数用实参替换形参的过程中都涉及到一个问题，那就是第一个形参的替换不能影响第二个形参的替换，举个例子&lt;/p>
&lt;blockquote>
&lt;p>f{1}(x,y) = x + y&lt;/p>
&lt;p>f{1}(y,x)应该等于y + x，而遍历替换的时候会出现下述情况&lt;/p>
&lt;p>(1) f{1}(y,x) = y + y (x被替换为实参y)&lt;/p>
&lt;p>(2) f{1}(y,x) = x + x (y被替换为实参x)&lt;/p>
&lt;p>我们可以引入一个中间量z来解决这个问题&lt;/p>
&lt;p>(1) f{1}(x,z) = x + z (变换函数定义，第二个形参y替换为中间量z)&lt;/p>
&lt;p>(2) f{1}(y,x) = y + z (把第一个形参x都替换为实参y)&lt;/p>
&lt;p>(3) f{1}(y,x) = y + x (把第二个形参z都替换为实参x)&lt;/p>&lt;/blockquote>
&lt;p>因为理论上两个形参应该是同时被替换的，但是在实现过程中这样并不可信，我们只能通过遍历的方式去替换，但最终要做到同时替换的效果，具体实现代码如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">replaceParam&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">actualParamList&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formalParamList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">secondParam&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">formalParamList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">replaceAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">secondParam&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;z&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">formalParamList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;z&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 代入实参&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">formalParamList&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">replaceAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;(&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">actualParamList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;)&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">idx&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">replaceAll&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondParam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formalParamList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">formalParamList&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secondParam&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，整个框架已经搭建好了，我们只需要根据前面的规定实现对应的函数功能即可。&lt;/p>
&lt;h2 id="新增迭代场景展望">新增迭代场景展望
&lt;/h2>&lt;p>&lt;strong>新增自定义变量因子&lt;/strong>，原变量因子之可能出现变量&amp;rsquo;x&amp;rsquo;，不妨让用户自定义变量名和变量数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">example&lt;/span> &lt;span class="n">input&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">var&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">a&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">var&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">expected&lt;/span> &lt;span class="n">output&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">3&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="k">var&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nb">sin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">^&lt;/span>&lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在这个新场景中，需要&lt;/p>
&lt;ul>
&lt;li>修改term提取factor的规则&lt;/li>
&lt;li>修改FactorFactory中关于变量因子的正则表达式&lt;/li>
&lt;li>新增AtomicElement的属性，每个变量的幂次&lt;/li>
&lt;li>修改合并同类相的逻辑&lt;/li>
&lt;/ul>
&lt;h2 id="优化分析">优化分析
&lt;/h2>&lt;h3 id="ctle">CTLE
&lt;/h3>&lt;p>在处理复杂结构时会出现超时的情况，通过添加cache缓存可以加快程序的运行速度。&lt;/p>
&lt;p>所谓缓存就是把已经计算出的结果储存起来，再次使用的时候不需要重复计算，直接取出之前的结果即可。&lt;/p>
&lt;ul>
&lt;li>需要确保缓存的内容不会被修改，如果必须被修改则缓存也需要被修改。&lt;/li>
&lt;li>因为未改动程序的逻辑，所以并不会影响程序的正确性。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Expr&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicArrayConvertible&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Derivable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AtomicElement&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cachedAtoms&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">AtomicElement&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getAtomicElements&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">cachedAtoms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cachedAtoms&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*process of getting atoms*/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cachedAtoms&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">atoms&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cachedAtoms&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="mle--oom">MLE / OOM
&lt;/h3>&lt;p>利用Eclipse Memory Analyse Tools分析Java堆，排查OutOfMemory (OOM)的问题。&lt;/p>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-03-17%20000230.png"
loading="lazy"
alt="屏幕截图 2025-03-17 000230"
>&lt;/p>
&lt;p>把未化简的字符串当成了map的key，且合并同类项的逻辑有问题，导致HashMap中存在大量的键值对，把字符串化简之后再当作key并优化化简逻辑之后轻松解决OOM的问题。&lt;/p>
&lt;ul>
&lt;li>只需要确保优化前后结果的等价性即不会影响程序的正确性。&lt;/li>
&lt;/ul>
&lt;h2 id="程序度量分析">程序度量分析
&lt;/h2>&lt;h3 id="uml">UML
&lt;/h3>&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedexported_from_idea.drawio%20%281%29.png"
loading="lazy"
alt="exported_from_idea.drawio (1)"
>&lt;/p>
&lt;h3 id="代码行数">代码行数
&lt;/h3>&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-03-19%20153904.png"
loading="lazy"
alt="屏幕截图 2025-03-19 153904"
>&lt;/p>
&lt;ul>
&lt;li>从代码量可以看出，最复杂的部分应该就是三角函数，因为三角函数因子无论是解析还是化简求导都是所有因子中最复杂的。&lt;/li>
&lt;/ul>
&lt;h3 id="类的分析">类的分析
&lt;/h3>&lt;ul>
&lt;li>CBO (Coupling Between Objects 对象耦合度) = 6.93 中等耦合，可接受&lt;/li>
&lt;li>LCOM (Lack of Cohesion of Methods 方法内聚性缺失) = 1.57 低内聚，类可能需要拆分&lt;/li>
&lt;li>显然本次本次作业并没有很好的实现&amp;quot;高内聚低耦合&amp;quot;的理想设计目标。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefined%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-03-19%20154458.png"
loading="lazy"
alt="屏幕截图 2025-03-19 154458"
>&lt;/p>
&lt;h3 id="方法复杂度">方法复杂度
&lt;/h3>&lt;ul>
&lt;li>复杂度过高的方法一般都是字符串处理或者获取特定ArrayList，这主要是因为这两种情况处理比较复杂，有许多需要特判的情况，使用了大量的if-else语句。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy-blog-image.oss-cn-beijing.aliyuncs.com/undefinedPixPin_2025-03-19_22-36-21.png"
loading="lazy"
alt="PixPin_2025-03-19_22-36-21"
>&lt;/p>
&lt;h2 id="自己的bug">自己的bug
&lt;/h2>&lt;ul>
&lt;li>双形参函数在替换实参的过程中，第一个形参的替换影响了第二个形参的替换。具体原因在思路介绍的时候已经提出了，通过引入一个中间量z解决。&lt;/li>
&lt;li>获取函数形参的时候仅通过 &amp;lsquo;,&amp;rsquo; 来分割，在遇到形如&lt;code>f{2}( f{1}(x,y), x)&lt;/code>的因子时会解析错误，解决方法是在最外层括号内部遇到 &amp;lsquo;,&amp;rsquo; 时判断一下是否被括号所包裹，如果不被包裹则分割获得形参。&lt;/li>
&lt;li>求导因子内部的derive()方法思路错误，这个方法应该是对求导因子再求导，而不是返回求导因子的结果，导致无法处理嵌套求导。修复derive()方法的逻辑即可。&lt;/li>
&lt;/ul>
&lt;p>出现这些bug的主要原因是写代码时没有全面的考虑可能出现的情况，想到什么就写什么，后续也没有进行充分的测试。可以通过编写测试单元、构造多样数据进行充分测试尽可能避免类似的bug。&lt;/p>
&lt;h2 id="如何发现别人程序bug">如何发现别人程序bug
&lt;/h2>&lt;ul>
&lt;li>评测机随机大量数据测试&lt;/li>
&lt;li>找到错误后查看源代码定位问题&lt;/li>
&lt;li>针对特定问题想出较为简单的测试数据提交hack&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># hw2数据生成代码思路&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">DataMakerH2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机幂&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_power&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机表达式因子&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_expr_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机三角函数因子&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_sin_cos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机因子&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rand&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">rand&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.2&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inBrackets&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_expr_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">rand&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.4&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_recursive_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">rand&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.6&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_signed_int&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">rand&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.8&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inBrackets&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_sin_cos&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_power&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机项&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_term&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机表达式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个单独的表达式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_generate_single_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">isY&lt;/span> &lt;span class="p">,&lt;/span>&lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成f{0}和f{1}的表达式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_func_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">formal_param&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;x,y&amp;#34;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">formal_param&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;y,x&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">func_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mf">0.5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">func_expr&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">formal_param&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;y&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">func_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">func_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hasRecursiveFactor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">formal_param&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">func_expr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成f{n}的表达式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_recursive_func_expr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">formal_param&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;x,y&amp;#34;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">formal_param&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;y,x&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sub1_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*f{n-1}&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;, &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sub2_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*f{n-2}&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;, &amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">formal_param&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;x&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sub1_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*f{n-1}&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sub2_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*f{n-2}&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sub1_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*f{n-1}&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sub2_expr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;*f{n-2}&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;(&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="bp">self&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_rand_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">isY&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">sub1_expr&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;+&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">sub2_expr&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机递归规则&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_recursive_rule&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个随机递归函数因子&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_recursive_factor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">formal_param&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 生成一个包含递归函数的测试点&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">_rand_recursive_example&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="心得体会">心得体会
&lt;/h2>&lt;ul>
&lt;li>对面向对象的思想（封装、继承和多态）有了更深层次的理解，能够在实际编码中合理运用，例如通过封装提高代码的模块化，通过继承实现代码复用，以及通过多态增强系统的扩展性和灵活性。&lt;/li>
&lt;li>对工厂模式的理解更加深入，能够在合适的场景下运用工厂模式来解耦对象的创建过程，提高代码的可维护性和可扩展性，从而实现更灵活的设计。&lt;/li>
&lt;li>在不断迭代的过程中认识到了规范的重要性，遵循一些设计规范和命名规则，不但能提高效率，还能减少错误。&lt;/li>
&lt;li>通过不断的迭代和小范围重构，深刻认识到了程序可扩展性的重要性，写代码时不仅要考虑当下的要求，还需要考虑后续可能会有哪些新的要求。&lt;/li>
&lt;li>通过自己编写评测机，对数据生成的流程和方法有了更全面的认识，深入理解了如何设计高效的数据生成策略，以确保测试数据的多样性和合理性。&lt;/li>
&lt;li>真切感受到了自己代码能力的提高。&lt;/li>
&lt;/ul>
&lt;h2 id="未来方向">未来方向
&lt;/h2>&lt;ul>
&lt;li>希望能简化一些限制，指导书写的简洁明了一点，减少学生在阅读指导书上花的时间，把更多的精力放在代码设计上。&lt;/li>
&lt;/ul></description></item><item><title>BUAA-OS-lab0 实验报告</title><link>https://lhy0424.top/p/os-lab0/</link><pubDate>Thu, 13 Mar 2025 22:58:00 +0000</pubDate><guid>https://lhy0424.top/p/os-lab0/</guid><description>&lt;img src="https://lhy0424.top/p/os-lab0/cover.jpg" alt="Featured image of post BUAA-OS-lab0 实验报告" />&lt;h1 id="os-lab0-实验报告">OS-lab0 实验报告
&lt;/h1>&lt;h2 id="思考题">思考题
&lt;/h2>&lt;h3 id="thinking-01">Thinking 0.1
&lt;/h3>&lt;blockquote>
&lt;ul>
&lt;li>在前述已初始化的 ~/learnGit 目录下，创建一个名为 README.txt 的文件。执 行命令 git status &amp;gt; Untracked.txt（其中的 &amp;gt; 为输出重定向，我们将在 0.6.3 中 详细介绍）。&lt;/li>
&lt;li>在 README.txt 文件中添加任意文件内容，然后使用 add 命令，再执行命令 git status &amp;gt; Stage.txt。&lt;/li>
&lt;li>提交 README.txt，并在提交说明里写入自己的学号。&lt;/li>
&lt;li>执行命令 cat Untracked.txt 和 cat Stage.txt，对比两次运行的结果，体会 README.txt 两次所处位置的不同。&lt;/li>
&lt;li>修改 README.txt 文件，再执行命令 git status &amp;gt; Modified.txt。&lt;/li>
&lt;li>执行命令 cat Modified.txt，观察其结果和第一次执行 add 命令之前的 status 是 否一样，并思考原因。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>不一样，新建一个文件但不git add，README.txt处于未跟踪状态；git add之后会跟踪README.txt文件，此时文件处于已暂存状态；提交后修改README.txt文件，此时文件处于已修改状态，但是还未添加到暂存区。&lt;/p>
&lt;h3 id="thinking-02">Thinking 0.2
&lt;/h3>&lt;blockquote>
&lt;p>仔细看看0.10，思考一下箭头中的 add the file 、stage the file 和 commit 分别对应的是 Git 里的哪些命令呢？&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/os-lab0/git.png"
width="1266"
height="682"
srcset="https://lhy0424.top/p/os-lab0/git_hu_fa9b83922f61d433.png 480w, https://lhy0424.top/p/os-lab0/git_hu_583c1993dd3dd65d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="185"
data-flex-basis="445px"
>&lt;/p>&lt;/blockquote>
&lt;p>add the file对应git add，stage the file对应git add，commit对应git commit&lt;/p>
&lt;h3 id="thinking-03">Thinking 0.3
&lt;/h3>&lt;blockquote>
&lt;p>思考下列问题：&lt;/p>
&lt;ol>
&lt;li>代码文件 print.c 被错误删除时，应当使用什么命令将其恢复？&lt;/li>
&lt;li>代码文件 print.c 被错误删除后，执行了 git rm print.c 命令，此时应当 使用什么命令将其恢复？&lt;/li>
&lt;li>无关文件 hello.txt 已经被添加到暂存区时，如何在不删除此文件的前提下 将其移出暂存区？&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;ol>
&lt;li>如果文件在暂存后被删除，可以使用git checkout &amp;ndash; print.c恢复。如果文件在删除前执行了git commit，在删除后执行了git add指令，可以使用git reset HEAD恢复到上一次commit时的状态，之后再使用git checkout &amp;ndash; print.c恢复文件。&lt;/li>
&lt;li>先使用git restore &amp;ndash;staged print.c取消暂存，再使用git restore print.c放弃工作区的修改。&lt;/li>
&lt;li>git rm &amp;ndash;cached hello.txt&lt;/li>
&lt;/ol>
&lt;h3 id="thinking-04">Thinking 0.4
&lt;/h3>&lt;blockquote>
&lt;p>思考下列有关 Git 的问题：&lt;/p>
&lt;ul>
&lt;li>找到在 /home/22xxxxxx/learnGit 下刚刚创建的 README.txt 文件，若不存 在则新建该文件。&lt;/li>
&lt;li>在文件里加入 Testing 1，git add，git commit，提交说明记为 1。&lt;/li>
&lt;li>模仿上述做法，把 1 分别改为 2 和 3，再提交两次。&lt;/li>
&lt;li>使用 git log 命令查看提交日志，看是否已经有三次提交，记下提交说明为 3 的哈希值a。&lt;/li>
&lt;li>进行版本回退。执行命令 git reset &amp;ndash;hard HEAD^ 后，再执行 git log，观察其变化。&lt;/li>
&lt;li>找到提交说明为 1 的哈希值，执行命令 git reset &amp;ndash;hard &amp;lt;hash&amp;gt;后，再执 行 git log，观察其变化。&lt;/li>
&lt;li>现在已经回到了旧版本，为了再次回到新版本，执行 git reset &amp;ndash;hard &amp;lt;hash&amp;gt;，再执行 git log，观察其变化。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;ul>
&lt;li>有三次提交&lt;/li>
&lt;li>HEAD指向说明为2的提交，并且不显示说明为3的提交&lt;/li>
&lt;li>HEAD指向说明为1的提交，并且不显示说明为2, 3的提交&lt;/li>
&lt;li>HEAD指向说明为3的提交&lt;/li>
&lt;/ul>
&lt;h3 id="thinking-05">Thinking 0.5
&lt;/h3>&lt;blockquote>
&lt;p>执行如下命令, 并查看结果&lt;/p>
&lt;ul>
&lt;li>echo first&lt;/li>
&lt;li>echo second &amp;gt; output.txt&lt;/li>
&lt;li>echo third &amp;gt; output.txt&lt;/li>
&lt;li>echo forth &amp;raquo; output.txt&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;ul>
&lt;li>在终端显示&amp;quot;first&amp;quot;&lt;/li>
&lt;li>创建了一个output.txt文件，内容为&amp;quot;second&amp;quot;&lt;/li>
&lt;li>output.txt内容变为&amp;quot;third&amp;quot;&lt;/li>
&lt;li>output.txt追加内容&amp;quot;forth&amp;quot;&lt;/li>
&lt;/ul>
&lt;h3 id="thinking-06">Thinking 0.6
&lt;/h3>&lt;blockquote>
&lt;p>使用你知道的方法（包括重定向）创建下图内容的文件（文件命名为 test）， 将创建该文件的命令序列保存在 command 文件中，并将 test 文件作为批处理文件运行，将 运行结果输出至 result 文件中。给出 command 文件和 result 文件的内容，并对最后的结果进行解释说明（可以从 test 文件的内容入手）. 具体实现的过程中思考下列问题: echo echo Shell Start 与 echo `echo Shell Start` 效果是否有区别; echo echo $c&amp;gt;file1 与 echo `echo $c&amp;gt;file1` &amp;lsquo;效果是否有区别.&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo Shell Start...&amp;#39;&lt;/span> &amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo set a = 1&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;a=1&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo set b = 2&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;b=2&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo set c = a+b&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;c=$[$a+$b]&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo c = $c&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo save c to ./file1&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo $c&amp;gt;file1&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo save b to ./file2&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo $b&amp;gt;file2&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo save a to ./file3&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo $a&amp;gt;file3&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo save file file2 file3 to file4&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;cat file1&amp;gt;file4&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;cat file2&amp;gt;&amp;gt;file4&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;cat file3&amp;gt;&amp;gt;file4&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;echo save file4 to ./result&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;cat file4&amp;gt;&amp;gt;result&amp;#39;&lt;/span> &amp;gt;&amp;gt; &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>结果分析&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>test先将a和b分别赋值为1和2&lt;/li>
&lt;li>令c等于a+b&lt;/li>
&lt;li>将c，b，a的值分别写入file1、file2、file3，三个文件中的值分别为3, 2, 1&lt;/li>
&lt;li>cat将这三个文件的值&lt;strong>追加&lt;/strong>到file4，再把file4中的内容写入result。&lt;/li>
&lt;li>result中的值为3, 2, 1。&lt;/li>
&lt;/ul>
&lt;p>&lt;code>echo echo Shell Start&lt;/code> 与 &lt;code>echo ‘echo Shell Start’&lt;/code> 效果没有区别； &lt;code>echo echo $c&amp;gt;file1&lt;/code> 与 &lt;code>echo ‘echo $c&amp;gt;file1’&lt;/code> 效果有区别，前者会将&amp;quot;echo $c&amp;quot;重定向到file1，而后者则会在终端显示&amp;quot;echo $c&amp;gt;file&amp;quot;。&lt;/p>
&lt;h2 id="实验难点">实验难点
&lt;/h2>&lt;h3 id="git的使用">Git的使用
&lt;/h3>&lt;h4 id="工作区暂存区版本库head的理解">工作区、暂存区、版本库、HEAD的理解
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>工作区（Working Directory），电脑上的一个目录即为工作区。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>版本库（Repository），使用&lt;code>git init&lt;/code>指令，目录下会生成一个.git目录，这个.git目录就是git的版本库（.git不属于工作区），git版本库里有暂存区和一个指向当前分支的HEAD指针。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>暂存区（stage/index），使用&lt;code>git add&lt;/code>可以把修改后的文件添加到暂存区，以便于一次性提交多个修改。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>HEAD，HEAD指向的是当前分支（master/main&amp;hellip;），也可以指向某一个commit（分离状态）。&lt;/p>
&lt;ul>
&lt;li>分离状态，有时候我们只是想在之前的某一次commit上做一些调试而不想提交到版本库，我们就可以&lt;code>git checkout &amp;lt;hash&amp;gt;&lt;/code>切换到某一个commit进入HEAD分离状态，在进行一些修改并提交后，如果此时再切换到原有分支则会丢弃之前做的所有实验性修改，如果想保留修改，则可使用&lt;code>git checkout -b &amp;lt;new branch name&amp;gt;&lt;/code>新建一个分支保存修改。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>You are in &amp;lsquo;detached HEAD&amp;rsquo; state. You can look around, make experimental&lt;/p>
&lt;p>changes and commit them, and you can discard any commits you make in this&lt;/p>
&lt;p>state without impacting any branches by switching back to a branch.&lt;/p>
&lt;p>If you want to create a new branch to retain commits you create, you may&lt;/p>
&lt;p>do so (now or later) by using -c with the switch command. Example:&lt;/p>
&lt;p>git switch -c &lt;new-branch-name>&lt;/p>
&lt;p>Or undo this operation with:&lt;/p>
&lt;p>git switch -&lt;/p>
&lt;p>Turn off this advice by setting config variable advice.detachedHead to false&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h4 id="版本回退">版本回退
&lt;/h4>&lt;ul>
&lt;li>git reset [&amp;ndash;hard] [&amp;ndash;soft] [&amp;ndash;mixed]，同时移动当前分支指针和HEAD指针，&lt;code>--hard&lt;/code>会回退到上个版本的已提交状态，而&lt;code>--soft&lt;/code>会回退到上个版本的未提交状态，&lt;code>--mixed&lt;/code>会回退到上个版本已添加但未提交的状态。&lt;/li>
&lt;li>git checkout &amp;lt;hash&amp;gt;，仅移动HEAD指针，不一定分支指针（HEAD分离状态）。&lt;/li>
&lt;li>git checkout &amp;ndash; &amp;lt;file&amp;gt;，将暂存区的指定文件取出，强制替换工作区的文件。&lt;/li>
&lt;li>git restore &amp;lt;file&amp;gt;，功能和git checkout相同。&lt;/li>
&lt;li>git rm &amp;ndash;cached &amp;lt;file&amp;gt;，从暂存区中删去不想跟踪的文件。&lt;/li>
&lt;/ul>
&lt;h4 id="冲突解决">冲突解决
&lt;/h4>&lt;p>当两个分支对同一行进行了修改，在合并时会出现冲突，git无法帮我们完成合并，需要手动解决冲突。&lt;/p>
&lt;p>&lt;img src="https://pic1.zhimg.com/80/v2-d3d10388e26645930816f8a52faa2b58_1440w.webp"
loading="lazy"
alt="v2-d3d10388e26645930816f8a52faa2b58_1440w"
>&lt;/p>
&lt;ul>
&lt;li>git merge，无破坏性，两个分支的提交均会被保存，但时间线会变复杂。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://picx.zhimg.com/80/v2-f4395af8dd25bd70b7a75a08d57151f7_1440w.webp"
loading="lazy"
alt="v2-f4395af8dd25bd70b7a75a08d57151f7_1440w"
>&lt;/p>
&lt;ul>
&lt;li>git rebase，重写原始分支的提交历史，将当前修改融合到原始分支中，原始分支的hash会变，时间线更干净但是损失了很多信息，可回溯性差。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://pic2.zhimg.com/80/v2-313d33b3c539fc4ab359590a32d26569_1440w.webp"
loading="lazy"
alt="v2-313d33b3c539fc4ab359590a32d26569_1440w"
>&lt;/p>
&lt;h3 id="makefile">Makefile
&lt;/h3>&lt;ul>
&lt;li>本质上target和dependencies都是文件，如果target已经存在，且创建时间晚于所有dependencies，则make不会执行命令。&lt;/li>
&lt;li>如果一个规则的命令没有创建target文件，我们希望每次执行&lt;code>make &amp;lt;target&amp;gt;&lt;/code>都会执行这个规则的命令，但是如果我们手动创建了一个target文件，则命令不会被执行，这是我们可以把这个target声明为伪目标，例如&lt;code>.PHONY: clean&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="shell脚本">Shell脚本
&lt;/h3>&lt;h4 id="转义">转义
&lt;/h4>&lt;ul>
&lt;li>单引号保留字符的字面含义，单引号内不能再使用单引号，即使使用了反斜线转义也不允许。&lt;/li>
&lt;li>双引号内美元符号&lt;code>$&lt;/code> ，反引号`` &lt;code>，反斜杠&lt;/code>`仍然有特殊含义&lt;/li>
&lt;/ul>
&lt;h4 id="括号">括号
&lt;/h4>&lt;ul>
&lt;li>[] 逻辑运算&lt;/li>
&lt;li>(()) 用于算术表达式，也可在其中进行变量赋值&lt;/li>
&lt;li>${} 取变量的值&lt;/li>
&lt;li>$[] 和 $(()) 数值计算并返回值&lt;/li>
&lt;li>$() 运行括号中的命令并将输出替换到原处&lt;/li>
&lt;/ul>
&lt;h3 id="sed-stream-editor">Sed (Stream editor)
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sed &lt;span class="o">[&lt;/span>选项&lt;span class="o">]&lt;/span> &lt;span class="s1">&amp;#39;命令&amp;#39;&lt;/span> 输入文本
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>sed命令本身是可以解释语法的，即传入一个字符串作为命令，sed可以解析这个字符串，而我们如果要在命令中使用变量直接输入‘$1,$p’是无法被正确解析的，因为在sed命令看来$1就是一个普通字符串，我们应该把$1交给shell去解析。很简单，只需要$1放在单引号外面即可。&lt;/p>
&lt;p>于是，关于sed如何和shell交互的问题可以得出一套结论：&lt;/p>
&lt;ol>
&lt;li>遇到需要被shell解析的都不加引号，或者加双引号；&lt;/li>
&lt;li>遇到shell和所执行命令共有的特殊字符时，要想被sed解析，必须加单引号，或者在双引号在加反斜线转义；&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">➜ learnSed cat tail.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#!/bin/bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -n &lt;span class="nv">$1&lt;/span>&lt;span class="s1">&amp;#39;,$p&amp;#39;&lt;/span> &lt;span class="nv">$2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">➜ learnSed bash tail.sh &lt;span class="m">4&lt;/span> &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">line4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">line5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">line6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="实验体会">实验体会
&lt;/h2>&lt;ul>
&lt;li>git的基本操作很简单，但是在实际多人合作中，版本回退、冲突处理等问题层出不穷，没有深入的理解很难提高效率。&lt;/li>
&lt;li>刚开始接触linux和CLI，只会一些基础命令，对shell脚本的理解不深，导致上机测试手忙脚乱，不能很快定位错误。&lt;/li>
&lt;li>指导书中的命令只是冰山一角，要熟练使用shell仍需要花大量的时间去自学。&lt;/li>
&lt;/ul>
&lt;h2 id="参考资料">参考资料
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>在开发过程中使用 git rebase 还是 git merge，优缺点分别是什么？https://www.zhihu.com/question/36509119/answer/2423381574&lt;/p>
&lt;/li>
&lt;li>
&lt;p>廖雪峰的Makefile教程 &lt;a class="link" href="https://liaoxuefeng.com/books/makefile/introduction/index.html" target="_blank" rel="noopener"
>https://liaoxuefeng.com/books/makefile/introduction/index.html&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sed中的疑难杂症 &lt;a class="link" href="https://zhuanlan.zhihu.com/p/691207825" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/691207825&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Tansformer学习笔记</title><link>https://lhy0424.top/p/transformer/</link><pubDate>Mon, 10 Mar 2025 15:32:00 +0000</pubDate><guid>https://lhy0424.top/p/transformer/</guid><description>&lt;img src="https://lhy0424.top/p/transformer/transformers_2b9aba81a7.jpg" alt="Featured image of post Tansformer学习笔记" />&lt;h1 id="transformer">Transformer
&lt;/h1>&lt;p>Transformer 最早在2017年的&lt;a class="link" href="https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1706.03762" target="_blank" rel="noopener"
>《Attention Is All You Need》&lt;/a>论文中提出，通过引入 &lt;strong>自注意力（Self-Attention）+ 位置编码（Positional Encoding）+ 多头注意力（Multi-Head Attention）+ 前馈网络（Feed-Forward Network）&lt;/strong>，解决了传统 Seq2Seq 模型在处理&lt;strong>可变长序列&lt;/strong>时的长距离依赖、计算效率等关键问题。&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>seq2seq&lt;/strong>，序列到序列，输入为一段序列，输出也是一段序列，如翻译任务。&lt;/p>
&lt;p>&lt;strong>处理可变长序列&lt;/strong>，指的是在自然语言处理（NLP）等任务中，模型需要能够应对&lt;strong>不同长度&lt;/strong>的输入或输出序列，而不是固定长度的数据。&lt;/p>&lt;/blockquote>
&lt;p>with transformer you can&lt;/p>
&lt;ul>
&lt;li>voice-to-text&lt;/li>
&lt;li>text-to-voice&lt;/li>
&lt;li>text-to-image&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>《Attention is All You Need》专注于把一种语言翻译成另一种，这也是Transformer最初的设计目的，而后来被广泛应用于各种自然语言处理（NLP）任务，比如ChatGPT、DeepSeek等大模型，本文主要介绍最基础的transformer结构。&lt;/p>
&lt;h2 id="a-high-level-look">A High-Level Look
&lt;/h2>$$
Transfomer(我是一个学生) = I\space am\space a\space studuent
$$&lt;p>&lt;img src="https://lhy0424.top/p/transformer/100338.png"
width="2464"
height="1372"
srcset="https://lhy0424.top/p/transformer/100338_hu_1ca66c0856641636.png 480w, https://lhy0424.top/p/transformer/100338_hu_f6af1cf1143230d9.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="179"
data-flex-basis="431px"
>&lt;/p>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/The_transformer_encoder_decoder_stack.png"
loading="lazy"
alt="img"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/221542.png"
width="530"
height="696"
srcset="https://lhy0424.top/p/transformer/221542_hu_420c5707aadfcde8.png 480w, https://lhy0424.top/p/transformer/221542_hu_e0f8e7941159190f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="76"
data-flex-basis="182px"
>&lt;/p>
&lt;h2 id="token-embedding-词嵌入">Token Embedding 词嵌入
&lt;/h2>&lt;blockquote>
&lt;p>&lt;em>&lt;strong>Can you can a can like a canner can a can.&lt;/strong>&lt;/em>&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>token? 单词片段或标点符号&lt;/li>
&lt;li>将每个token转化为对应的高维向量，构成Embedding matrix
&lt;ul>
&lt;li>Embedding matrix随机初始化，并通过数据进行学习&lt;/li>
&lt;li>GPT-3中每个token的向量有12288个维度&lt;/li>
&lt;li>向量的方向代表语义，语义相似的token有着相似的方向&lt;/li>
&lt;li>两个词的差异也会体现在向量之差，例如man和woman的向量之差与uncle和aunt的向量之差相似，也可以理解为$\vec{uncle}+(\vec{woman}-\vec{man}) = \vec{aunt}$&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>得到的词向量无上下文语义，但是其性质决定其可以用于分析上下文
&lt;ul>
&lt;li>Attention的目标就是让单个token通过上下文获得更丰富的语义。（比如判断出每个can的含义）&lt;/li>
&lt;li>上下文长度指的即是模型每次能处理的向量数目（预测下一个token时结合的文本量）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Unembedding matrix 解嵌入矩阵，可以将一个向量解析为对应的单词&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/100732.png"
width="2499"
height="1085"
srcset="https://lhy0424.top/p/transformer/100732_hu_9ddc44a6431ecfa0.png 480w, https://lhy0424.top/p/transformer/100732_hu_acbdc36ac31700b5.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="230"
data-flex-basis="552px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/102903.png"
width="2555"
height="791"
srcset="https://lhy0424.top/p/transformer/102903_hu_838a9c3c8ff3b961.png 480w, https://lhy0424.top/p/transformer/102903_hu_bfa74c1c85bd8f7c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="323"
data-flex-basis="775px"
>&lt;/p>
&lt;h2 id="positional-encoding">Positional encoding
&lt;/h2>&lt;p>引入额外的位置编码刻画数据在时序上的特征
&lt;/p>
$$
PE_{pos,2i}=sin(pos/10000^{2i/d_{model}})\\
PE_{pos,2i+1}=cos(pos/10000^{2i/d_{model}})
$$&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_positional_encoding_vectors.png"
loading="lazy"
alt="transformer_positional_encoding_vectors"
>&lt;/p>
&lt;h2 id="encoder">Encoder
&lt;/h2>&lt;ul>
&lt;li>self-attention自注意力机制&lt;/li>
&lt;li>Feed Forward Neural Network 前馈神经网络&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/encoder_with_tensors.png"
loading="lazy"
alt="encoder_with_tensors"
>&lt;/p>
&lt;h3 id="self-attention-自注意力机制">Self-Attention 自注意力机制
&lt;/h3>&lt;blockquote>
&lt;p>&lt;em>&lt;strong>“ Can you can a can like a canner can a can. ”&lt;/strong>&lt;/em>&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>can 代指的是什么？需要联系上下文&lt;/li>
&lt;/ul>
&lt;h5 id="qkv">Q、K、V
&lt;/h5>&lt;p>**如何理解矩阵形式的Q、K、V：**在map/dict查询时我们可以根据key查询数据，如果query=key，那么取出key对应的数据。但是对于矩阵形式的Q、K、V，这样并不可行，只能变得soft一些，计算query和key的关系之后再对value加权求和。（softmax也是类似的思想）&lt;/p>
&lt;ul>
&lt;li>
&lt;p>$Query\space vector = \vec{E} \times W_Q$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$ Key\space vector=\vec{E}\times W_K$&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$Value\space vector = \vec{E}\times W_V$&lt;/p>
&lt;ul>
&lt;li>Value反映了如果要改变目标词的语义，需要对目标词的embedding加上一个什么样的向量&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>$W_K\space W_K\space W_V$均通过训练获得&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_self_attention_vectors.png"
loading="lazy"
alt="transformer_self_attention_vectors"
>&lt;/p>
$$
Softmax(\frac{q_i\cdot k_j}{\sqrt{d_k}})\\ d_k\space is\space the \space dimension\space of\space the\space key\space vector
$$&lt;p>这个公式表示在j位置的token在i位置的表达量，显然i位置本身的token在i位置表达量最大。&lt;/p>
&lt;ul>
&lt;li>query点乘key得到一个较大的正数，即称key代表的embedding注意到了query代表的embedding&lt;/li>
&lt;li>如果是一个较小值或负值，则代表两个词互不相关&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/self-attention_softmax.png"
loading="lazy"
alt="self-attention_softmax"
>
&lt;/p>
$$
z_i = \sum_{j=1}^{n} softmax(\frac{q_i\cdot k_j}{\sqrt{d_k}}) \times v_j \\or\\
Attention(Q,K,V) = softmax(\frac{QK^T}{\sqrt{d_k}})V
$$&lt;p>
之后我们用softmax score乘每个位置上的value向量再求和，即可得到该位置上的self-attention层的输出向量$z_1$，$z_1$之后会传入feed-forward neural network。&lt;/p>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/self-attention-matrix-calculation-2.png"
loading="lazy"
alt="self-attention-matrix-calculation-2"
>&lt;/p>
&lt;h4 id="multi-head-attention-多头注意力机制">Multi-head attention 多头注意力机制
&lt;/h4>&lt;p>模型在对当前位置的信息进行编码时，会过度的将注意力集中于自身的位置&lt;/p>
&lt;blockquote>
&lt;p>Multi-head attention allows the model to jointly attend to information from different representation subspaces at different positions.&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>提高模型对其他位置的注意力。之前的方法得到的z向量尽管以及包含了其他位置的编码信息，但是其仍主要受自身的影响。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Transformer有8个注意力头，即每个encoder/decoder有八组QKV&lt;/p>
&lt;/li>
&lt;li>
&lt;p>每组QKV分别按上述方法进行计算得到一组z向量，再将他们拼接起来叉乘一个新的矩阵$W^o$，得到一个新的z向量&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_attention_heads_weight_matrix_o.png"
loading="lazy"
alt="transformer_attention_heads_weight_matrix_o"
>&lt;/p>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_multi-headed_self-attention-recap.png"
loading="lazy"
alt="transformer_multi-headed_self-attention-recap"
>&lt;/p>
&lt;h3 id="inside-the-multilayer-perception-多层感知器">Inside the Multilayer Perception 多层感知器
&lt;/h3>&lt;p>推理需要事实作为依据，大模型是如何存储事实的？&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/155134.png"
width="1071"
height="252"
srcset="https://lhy0424.top/p/transformer/155134_hu_8f6f785f2815ceaa.png 480w, https://lhy0424.top/p/transformer/155134_hu_f7e93e0d0d392361.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="425"
data-flex-basis="1020px"
>&lt;/p>
&lt;h4 id="linear-up-projection">Linear (up projection)
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>乘一个矩阵$W_{\uparrow}$，将向量映射到高维空间&lt;/p>
&lt;/li>
&lt;li>
&lt;p>矩阵的每一行都是一个问题 (简化理解)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$\vec{B_{\uparrow}}$为Bias偏置，确保当embedding与问题相符时为1，其他情况为0或负&lt;/p>
&lt;/li>
&lt;/ul>
$$
W_{\uparrow}\vec{E}+\vec{B_{\uparrow}}
$$&lt;p>&lt;img src="https://lhy0424.top/p/transformer/152128.png"
width="1167"
height="597"
srcset="https://lhy0424.top/p/transformer/152128_hu_1cbb7e2b14c749ca.png 480w, https://lhy0424.top/p/transformer/152128_hu_30313c75f06d0339.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="195"
data-flex-basis="469px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/152234.png"
width="2401"
height="702"
srcset="https://lhy0424.top/p/transformer/152234_hu_704987701938aa35.png 480w, https://lhy0424.top/p/transformer/152234_hu_b0a456a5283fc5a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="342"
data-flex-basis="820px"
>&lt;/p>
&lt;h4 id="relu线性整流函数">ReLU线性整流函数
&lt;/h4>&lt;ul>
&lt;li>对得到的高维向量进行处理：非线性函数，将负值映射为0，正值不变&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/152726.png"
width="1016"
height="640"
srcset="https://lhy0424.top/p/transformer/152726_hu_5bdb60ef4f1c6341.png 480w, https://lhy0424.top/p/transformer/152726_hu_9f22fd598d1f9e65.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="158"
data-flex-basis="381px"
>&lt;/p>
&lt;h4 id="linear-down-projection">Linear (down projection)
&lt;/h4>&lt;ul>
&lt;li>对高维向量进行降维处理，使输出向量的维数降回到嵌入空间的维数&lt;/li>
&lt;/ul>
$$
W_{\downarrow}(\space ReLU(W_{\uparrow}\vec{E}+B_{\uparrow})\space) + B_{\downarrow}
$$&lt;p>&lt;img src="https://lhy0424.top/p/transformer/153428.png"
width="2129"
height="765"
srcset="https://lhy0424.top/p/transformer/153428_hu_eca90da885eb1c91.png 480w, https://lhy0424.top/p/transformer/153428_hu_a1db886d0a38ac2b.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="278"
data-flex-basis="667px"
>&lt;/p>
&lt;h3 id="residuals-残差">Residuals 残差
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>在每个子层（如自注意力层和前馈神经网络层）中，残差连接允许输入信号绕过子层，直接与子层的输出相加。这意味着输出是子层的原始输入与子层的变换输出的和。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>用于帮助解决深度神经网络训练过程中的梯度消失或梯度爆炸问题。&lt;/p>
&lt;ul>
&lt;li>梯度消失：梯度趋近于零，网络权重无法更新或更新的很微小，网络训练再久也不会有效果；&lt;/li>
&lt;li>梯度爆炸：梯度呈指数级增长，变的非常大，然后导致网络权重的大幅更新，使网络变得不稳定。&lt;/li>
&lt;/ul>
$$
output=x+F(x)\space(其中 F(x)F(x)F(x) 表示子层的复杂变换)
$$&lt;p>即使 F(x)F(x)F(x) 部分可能会导致数值不稳定，恒等项 xxx 总能为梯度提供一个稳定的基础，从而改善整体训练的稳定性。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_resideual_layer_norm_3.png"
loading="lazy"
alt="transformer_resideual_layer_norm_3"
>&lt;/p>
&lt;h2 id="decoder">Decoder
&lt;/h2>&lt;ul>
&lt;li>解码器也含有这两个层，但是中间增加了一个注意力层帮助解码器关注到相关的输入&lt;/li>
&lt;li>解码器的self-attention与编码器稍有不同，其只关注输出序列中位于当前位置之前的token（masking掩码）
&lt;ul>
&lt;li>掩码：在计算 $q_i\cdot k_j$ 时将将 $j&amp;gt;i$ 的项置为$-\infin$，在softmax的过程中$-\infin$会被转化为0，起到屏蔽作用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy0424.top/p/transformer/221542-1741617673211-3.png"
width="530"
height="696"
srcset="https://lhy0424.top/p/transformer/221542-1741617673211-3_hu_420c5707aadfcde8.png 480w, https://lhy0424.top/p/transformer/221542-1741617673211-3_hu_e0f8e7941159190f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="76"
data-flex-basis="182px"
>&lt;/p>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_decoding_2.gif"
loading="lazy"
alt="transformer_decoding_2"
>&lt;/p>
&lt;h2 id="linear-layer">Linear Layer
&lt;/h2>&lt;p>实际上，decoder的输出是一个浮点型的向量，如何得到一个token？&lt;/p>
&lt;ul>
&lt;li>线性层是一个全链接神经网络，将decoder的输出向量转化为一个更大的向量（logits vector）&lt;/li>
&lt;li>logits vector的维度等于“output vocabulary”所包含的token数（模型在训练中学习到的的token），logits vector中的每一格就是对某个token的评分&lt;/li>
&lt;li>之后softmax layer会将logits vector转化为概率（归一化，所有数值相加等于一），选取概率最大的token&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jalammar.github.io/images/t/transformer_decoder_output_softmax.png"
loading="lazy"
alt="transformer_decoder_output_softmax"
>&lt;/p>
&lt;h2 id="softmax-with-temperature">softmax with temperature
&lt;/h2>&lt;p>softmax对向量进行归一化，确保$\sum x_n = 1$
&lt;/p>
$$
\begin{bmatrix}
x_1\\
x_2\\
x_3\\
...
\end{bmatrix}
\rightarrow
\begin{bmatrix}
\frac{e^{x_1/T}}{\sum_{n=0}^{N-1}e^{x_n/T}}\\
\frac{e^{x_2/T}}{\sum_{n=0}^{N-1}e^{x_n/T}}\\
\frac{e^{x_3/T}}{\sum_{n=0}^{N-1}e^{x_n/T}}\\
...
\end{bmatrix}
$$&lt;ul>
&lt;li>T越大，会给小数值赋予更多的权重，分布越均匀
&lt;ul>
&lt;li>模型更愿意选择可能性较低的词&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>T越小，较大的数组优势会更明显。
&lt;ul>
&lt;li>T = 0时模型总是会选择最可能的词&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="参考资料">参考资料
&lt;/h2>&lt;ul>
&lt;li>《Attention Is All You Need》 &lt;a class="link" href="https://arxiv.org/abs/1706.03762" target="_blank" rel="noopener"
>https://arxiv.org/abs/1706.03762&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://jalammar.github.io/illustrated-transformer/" target="_blank" rel="noopener"
>https://jalammar.github.io/illustrated-transformer/&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.3blue1brown.com/topics/neural-networks" target="_blank" rel="noopener"
>https://www.3blue1brown.com/topics/neural-networks&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>P7_设计文档</title><link>https://lhy0424.top/p/co_p7/</link><pubDate>Fri, 20 Dec 2024 00:32:00 +0000</pubDate><guid>https://lhy0424.top/p/co_p7/</guid><description>&lt;img src="https://lhy0424.top/p/co_p7/P7_cover.jpg" alt="Featured image of post P7_设计文档" />&lt;h1 id="p7_mips微系统">P7_MIPS微系统
&lt;/h1>&lt;h2 id="预备知识">预备知识
&lt;/h2>&lt;h3 id="异常程序处理">异常程序处理
&lt;/h3>&lt;p>先要明白一点，Mars不会帮你处理中断异常，Mars遇到异常指令或中断信号会跳至中断异常处理程序（0x4180之后），如何处理中断异常完全由0x4180之后的代码决定。&lt;/p>
&lt;p>先看课程组给出的示例程序&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 程序首先从这里运行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.text
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 只允许外部中断&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$t0&lt;/span>, &lt;span class="nv">$0&lt;/span>, 0x1001
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mtc0 &lt;span class="nv">$t0&lt;/span>, &lt;span class="nv">$12&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 算术溢出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lui &lt;span class="nv">$t0&lt;/span>, 0x7fff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lui &lt;span class="nv">$t1&lt;/span>, 0x7fff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> add &lt;span class="nv">$t2&lt;/span>, &lt;span class="nv">$t0&lt;/span>, &lt;span class="nv">$t1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> beq &lt;span class="nv">$0&lt;/span>, &lt;span class="nv">$0&lt;/span>, end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">.ktext 0x4180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_entry:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 保存上下文&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> j _save_context
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_main_handler:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 取出 ExcCode&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mfc0 &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$13&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$k1&lt;/span>, &lt;span class="nv">$0&lt;/span>, 0x7c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> and &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$k1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 如果是中断，直接恢复上下文&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> beq &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$0&lt;/span>, _restore_context
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 将 EPC + 4，即处理异常的方法就是跳过当前指令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mfc0 &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$14&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addu &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$k0&lt;/span>, &lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mtc0 &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$14&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> j _restore_context
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_exception_return:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> eret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_save_context:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$0&lt;/span>, 0x1000 &lt;span class="c1"># 在栈上找一块空间保存现场&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> addiu &lt;span class="nv">$k0&lt;/span>, &lt;span class="nv">$k0&lt;/span>, -256
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$sp&lt;/span>, 116&lt;span class="o">(&lt;/span>&lt;span class="nv">$k0&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="c1"># 最先保存栈指针&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> move &lt;span class="nv">$sp&lt;/span>, &lt;span class="nv">$k0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 依次保存通用寄存器（注意要跳过 $sp）、HI 和 LO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$1&lt;/span>, 4&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$2&lt;/span>, 8&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ......&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$31&lt;/span>, 124&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mfhi &lt;span class="nv">$k0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mflo &lt;span class="nv">$k1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$k0&lt;/span>, 128&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$k1&lt;/span>, 132&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> j _main_handler
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">_restore_context:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 依次恢复通用寄存器（注意要跳过 $sp）、 HI 和 LO&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lw &lt;span class="nv">$1&lt;/span>, 4&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lw &lt;span class="nv">$2&lt;/span>, 8&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># ......&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lw &lt;span class="nv">$31&lt;/span>, 124&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lw &lt;span class="nv">$k0&lt;/span>, 128&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lw &lt;span class="nv">$k1&lt;/span>, 132&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mthi &lt;span class="nv">$k0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> mtlo &lt;span class="nv">$k1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 最后恢复栈指针&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> lw &lt;span class="nv">$sp&lt;/span>, 116&lt;span class="o">(&lt;/span>&lt;span class="nv">$sp&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> j _exception_return
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> nop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="代码解释">代码解释
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>&lt;strong>.text:&lt;/strong> Subsequent items (instructions) stored in Text segment at next available address.随后的条目（指令）存储在文本段的下一个可用地址中。普通的用户模式下的代码段，简单来说就是存指令的地方。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>.ktext:&lt;/strong> Subsequent items stored in Kernel Text segment at next available address.随后的条目存储在内核文本段的下一个可用地址中。即内核模式下的代码段，内核模式下运行，具有最高权限，可以直接访问硬件和受保护的资源。对于p7来说就是存放异常处理程序的地方。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>异常包括很多种类型，中断和异常也不同，不同的异常或中断处理方式不一样，因此我们需要记录下异常或中断的信息，然后用特定方式处理异常，这就是CP0（协处理器）的作用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>进入中断异常处理程序后，我们先从CP0中获取异常或中断信息，然后跳转至不同的地方处理异常中断，一般最后都会跳转到eret，返回主程序。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="cpu与外设的交互">CPU与外设的交互
&lt;/h3>&lt;p>CPU的作用就是对外界输入数据做出对应的处理后返回结果。&lt;/p>
&lt;h4 id="外设">外设
&lt;/h4>&lt;p>对于p7，我们有三个外设需要处理。这三个外设的作用就是时不时向cpu发出一个中断信号。&lt;/p>
&lt;ul>
&lt;li>计时器（Timer）：计算机系统中的计时部件，可以按照配置定时地产生时钟中断。&lt;/li>
&lt;li>存储器（Memory）：计算机系统中的存储部件，用于存储指令和数据。我们在 P6 的时候已经接触过了。&lt;/li>
&lt;li>中断发生器（InterruptGenerator）：抽象的计算机系统外设，会随机的产生外部中断信号，产生的中断信号在 CPU 响应前会持续置高。&lt;/li>
&lt;/ul>
&lt;h4 id="内存">内存
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>我们可以认为内存也是一种外设。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>我们可以认为指令、数据、异常处理程序、外设寄存器等都是储存在同一内存中，只不过存储的位置不同，有着严格的界限。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>条目&lt;/strong>&lt;/th>
&lt;th>&lt;strong>地址或地址范围&lt;/strong>&lt;/th>
&lt;th>&lt;strong>备注&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>数据存储器&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_0000&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_2FFF&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>指令存储器&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_3000&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_6FFF&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PC 初始值&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_3000&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>异常处理程序入口地址&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_4180&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>计时器 0 寄存器地址&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F00&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F0B&lt;/strong>&lt;/em>&lt;/td>
&lt;td>计时器 0 的 3 个寄存器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>计时器 1 寄存器地址&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F10&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F1B&lt;/strong>&lt;/em>&lt;/td>
&lt;td>计时器 1 的 3 个寄存器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>中断发生器响应地址&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F20&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F23&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="宏观pc">宏观PC
&lt;/h3>&lt;p>对于流水线寄存器，每一流水级的PC都不同。我们希望CPU实现的功能应该是单周期的，引入多周期只是为了提高效率。如果我们把CPU封装起来，不关注内部的复杂过程，在外部看来CPU应该只有一个PC，即CPU一个周期仅执行一条指令。为此我们需要引入宏观PC的概念。&lt;/p>
&lt;ul>
&lt;li>我们将 CP0 放在 M 级（大家都放在M级，方便对拍），因此也以 M 级为界线，规定 M 级的 PC 就是宏观 PC。&lt;/li>
&lt;li>**所谓“宏观”指令，表示该指令之前的所有指令序列对 CPU 的更新已完成，该指令及其之后的指令序列对 CPU 的更新未完成。**放在M级显然满足这个定义。&lt;/li>
&lt;/ul>
&lt;h2 id="tasks">Tasks
&lt;/h2>&lt;h3 id="task-1-建立与外界的联系">Task-1: 建立与外界的联系
&lt;/h3>&lt;h4 id="timer">Timer
&lt;/h4>&lt;ul>
&lt;li>Timer内部有三个寄存器: 0号寄存器ctrl、1号寄存器preset、2号寄存器count。虽然说是寄存器，但我们可以认为其实内存的一部分。&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>0号寄存器ctrl&lt;/th>
&lt;th>1号寄存器preset&lt;/th>
&lt;th>2号寄存器count&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>TC1&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F00&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F03&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F04&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F07&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F08&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F0b&lt;/strong>&lt;/em>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TC2&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F10&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F13&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F14&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F17&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;em>&lt;strong>0x0000_7F18&lt;/strong>&lt;/em>∼&lt;em>&lt;strong>0x0000_7F1b&lt;/strong>&lt;/em>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>我们可以通过sw指令向对应Timer寄存器中存值以开启计时并调整倒计时。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># MODE 0 for timer1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$t1&lt;/span> &lt;span class="nv">$0&lt;/span> &lt;span class="m">9&lt;/span> &lt;span class="c1">#设置计时使能和中断屏蔽&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$t1&lt;/span> 0x7F00&lt;span class="o">(&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$t1&lt;/span> &lt;span class="nv">$0&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="c1">#设置计时数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$t1&lt;/span> 0x7F04&lt;span class="o">(&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># MODE 1 for timer1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$t1&lt;/span> &lt;span class="nv">$0&lt;/span> &lt;span class="m">11&lt;/span> &lt;span class="c1">#设置计时使能和中断屏蔽&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$t1&lt;/span> 0x7F00&lt;span class="o">(&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ori &lt;span class="nv">$t1&lt;/span> &lt;span class="nv">$0&lt;/span> &lt;span class="m">10&lt;/span> &lt;span class="c1">#设置计时数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sw &lt;span class="nv">$t1&lt;/span> 0x7F04&lt;span class="o">(&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="task-2-记录异常并流水">Task-2: 记录异常并流水
&lt;/h3>&lt;ul>
&lt;li>where CP0: M级。&lt;/li>
&lt;li>延迟槽指令: 如果一个处于延迟槽的指令发生了异常，我们从异常处理程序中返回时需要回到它的上一个指令（跳转指令）。因此我们需要增加判断一个信号用于判断指令是否在延迟槽中，并向后流水传至CP0。（branch、jump、jal、jr在ID级，IF级的指令即处于延迟槽中）。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">BD_IF&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">branch_ID&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">jump_ID&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>内部异常和外部中断：同时发生时处理外部中断，当内部无异常时设为Int(外部中断)。&lt;/li>
&lt;li>一条指令多个异常 &amp;amp; 多个指令异常：&lt;strong>优先处理最早可以探查到的异常&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">异常与中断码&lt;/th>
&lt;th style="text-align: left">助记符与名称&lt;/th>
&lt;th style="text-align: left">指令与指令类型&lt;/th>
&lt;th style="text-align: left">描述&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">0&lt;/td>
&lt;td style="text-align: left">&lt;code>Int&lt;/code> （外部中断）&lt;/td>
&lt;td style="text-align: left">所有指令&lt;/td>
&lt;td style="text-align: left">中断请求，来源于计时器与外部中断。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取指异常）&lt;/td>
&lt;td style="text-align: left">所有指令&lt;/td>
&lt;td style="text-align: left">PC 地址未字对齐。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取指异常）&lt;/td>
&lt;td style="text-align: left">所有指令&lt;/td>
&lt;td style="text-align: left">PC 地址超过 &lt;code>0x3000 ~ 0x6ffc&lt;/code>。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取数异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>lw&lt;/code>&lt;/td>
&lt;td style="text-align: left">取数地址未与 4 字节对齐。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取数异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>lh&lt;/code>&lt;/td>
&lt;td style="text-align: left">取数地址未与 2 字节对齐。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取数异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>lh&lt;/code>, &lt;code>lb&lt;/code>&lt;/td>
&lt;td style="text-align: left">取 Timer 寄存器的值。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取数异常）&lt;/td>
&lt;td style="text-align: left">load 型指令&lt;/td>
&lt;td style="text-align: left">计算地址时加法溢出。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4&lt;/td>
&lt;td style="text-align: left">&lt;code>AdEL&lt;/code> （取数异常）&lt;/td>
&lt;td style="text-align: left">load 型指令&lt;/td>
&lt;td style="text-align: left">取数地址超出 DM、Timer0、Timer1、中断发生器的范围。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">&lt;code>AdES&lt;/code> （存数异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>sw&lt;/code>&lt;/td>
&lt;td style="text-align: left">存数地址未 4 字节对齐。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">&lt;code>AdES&lt;/code> （存数异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>sh&lt;/code>&lt;/td>
&lt;td style="text-align: left">存数地址未 2 字节对齐。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">&lt;code>AdES&lt;/code> （存数异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>sh&lt;/code>, &lt;code>sb&lt;/code>&lt;/td>
&lt;td style="text-align: left">存 Timer 寄存器的值。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">&lt;code>AdES&lt;/code> （存数异常）&lt;/td>
&lt;td style="text-align: left">store 型指令&lt;/td>
&lt;td style="text-align: left">计算地址加法溢出。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">&lt;code>AdES&lt;/code> （存数异常）&lt;/td>
&lt;td style="text-align: left">store 型指令&lt;/td>
&lt;td style="text-align: left">向计时器的 Count 寄存器存值。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">&lt;code>AdES&lt;/code> （存数异常）&lt;/td>
&lt;td style="text-align: left">store 型指令&lt;/td>
&lt;td style="text-align: left">存数地址超出 DM、Timer0、Timer1、中断发生器的范围。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">8&lt;/td>
&lt;td style="text-align: left">&lt;code>Syscall&lt;/code> （系统调用）&lt;/td>
&lt;td style="text-align: left">&lt;code>syscall&lt;/code>&lt;/td>
&lt;td style="text-align: left">系统调用。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">10&lt;/td>
&lt;td style="text-align: left">&lt;code>RI&lt;/code>（未知指令）&lt;/td>
&lt;td style="text-align: left">-&lt;/td>
&lt;td style="text-align: left">未知的指令码。&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">12&lt;/td>
&lt;td style="text-align: left">&lt;code>Ov&lt;/code>（溢出异常）&lt;/td>
&lt;td style="text-align: left">&lt;code>add&lt;/code>, &lt;code>addi&lt;/code>, &lt;code>sub&lt;/code>&lt;/td>
&lt;td style="text-align: left">算术溢出。&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="if级">IF级
&lt;/h4>&lt;ul>
&lt;li>PC 地址未字对齐 &lt;code>AdEL&lt;/code>&lt;/li>
&lt;li>PC 地址超过 0x3000 ~ 0x6ffc &lt;code>AdEL&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// in PC module
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">assign&lt;/span> &lt;span class="n">exc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">pc&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">32&amp;#39;h3000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">pc&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mh">32&amp;#39;h6ffc&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">pc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="id级">ID级
&lt;/h4>&lt;ul>
&lt;li>未知的指令码 &lt;code>RI&lt;/code>&lt;/li>
&lt;li>syscall 对于syscall指令我们只需发出一个异常信号即可 &lt;code>syscall&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>如果有if嵌套，注意内部if对应的else也需要判断为未知指令。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// in controller module
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">xxxxxx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Funct&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">xxxxxx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//ctrl signal assignment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//exception RI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">exc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">xxxxxx&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//ctrl signal assignment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//exception RI
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">exc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ex级">EX级
&lt;/h4>&lt;ul>
&lt;li>算术溢出 &lt;code>OV&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">A_ext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">B_ext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">addi_temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A_ext&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">B_ext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">addi_overflow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">F&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">`ADDI&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">addi_temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">addi_temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">]));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">add_temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A_ext&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">B_ext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">add_overflow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">F&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">`ADD&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">add_temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">]));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">sub_temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A_ext&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">B_ext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">sub_overflow&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">F&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="no">`SUB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">sub_temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">sub_temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">]));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">exc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">addi_overflow&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">add_overflow&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_overflow&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d12&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ma级">MA级
&lt;/h4>&lt;ul>
&lt;li>load类指令
&lt;ul>
&lt;li>lw取数地址未与 4 字节对齐 &lt;code>AdEL&lt;/code>&lt;/li>
&lt;li>lh、lb取数地址未与 2 字节对齐 &lt;code>AdEL&lt;/code>&lt;/li>
&lt;li>lh、lb取 Timer 寄存器的值：寄存器的值为32位，取半字或比特是非法行为非法 &lt;code>AdEL&lt;/code>&lt;/li>
&lt;li>计算地址时加法溢出 &lt;code>AdEL&lt;/code>&lt;/li>
&lt;li>取数地址超出 DM、Timer0、Timer1、中断发生器的范围 &lt;code>AdEL&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>store类指令
&lt;ul>
&lt;li>sw存数地址未 4 字节对齐 &lt;code>AdES&lt;/code>&lt;/li>
&lt;li>sh、sb存数地址未 2 字节对齐 &lt;code>AdES&lt;/code>&lt;/li>
&lt;li>sh、sb存 Timer 寄存器的值 ：寄存器的值为32位，存半字或比特是非法行为非法 &lt;code>AdES&lt;/code>&lt;/li>
&lt;li>计算地址加法溢出 &lt;code>AdES&lt;/code>&lt;/li>
&lt;li>向计时器的 Count 寄存器存值 ：计时器的count寄存器是只读寄存器(read-only) &lt;code>AdES&lt;/code>&lt;/li>
&lt;li>存数地址超出 DM、Timer0、Timer1、中断发生器的范围 &lt;code>AdES&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//load EXC
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_load_align&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(((&lt;/span>&lt;span class="n">load_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b111&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">byte_offset&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="c1">//lw
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">load_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">byte_offset&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">)));&lt;/span> &lt;span class="c1">//lh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_load_adov&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">EX_EXCCode_pip_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d12&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_load_OutOfRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h2fff&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="c1">//DM
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f0b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="c1">//TC0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f1b&lt;/span>&lt;span class="p">)));&lt;/span> &lt;span class="c1">//TC1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_load_timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">load_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">load_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b010&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f00&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">EXCCode_ADEL&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">exc_load_align&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">exc_load_adov&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">exc_load_OutOfRange&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">exc_load_timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//store EXC
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_store_align&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(((&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b001&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">byte_offset&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">byte_offset&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_store_adov&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">EX_EXCCode_pip_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d12&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">//addr overflow
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_store_OutOfRange&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h2fff&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="c1">//DM
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f0b&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="c1">//TC0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f1b&lt;/span>&lt;span class="p">)));&lt;/span> &lt;span class="c1">//TC1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">exc_store_timer&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h0000&lt;/span>&lt;span class="n">_7f08&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h0000&lt;/span>&lt;span class="n">_7f0b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h0000&lt;/span>&lt;span class="n">_7f18&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">32&amp;#39;h0000&lt;/span>&lt;span class="n">_7f1b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b010&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">ALU_C_MA&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mh">32&amp;#39;h7f00&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">EXCCode_ADES&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">store_type_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">exc_store_align&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">exc_store_adov&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">exc_store_OutOfRange&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">exc_store_timer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">MA_EXCCode_pip_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">EXCCode_ADEL&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">EXCCode_ADES&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d5&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">4&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="task-3-加入协处理器cp0">Task-3: 加入协处理器CP0
&lt;/h3>&lt;ul>
&lt;li>所有寄存器均为32bits&lt;/li>
&lt;li>处理中断和异常信号，判断是否发出req信号，发出req信号时所有流水寄存器清空（部分信号需要特殊处理）&lt;/li>
&lt;li>eret指令需要清空EXL部分&lt;/li>
&lt;li>0001_0000&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">寄存器&lt;/th>
&lt;th>寄存器编号&lt;/th>
&lt;th style="text-align: left">功能域&lt;/th>
&lt;th style="text-align: left">位域&lt;/th>
&lt;th style="text-align: left">解释&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">SR（State Register）&lt;/td>
&lt;td>12&lt;/td>
&lt;td style="text-align: left">IM（Interrupt Mask）&lt;/td>
&lt;td style="text-align: left">15:8&lt;/td>
&lt;td style="text-align: left">分别对应六个外部中断，相应位置 1 表示允许中断，置 0 表示禁止中断。这是一个被动的功能，只能通过 &lt;code>mtc0&lt;/code> 这个指令修改，通过修改这个功能域，我们可以屏蔽一些中断。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">SR（State Register）&lt;/td>
&lt;td>12&lt;/td>
&lt;td style="text-align: left">EXL（Exception Level）&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">任何异常发生时置位，这会强制进入核心态（也就是进入异常处理程序）并禁止中断。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">SR（State Register）&lt;/td>
&lt;td>12&lt;/td>
&lt;td style="text-align: left">IE（Interrupt Enable）&lt;/td>
&lt;td style="text-align: left">0&lt;/td>
&lt;td style="text-align: left">全局中断使能，该位置 1 表示允许中断，置 0 表示禁止中断。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Cause&lt;/td>
&lt;td>13&lt;/td>
&lt;td style="text-align: left">BD（Branch Delay）&lt;/td>
&lt;td style="text-align: left">31&lt;/td>
&lt;td style="text-align: left">当该位置 1 的时候，EPC 指向当前指令的前一条指令（一定为跳转），否则指向当前指令。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Cause&lt;/td>
&lt;td>13&lt;/td>
&lt;td style="text-align: left">IP（Interrupt Pending）&lt;/td>
&lt;td style="text-align: left">15:10&lt;/td>
&lt;td style="text-align: left">为 6 位待决的中断位，分别对应 6 个外部中断，相应位置 1 表示有中断，置 0 表示无中断，将会每个周期被修改一次，修改的内容来自计时器和外部中断。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Cause&lt;/td>
&lt;td>13&lt;/td>
&lt;td style="text-align: left">ExcCode&lt;/td>
&lt;td style="text-align: left">6:2&lt;/td>
&lt;td style="text-align: left">异常编码，记录当前发生的是什么异常。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">EPC&lt;/td>
&lt;td>14&lt;/td>
&lt;td style="text-align: left">-&lt;/td>
&lt;td style="text-align: left">-&lt;/td>
&lt;td style="text-align: left">记录异常处理结束后需要返回的 PC。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">端口&lt;/th>
&lt;th style="text-align: left">方向&lt;/th>
&lt;th style="text-align: left">位数&lt;/th>
&lt;th style="text-align: left">解释&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">clk&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">时钟信号。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">reset&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">复位信号。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">en&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">写使能信号。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">CP0Add&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">读取/写入目标寄存器地址。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">CP0In&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">32&lt;/td>
&lt;td style="text-align: left">写入寄存器数据。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">CP0Out&lt;/td>
&lt;td style="text-align: left">OUT&lt;/td>
&lt;td style="text-align: left">32&lt;/td>
&lt;td style="text-align: left">读出寄存器数据。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">VPC&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">32&lt;/td>
&lt;td style="text-align: left">当前异常中断发生时PC的值。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">BDIn&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">当前异常中断发生指令是否是延迟槽内指令。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">ExcCodeIn&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">5&lt;/td>
&lt;td style="text-align: left">当前发生异常类型。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">HWInt&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">6&lt;/td>
&lt;td style="text-align: left">外部产生的中断信号。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">EXLClr&lt;/td>
&lt;td style="text-align: left">IN&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">是否结束异常中断处理（复位 EXL）。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">EPCOut&lt;/td>
&lt;td style="text-align: left">OUT&lt;/td>
&lt;td style="text-align: left">32&lt;/td>
&lt;td style="text-align: left">EPC 的值。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">Req&lt;/td>
&lt;td style="text-align: left">OUT&lt;/td>
&lt;td style="text-align: left">1&lt;/td>
&lt;td style="text-align: left">进入处理程序请求。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define IM regs[12][15:10]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define EXL regs[12][1]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define IE regs[12][0]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define BD regs[13][31]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define IP regs[13][15:10]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define EXCCode regs[13][6:2]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="c1">// SR-12, Cause-13, EPC-14
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">regs&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">CP0Out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">CP0Addr&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">IntReq&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">HWInt&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="no">`IM&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="no">`EXL&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="no">`IE&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 允许当前中断 且 不在中断异常中 且 允许中断发生
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="n">ExcReq&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">EXCCodeIn&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="no">`EXL&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 存在异常 且 不在中断中
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">assign&lt;/span> &lt;span class="n">Req&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">IntReq&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">ExcReq&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">tempEPC&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">BDIn&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">VPC&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">4&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">VPC&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">14&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">EPCOut&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">tempEPC&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">integer&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">initial&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`IP&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">HWInt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">CP0Addr&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">CP0In&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span> &lt;span class="c1">// int|exc
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="no">`EXCCode&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">IntReq&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">EXCCodeIn&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`EXL&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">regs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">14&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">tempEPC&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`BD&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">BDIn&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">EXLClr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`EXL&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="task-4-加指令">Task-4: 加指令
&lt;/h3>&lt;p>在 P6 基础上新增了 &lt;code>mfc0, mtc0, eret, syscall&lt;/code> 四条新指令&lt;/p>
&lt;p>目前p7要求实现如下指令：(最好把jump指令也实现了，方便处理异常)&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">nop, add, sub, and, or, slt, sltu, lui
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">addi, andi, ori
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lb, lh, lw, sb, sh, sw
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mult, multu, div, divu, mfhi, mflo, mthi, mtlo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">beq, bne, jal, jr,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mfc0, mtc0, eret, syscall
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="mfc0">MFC0
&lt;/h4>&lt;p>把CP0中的rd号寄存器的值存入grf的rt寄存器&lt;/p>
&lt;ul>
&lt;li>需要简单处理下转发，类似lw的转发&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p7/mfc0.png"
width="838"
height="622"
srcset="https://lhy0424.top/p/co_p7/mfc0_hu_50ab437d1654dc62.png 480w, https://lhy0424.top/p/co_p7/mfc0_hu_9c51af34e0fe2e67.png 1024w"
loading="lazy"
alt="mfc0"
class="gallery-image"
data-flex-grow="134"
data-flex-basis="323px"
>&lt;/p>
&lt;h4 id="mtc0">MTC0
&lt;/h4>&lt;p>将grf的rt号寄存器的值存入CP0的rd号寄存器&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p7/mtc0.png"
width="836"
height="642"
srcset="https://lhy0424.top/p/co_p7/mtc0_hu_ab07cb8471ce8106.png 480w, https://lhy0424.top/p/co_p7/mtc0_hu_83136521f18a4ef5.png 1024w"
loading="lazy"
alt="mtc0"
class="gallery-image"
data-flex-grow="130"
data-flex-basis="312px"
>&lt;/p>
&lt;h4 id="eret">ERET
&lt;/h4>&lt;p>从错误处理程序中返回到主程序&lt;/p>
&lt;ul>
&lt;li>在ID级时设置next_pc为CP0的EXC&lt;/li>
&lt;li>在ID级时清空延迟槽，确保后续指令不会被处理&lt;/li>
&lt;li>到达MA级时，需要清空CP0的EXL部分，表示当前不在处于核心状态（异常处理程序）&lt;/li>
&lt;li>在ID级时，如果EX或MA级是MTC0且目标寄存器为14号（EXC）则阻塞，确保返回地址正确。&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p7/eret.png"
width="866"
height="682"
srcset="https://lhy0424.top/p/co_p7/eret_hu_1e53b4866b3d2ee4.png 480w, https://lhy0424.top/p/co_p7/eret_hu_7c33f88c193f7d6e.png 1024w"
loading="lazy"
alt="eret"
class="gallery-image"
data-flex-grow="126"
data-flex-basis="304px"
>&lt;/p>
&lt;h4 id="syscall">syscall
&lt;/h4>&lt;p>在controller里发出一个异常信号（异常码为8）即可&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p7/syscall.png"
width="879"
height="616"
srcset="https://lhy0424.top/p/co_p7/syscall_hu_773486bcb530b1fb.png 480w, https://lhy0424.top/p/co_p7/syscall_hu_ee3870c9a69b286a.png 1024w"
loading="lazy"
alt="syscall"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="342px"
>&lt;/p>
&lt;h3 id="流水寄存器行为">流水寄存器行为
&lt;/h3>&lt;h4 id="为什么要修改寄存器的清空行为">为什么要修改寄存器的清空行为？
&lt;/h4>&lt;p>我们在阻塞的时候会在EX级产生一个bubble，可以看作nop不发生任何作用，但实际上我们要把CPU封装为单周期CPU，级两条相邻的指令之间不会莫名其妙多出来一个nop指令。&lt;/p>
&lt;p>试想，如果不修改清空逻辑的情况下，ID级是一个延迟槽内的指令，正常来说它到达MA级时如果发生了异常或中断，我们的EPC是需要写入PC-4的，因为我们从异常处理程序中返回时需要返回到延迟槽指令的前一条指令（即跳转指令）。而如果延迟槽内的指令在ID级时发生了阻塞产生了一个&amp;rsquo;nop&amp;rsquo;，nop流水到MA级时发生了异常或中断我们该如何记录EPC？这个&amp;rsquo;nop&amp;rsquo;在外部看来是不应该存在的，其没有对应的PC，其对应的PC应该是延迟槽指令的PC，其也应该被标记为延迟槽内指令，这样从异常处理程序中返回时才能返回到正确的地址。&lt;/p>
&lt;p>按照从上至下的优先级依次处理&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>信号&lt;/th>
&lt;th>PC流水寄存器行为&lt;/th>
&lt;th>BD流水寄存器行为&lt;/th>
&lt;th>其他流水寄存器行为&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>reset&lt;/code>&lt;/td>
&lt;td>复位至 &lt;code>0x00003000&lt;/code>&lt;/td>
&lt;td>复位至 &lt;code>0&lt;/code>&lt;/td>
&lt;td>清空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>req&lt;/code>&lt;/td>
&lt;td>设置为 &lt;code>0x00004180&lt;/code>&lt;/td>
&lt;td>设置为 &lt;code>0&lt;/code>&lt;/td>
&lt;td>清空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ID_EXLClr&lt;/code> （仅对F级到D级流水寄存器起作用，&lt;strong>且此时stall信号为0&lt;/strong>）&lt;/td>
&lt;td>设置为当前周期的 &lt;code>EPC&lt;/code> 的值&lt;/td>
&lt;td>不发生变化&lt;/td>
&lt;td>清空&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>flush&lt;/code>（仅指对D级到E级流水寄存器起作用的阻塞信号）&lt;/td>
&lt;td>不发生变化&lt;/td>
&lt;td>不发生变化&lt;/td>
&lt;td>清空&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="pc">PC
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pc&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h4180&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">32&amp;#39;h3000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pc&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">next_pc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="if_id-reg">IF_ID Reg
&lt;/h4>&lt;p>clear_bd表示清空延迟槽，对于P7仅针对eret指令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">clr&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">req&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">clear_bd&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//置0操作省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">pc_add4_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00003004&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00004184&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">clear_bd&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">EPC:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BD_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">clear_bd&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">BD:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="id_ex-reg">ID_EX Reg
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">stall&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//置0操作省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">pc_add4_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00003004&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00004184&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">stall&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">pc_add4:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">BD_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">stall&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">BD:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ex_ma-reg">EX_MA Reg
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">clr&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//置0操作省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">pc_add4_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">reset&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00003004&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">req&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00004184&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ma_wb-reg">MA_WB Reg
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">clr&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">req&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//置0操作省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">pc_add4_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">reset&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00003004&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">req&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&amp;#39;h00004184&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//省略
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="我的bug">我的Bug
&lt;/h2>&lt;p>以下是我在通过课下弱测和中测后发现的bug：&lt;/p>
&lt;ul>
&lt;li>不涉及计算操作时ALUOP默认设为了`ADD，导致不是ALU类指令时出现了溢出情况。&lt;/li>
&lt;li>当MA级异常时，如果EX级为mthi或mtlo时仍会向HI或LO中写入值。&lt;/li>
&lt;li>当PC错误或遇到未知指令时没有向后传递nop。&lt;/li>
&lt;li>mtc0位于MA级时，如果当出现中断时，仍会向CP0中的寄存器写入值。&lt;/li>
&lt;li>EXCCode优先级问题。load或store指令会触发EX级的算术overflow（异常码12）异常，在MA级也会除法overflow（异常码4或5）的异常，按照&lt;code>优先处理先探查到的错误&lt;/code>的原则我们会选择EX级的算术overflow，导致存入CP0的异常码错误。&lt;/li>
&lt;/ul>
&lt;h2 id="测试方案">测试方案
&lt;/h2>&lt;ul>
&lt;li>手动构造样例确保新指令的功能正确性，尽可能覆盖大部分异常情况。&lt;/li>
&lt;li>随机生成指令强测确保转发和阻塞的正确性。对CO-Killer略加修改，生成符合要求的随机数据。&lt;/li>
&lt;li>限制读写寄存器的范围，能够尽可能多的造成数据冒险，再加上大量随机数据，基本可以覆盖全部转发和阻塞情况。&lt;/li>
&lt;li>利用自己写的python脚本填充nop至0x4180。&lt;/li>
&lt;li>定时器产生周期性中断信号，测试timer的中断是否正确被处理。&lt;/li>
&lt;li>修改testbench产生中断，测试中断发生器发出的中断是否正确被处理。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 填充nop&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">last_pc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;enter the last pc in text: &amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">last_pc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">while&lt;/span> &lt;span class="n">pc&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">0x4180&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;# &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="nb">hex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pc&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">nop&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pc&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">4&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="思考题">思考题
&lt;/h2>&lt;ol>
&lt;li>请查阅相关资料，说明鼠标和键盘的输入信号是如何被 CPU 知晓的？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>鼠标和键盘产生中断信号，进入中断处理区的对应位置，将输入信号从鼠标和键盘中读入寄存器。&lt;/p>&lt;/blockquote>
&lt;ol start="2">
&lt;li>请思考为什么我们的 CPU 处理中断异常必须是已经指定好的地址？如果你的 CPU 支持用户自定义入口地址，即处理中断异常的程序由用户提供，其还能提供我们所希望的功能吗？如果可以，请说明这样可能会出现什么问题？否则举例说明。（假设用户提供的中断处理程序合法）&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;ul>
&lt;li>指定好的中断处理入口地址由硬件设计决定，能确保所有中断和异常按照既定逻辑处理。如果允许用户自定义入口地址，用户可能会直接跳过关键的上下文保存步骤，导致程序状态紊乱&lt;/li>
&lt;li>指定的中断地址通常位于受保护的系统区域，由操作系统或固件控制。用户故意定义有害的中断处理程序，例如窃取敏感信息或修改关键数据。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;ol start="3">
&lt;li>为何与外设通信需要 Bridge？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;ul>
&lt;li>CPU与外设数据吞吐量存在差异：Bridge充当缓冲区和速率匹配器，协调高速的处理器与低速外设之间的数据交换。&lt;/li>
&lt;li>地址映射差异：Bridge可以对地址进行解码，将处理器的访问请求转化为外设能够理解的操作。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;ol start="4">
&lt;li>请阅读官方提供的定时器源代码，阐述两种中断模式的异同，并针对每一种模式绘制状态移图。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;strong>MODE 0&lt;/strong>&lt;/p>
&lt;p>定时产生中断信号&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p7/timer_mode0.png"
width="401"
height="328"
srcset="https://lhy0424.top/p/co_p7/timer_mode0_hu_a1acf249ce3603c1.png 480w, https://lhy0424.top/p/co_p7/timer_mode0_hu_eb0ef2b2f46f6d2d.png 1024w"
loading="lazy"
alt="timer_mode0"
class="gallery-image"
data-flex-grow="122"
data-flex-basis="293px"
>&lt;/p>
&lt;p>&lt;strong>MODE 1&lt;/strong>&lt;/p>
&lt;p>周期性产生中断信号&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p7/timer_mode1.png"
width="401"
height="328"
srcset="https://lhy0424.top/p/co_p7/timer_mode1_hu_41c645421cf1b3fd.png 480w, https://lhy0424.top/p/co_p7/timer_mode1_hu_dfd9c5c6476abdc8.png 1024w"
loading="lazy"
alt="timer_mode1"
class="gallery-image"
data-flex-grow="122"
data-flex-basis="293px"
>&lt;/p>&lt;/blockquote>
&lt;ol start="5">
&lt;li>倘若中断信号流入的时候，在检测宏观 PC 的一级如果是一条空泡（你的 CPU 该级所有信息均为空）指令，此时会发生什么问题？在此例基础上请思考：在 P7 中，清空流水线产生的空泡指令应该保留原指令的哪些信息？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>如果此时有一个中断或异常信号，则CP0记录下的PC为0x0000，在从异常处理程序返回时会发生错误。&lt;/p>
&lt;p>应该保留PC值，由于在Req信号有效时，通过将流水寄存器的PC值不进行复位，使得达到精确异常的效果。使得回到EPC时依然是精确的。&lt;/p>&lt;/blockquote>
&lt;ol start="6">
&lt;li>为什么 &lt;code>jalr&lt;/code> 指令为什么不能写成 &lt;code>jalr $31, $31&lt;/code>？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>如果 &lt;code>jalr $31 $31 &lt;/code>的延迟槽内发生异常或需要响应中断。那么 &lt;code>$31&lt;/code> 寄存器的值已经被 &lt;code>jalr&lt;/code> 改变，但是处理异常结束后，会再次执行 &lt;code>jalr&lt;/code> 指令，这就会跳转到不正确的 &lt;code>PC&lt;/code> 地址。&lt;/p>&lt;/blockquote>
&lt;ol start="7">
&lt;li>[P7 选做] 请详细描述你的测试方案及测试数据构造策略。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>见上文&lt;/p>&lt;/blockquote>
&lt;h2 id="课程组官方testbench">课程组官方TestBench
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="no">`timescale&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="n">ns&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="n">ps&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="n">mips_txt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="n">reset&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="n">interrupt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">macroscopic_pc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">i_inst_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">i_inst_rdata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_data_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_data_rdata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">3&lt;/span> &lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_int_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">3&lt;/span> &lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_int_byteen&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">m_inst_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">w_grf_we&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">4&lt;/span> &lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">w_grf_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">w_grf_wdata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">w_inst_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mips&lt;/span> &lt;span class="n">uut&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">clk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">interrupt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">interrupt&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">macroscopic_pc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">macroscopic_pc&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">i_inst_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i_inst_addr&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">i_inst_rdata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i_inst_rdata&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_data_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_data_addr&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_data_rdata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_data_rdata&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_int_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_int_addr&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_int_byteen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_int_byteen&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">m_inst_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m_inst_addr&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">w_grf_we&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w_grf_we&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">w_grf_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w_grf_addr&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">w_grf_wdata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w_grf_wdata&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="n">w_inst_addr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">w_inst_addr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">initial&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">clk&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reset&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">interrupt&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">#&lt;/span>&lt;span class="mh">20&lt;/span> &lt;span class="n">reset&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">integer&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">fixed_addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">4095&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">inst&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">5119&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ----------- For Instructions -----------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">m_data_rdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="n">m_data_addr&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mh">5120&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">i_inst_rdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">inst&lt;/span>&lt;span class="p">[((&lt;/span>&lt;span class="n">i_inst_addr&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">32&amp;#39;h3000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mh">5120&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">initial&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">$readmemh&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;code.txt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">inst&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">5120&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ----------- For Data Memory -----------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fixed_wdata&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[(&lt;/span>&lt;span class="n">m_data_addr&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">4095&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fixed_addr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_data_addr&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">32&amp;#39;hfffffffc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">24&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">24&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">16&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">23&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">16&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">15&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">8&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">15&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">8&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m_data_byteen&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">7&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_data_wdata&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">7&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">4096&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">m_data_byteen&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">fixed_addr&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mh">2&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mh">4096&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">fixed_addr&lt;/span> &lt;span class="o">&amp;gt;&amp;gt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">$display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d@%h: *%h &amp;lt;= %h&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">$time&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m_inst_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fixed_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fixed_wdata&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ----------- For Registers -----------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">w_grf_we&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">w_grf_addr&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">$display&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d@%h: $%d &amp;lt;= %h&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">$time&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w_inst_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w_grf_addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">w_grf_wdata&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ----------- For Interrupt -----------
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">fixed_macroscopic_pc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">fixed_macroscopic_pc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">macroscopic_pc&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">32&amp;#39;hfffffffc&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">parameter&lt;/span> &lt;span class="n">target_pc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">32&amp;#39;h00003010&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">integer&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">initial&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">negedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">interrupt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">interrupt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="n">m_int_byteen&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m_int_addr&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="mh">32&amp;#39;hfffffffc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">32&amp;#39;h7f20&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">interrupt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">fixed_macroscopic_pc&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">target_pc&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">interrupt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">#&lt;/span>&lt;span class="mh">2&lt;/span> &lt;span class="n">clk&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="n">clk&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">endmodule&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>P6_设计文档</title><link>https://lhy0424.top/p/co_p6/</link><pubDate>Tue, 10 Dec 2024 22:26:00 +0000</pubDate><guid>https://lhy0424.top/p/co_p6/</guid><description>&lt;img src="https://lhy0424.top/p/co_p6/P6_cover.jpg" alt="Featured image of post P6_设计文档" />&lt;h1 id="p6_document">P6_document
&lt;/h1>&lt;h2 id="hazardv">Hazard.v
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>input&lt;/th>
&lt;th>explain&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Instr_ID&lt;/td>
&lt;td>ID阶段的指令码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instr_EX&lt;/td>
&lt;td>EX阶段的指令码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instr_MA&lt;/td>
&lt;td>MA阶段的指令码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A3_EX&lt;/td>
&lt;td>EX阶段的寄存器写入地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A3_MA&lt;/td>
&lt;td>MA阶段的寄存器写入地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>busy&lt;/td>
&lt;td>乘除槽正在进行计算&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>start&lt;/td>
&lt;td>乘除槽开始进行计算&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="t_use表格需求者">T_use表格（需求者）
&lt;/h4>&lt;p>指令位于ID级时，还需要多少个周期才必须要使用数据。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>add&lt;/th>
&lt;th>sub&lt;/th>
&lt;th>ori&lt;/th>
&lt;th>lw&lt;/th>
&lt;th>sw&lt;/th>
&lt;th>beq&lt;/th>
&lt;th>lui&lt;/th>
&lt;th>jal&lt;/th>
&lt;th>jr&lt;/th>
&lt;th>nop&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$T_{use}(rs)$&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$T_{use}(rt)$&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>P6_new&lt;/th>
&lt;th>and&lt;/th>
&lt;th>or&lt;/th>
&lt;th>slt&lt;/th>
&lt;th>sltu&lt;/th>
&lt;th>addi&lt;/th>
&lt;th>andi&lt;/th>
&lt;th>lb&lt;/th>
&lt;th>lh&lt;/th>
&lt;th>sb&lt;/th>
&lt;th>sh&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$T_{use}(rs)$&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$T_{use}(rt)$&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>2&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>P6_new&lt;/th>
&lt;th>mult&lt;/th>
&lt;th>multu&lt;/th>
&lt;th>div&lt;/th>
&lt;th>divu&lt;/th>
&lt;th>mfhi&lt;/th>
&lt;th>mflo&lt;/th>
&lt;th>mthi&lt;/th>
&lt;th>mtlo&lt;/th>
&lt;th>bne&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>$T_{use}(rs)$&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>$T_{use}(rt)$&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tuse_rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">ori_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lw_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sw_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lui_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">and_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">or_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">slt_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sltu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">addi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">andi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lb_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lh_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sb_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sh_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mthi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mtlo_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mult_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">multu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">div_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">divu_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">beq_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">jr_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">bne_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b11&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tuse_rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">and_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">or_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">slt_ID&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="n">sltu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mult_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">multu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">div_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">divu_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">sw_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sb_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sh_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">beq_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">bne_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b11&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="t_new表格供给者">T_new表格（供给者）
&lt;/h4>&lt;p>T_new: 供给指令位于某个流水级时还需要多少个周期才可以计算出结果并存储到流水寄存器中。&lt;/p>
&lt;p>&lt;em>&lt;strong>早于需求指令进入流水线的供给者还需要多少cycle能够产生需求者需要的寄存器值。&lt;/strong>&lt;/em>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Intsr&lt;/th>
&lt;th>add&lt;/th>
&lt;th>sub&lt;/th>
&lt;th>ori&lt;/th>
&lt;th>lw&lt;/th>
&lt;th>sw&lt;/th>
&lt;th>beq&lt;/th>
&lt;th>lui&lt;/th>
&lt;th>jal&lt;/th>
&lt;th>jr&lt;/th>
&lt;th>nop&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>功能部件(结果来源)&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EX&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MA&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WB&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>P6_new_Intsr&lt;/th>
&lt;th>and&lt;/th>
&lt;th>or&lt;/th>
&lt;th>slt&lt;/th>
&lt;th>sltu&lt;/th>
&lt;th>addi&lt;/th>
&lt;th>andi&lt;/th>
&lt;th>lb&lt;/th>
&lt;th>lh&lt;/th>
&lt;th>sb&lt;/th>
&lt;th>sh&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>功能部件(结果来源)&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EX&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>2&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MA&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WB&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>P6_new_Intsr&lt;/th>
&lt;th>mult&lt;/th>
&lt;th>multu&lt;/th>
&lt;th>div&lt;/th>
&lt;th>divu&lt;/th>
&lt;th>mfhi&lt;/th>
&lt;th>mflo&lt;/th>
&lt;th>mthi&lt;/th>
&lt;th>mtlo&lt;/th>
&lt;th>bne&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>功能部件(结果来源)&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>mdb&lt;/td>
&lt;td>mdb&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EX&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MA&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WB&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tnew_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">ori_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lui_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">and_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">or_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">slt_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sltu_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">addi_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">andi_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mfhi_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mflo_EX&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">lw_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lb_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lh_EX&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tnew_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">lw_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lb_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lh_MA&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="rs策略矩阵">rs策略矩阵
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>$T_{use} \textbackslash \space T_{new}$&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="rt策略矩阵">rt策略矩阵
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>$T_{use} \textbackslash \space T_{new}$&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="如何理解策略矩阵">如何理解策略矩阵
&lt;/h3>&lt;ul>
&lt;li>策略矩阵针对的是AT法中的Time部分，具体判断阻塞还是转发需要综合Adress部分&lt;/li>
&lt;li>对于ALU型指令，如add，只需要关注 $T_{new}$ 的ALU一列，其表示在当前流水级下，还有多少周期才能计算出结果并存入流水级寄存器。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RS_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rs&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_EX&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RS_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rs&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RT_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_EX&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RT_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">busy&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">mult_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">multu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">div_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">divu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mfhi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mflo_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mthi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mtlo_ID&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">Stall&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Stall_RS_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RS_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RT_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RT_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_md&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="forward-in-mipsv">Forward in mips.v
&lt;/h2>&lt;h4 id="数据的供给者">数据的供给者
&lt;/h4>&lt;ul>
&lt;li>EX_MA级流水线寄存器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">forward_EX_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">RegWrite_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">ALU_C_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">RegWrite_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="n">pc_add4_MA&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">32&amp;#39;h404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>MA_WB级流水线寄存器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">grf_WD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">ALU_C_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">dm_data_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">pc_add4_WB&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">forward_MA_WB&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RegWrite_WB&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">grf_WD:&lt;/span> &lt;span class="mh">32&amp;#39;h405&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="数据需求者">数据需求者
&lt;/h4>&lt;ul>
&lt;li>ID级&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">RD1_ID_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD1_ID&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">RD2_ID_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD2_ID&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>EX级&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//forward--select valid ALU_A and ALU_B
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">ALU_A_EX_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD1_EX&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Grt_EX_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD2_EX&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//将目前正确的Grt值，流水到MA级供sw指令使用，也可供R-type-ALU指令使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Grt_MA_valid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">ALU_B_EX_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALUSrc_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">Grt_EX_valid:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">ALUSrc_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">ext32_EX&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>MA级&lt;/p>
&lt;p>再一次获取转发数据，确保DM中的Grt值是正确的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Grt_MA_valid_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span> &lt;span class="n">Grt_MA_valid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="流水线寄存器">流水线寄存器
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>PC&lt;/th>
&lt;th>IF_ID&lt;/th>
&lt;th>ID_EX&lt;/th>
&lt;th>EX_MA&lt;/th>
&lt;th>MA_WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>en&lt;/td>
&lt;td>nStall&lt;/td>
&lt;td>nStall&lt;/td>
&lt;td>true&lt;/td>
&lt;td>false&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>clr&lt;/td>
&lt;td>null&lt;/td>
&lt;td>false&lt;/td>
&lt;td>Stall&lt;/td>
&lt;td>true&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>RegDst&lt;/th>
&lt;th>ExtOp&lt;/th>
&lt;th>jump&lt;/th>
&lt;th>jumpSrc&lt;/th>
&lt;th>branch&lt;/th>
&lt;th>bOp&lt;/th>
&lt;th>ALUSrc&lt;/th>
&lt;th>ALUOP&lt;/th>
&lt;th>mdOp&lt;/th>
&lt;th>load_type&lt;/th>
&lt;th>store_type&lt;/th>
&lt;th>MemWrite&lt;/th>
&lt;th>Mem2Reg&lt;/th>
&lt;th>RegWrite&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>作用阶段&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>MA&lt;/td>
&lt;td>MA&lt;/td>
&lt;td>MA&lt;/td>
&lt;td>WB&lt;/td>
&lt;td>WB&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IF_ID&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ID_EX&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EX_MA&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MA_WB&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="stall-explain">Stall Explain
&lt;/h4>&lt;p>ID级指令静止，EX级插入一个nop&lt;/p>
&lt;ul>
&lt;li>PC不写入新数据&lt;/li>
&lt;li>IF_ID寄存器不写入新数据&lt;/li>
&lt;li>ID_EX寄存器清零，即插入nop(0x00000000)&lt;/li>
&lt;/ul>
&lt;h4 id="logic">Logic
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="n">Stage_Reg&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">reset&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">en&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">output&lt;/span> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">data_out&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">initial&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">clr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="信号解释">信号解释
&lt;/h2>&lt;h4 id="jumpsrc-2-bit">jumpSrc (2-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>jumpSrc&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2&amp;rsquo;b00&lt;/td>
&lt;td>branch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b01&lt;/td>
&lt;td>jump&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b10&lt;/td>
&lt;td>jr&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">next_pc_ID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">jumpSrc_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">branch_offset_ID:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">jumpSrc_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">jumpExt32_ID:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">jumpSrc_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">RD1_ID_valid:&lt;/span> &lt;span class="mh">32&amp;#39;h404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="mem2reg-2-bit">Mem2Reg (2-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Mem2Reg&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2‘b00&lt;/td>
&lt;td>ALU&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b01&lt;/td>
&lt;td>lw&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b10&lt;/td>
&lt;td>link&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">grf_WD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">ALU_C_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">dm_data_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">pc_add4_WB&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="regdst-2-bit">RegDst (2-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>RegDst&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2&amp;rsquo;b00&lt;/td>
&lt;td>无需写入寄存器的指令&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b01&lt;/td>
&lt;td>R-type，写入rd寄存器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b10&lt;/td>
&lt;td>I-type，写入rt寄存器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b11&lt;/td>
&lt;td>link，写入$ra ($31)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">A3_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">//null
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">RD_EX:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">RT_EX:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">5&amp;#39;h1f&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b00000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="aluop-4-bit">ALUOp (4-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ALUOp&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>4&amp;rsquo;b0000&lt;/td>
&lt;td>add&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0001&lt;/td>
&lt;td>sub&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0010&lt;/td>
&lt;td>or&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0011&lt;/td>
&lt;td>lui&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0100&lt;/td>
&lt;td>and&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0101&lt;/td>
&lt;td>slt&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0110&lt;/td>
&lt;td>sltu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0111&lt;/td>
&lt;td>addi&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">A_ext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">B_ext&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A_ext&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">B_ext&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`ADD&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`ADDI&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="p">])&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`SUB&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`OR&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`SL16&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">B&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mh">16&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`AND&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`SLT&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`SLTU&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">endcase&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="mdop-4-bit">mdOp (4-bit)
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>mdOp&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>4&amp;rsquo;b0001&lt;/td>
&lt;td>mult&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0010&lt;/td>
&lt;td>multu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0011&lt;/td>
&lt;td>div&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0100&lt;/td>
&lt;td>divu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0101&lt;/td>
&lt;td>mthi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0110&lt;/td>
&lt;td>mtlo&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0111&lt;/td>
&lt;td>mfhi&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b1000&lt;/td>
&lt;td>mflo&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// in MulDivBlock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">op&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b0001&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">prod_HI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prod_LO&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="c1">//mult
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b0010&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">prod_HI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prod_LO&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">$unsigned&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">$unsigned&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">//multu
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b0011&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">prod_HI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prod_LO&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">A&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">$signed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">B&lt;/span>&lt;span class="p">)};&lt;/span>&lt;span class="c1">//div
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b0100&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">prod_HI&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">prod_LO&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">A&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="c1">//divu
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">endcase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">mdb_output&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">mdOp_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b0111&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">mdb_HI:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">mdOp_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b1000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">mdb_LO:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="load_type-3-bit">load_type (3-bit)
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>load_type&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>3&amp;rsquo;b000&lt;/td>
&lt;td>lw&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&amp;rsquo;b001&lt;/td>
&lt;td>lbu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&amp;rsquo;b010&lt;/td>
&lt;td>lb&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&amp;rsquo;b011&lt;/td>
&lt;td>lhu&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&amp;rsquo;b100&lt;/td>
&lt;td>lh&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">data_out&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b000&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">data_input:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b001&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mh">24&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">byte_sel&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b010&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="p">{{&lt;/span>&lt;span class="mh">24&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">byte_sel&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">7&lt;/span>&lt;span class="p">]}},&lt;/span> &lt;span class="n">byte_sel&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b011&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mh">16&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">hw_sel&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">load_type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="p">{{&lt;/span>&lt;span class="mh">16&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">hw_sel&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">15&lt;/span>&lt;span class="p">]}},&lt;/span> &lt;span class="n">hw_sel&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="store_type-3-bit">store_type (3-bit)
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>store_type&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>3&amp;rsquo;b001&lt;/td>
&lt;td>sw&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&amp;rsquo;b010&lt;/td>
&lt;td>sb&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&amp;rsquo;b100&lt;/td>
&lt;td>sh&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">byteen_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b001&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b1111&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">//word
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b010&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">byte_sel:&lt;/span>&lt;span class="c1">//byte
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">store_type_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">hw_sel:&lt;/span>&lt;span class="c1">//half word
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">4&lt;/span>&lt;span class="mb">&amp;#39;b0000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="测试方案">测试方案
&lt;/h2>&lt;h3 id="指令分类">指令分类
&lt;/h3>&lt;h4 id="r-type">R-type
&lt;/h4>&lt;ul>
&lt;li>&lt;em>&lt;strong>ALU型指令（Grd &amp;lt;- Grs ? Grt）&lt;/strong>&lt;/em>——（add、sub、or、and、slt、sltu）&lt;/li>
&lt;li>&lt;em>&lt;strong>ALU型指令（Grd &amp;lt;- Grt ？ shamt）&lt;/strong>&lt;/em>——（sll、srl、sra）&lt;/li>
&lt;li>&lt;em>&lt;strong>跳转型指令（PC &amp;lt;- Grs）&lt;/strong>&lt;/em>——（jr）&lt;/li>
&lt;/ul>
&lt;h4 id="i-type">I-type
&lt;/h4>&lt;ul>
&lt;li>&lt;em>&lt;strong>ALU-Imm型指令（Grt &amp;lt;- Grs ？ imm）&lt;/strong>&lt;/em>——（ori、lui、addi、andi）&lt;/li>
&lt;li>&lt;em>&lt;strong>Memory-Store型指令（Memory[Grs + offset] &amp;lt;- Grt）&lt;/strong>&lt;/em>——（sw、sb、sh）&lt;/li>
&lt;li>&lt;em>&lt;strong>Memory-load型指令（Grt &amp;lt;- Memory[Grs + offset]）&lt;/strong>&lt;/em>——（lw、lb、lbu、lh）&lt;/li>
&lt;li>&lt;em>&lt;strong>Branch型指令（Grs ? Grt，PC &amp;lt;- PC + 4 + offset）&lt;/strong>&lt;/em>——（beq、bgez、bgtz、blez、bltz、bne）&lt;/li>
&lt;/ul>
&lt;h4 id="j-type">J-type
&lt;/h4>&lt;ul>
&lt;li>&lt;em>&lt;strong>J-link型指令&lt;/strong>&lt;/em> —— (jal)&lt;/li>
&lt;li>&lt;em>&lt;strong>无条件Jump型指令&lt;/strong>&lt;/em>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>IF级&lt;/th>
&lt;th>ID级&lt;/th>
&lt;th>EX级&lt;/th>
&lt;th>MA级&lt;/th>
&lt;th>WB级&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>&lt;strong>R-ALU&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs、Grt）&lt;/td>
&lt;td>计算数据&lt;/td>
&lt;td>&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>R-jump&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据并跳转&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-imm&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grt、imm）&lt;/td>
&lt;td>计算数据&lt;/td>
&lt;td>&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-store&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs+offset、Grt）&lt;/td>
&lt;td>计算数据（地址）&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-load&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs+offset、Grt）&lt;/td>
&lt;td>计算数据（地址）&lt;/td>
&lt;td>读取数据&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-branch&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs、Grt）比较数据并跳转&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>J-link&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>扩展数据并跳转&lt;/td>
&lt;td>传递跳转PC&lt;/td>
&lt;td>传递跳转PC&lt;/td>
&lt;td>写入pc+8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="测试步骤">测试步骤
&lt;/h3>&lt;ol>
&lt;li>编写测试代码
&lt;ul>
&lt;li>包括所有阻塞情况&lt;/li>
&lt;li>测试所有转发通路&lt;/li>
&lt;li>可利用课程组提供的分析工具对代码测试强度进行评估&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将ISE输出与Mars输出比对
&lt;ul>
&lt;li>可利用同学开发评测机进行快速比对&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大量随机数据强测
&lt;ul>
&lt;li>代码生成来自&lt;a class="link" href="hyggge.github.io" >学长博客&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">random&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_R&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;addu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;subu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;or&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;nor&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;xor&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sltu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;slt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sllv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;srlv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;srav&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_I&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;andi&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;addiu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;ori&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;xori&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lui&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;slti&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sltiu&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_LS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;lw&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sw&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lhu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lbu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sb&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_shift&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;sll&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;srl&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sra&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_B&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;bne&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;beq&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s2">&amp;#34;bgtz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;blez&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;bltz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;bgez&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_MD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;mult&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;multu&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;div&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;divu&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list_MTMF&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;mfhi&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;mflo&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;mthi&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;mtlo&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#length是生成的指令所用到的寄存器个数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">8&lt;/span> &lt;span class="c1">#为了增大冒险概率，我们将寄存器的范围缩小到0~7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_R&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_R&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_I&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">imm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">32768&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">32768&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">abs_imm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">65536&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">list_I&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;lui&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">,&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_I&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">abs_imm&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_I&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">imm&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_LS&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ins&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list_LS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ins&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ins&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;h&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">($0)&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ins&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_shift&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shamt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_shift&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">shamt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">MD_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_MD&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_MD&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;mult&amp;#34;&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">list_MD&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;mul&amp;#34;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_MD&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_MD&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_MTMF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_MTMF&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">B_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lable&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_B&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rt&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lable&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">10000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">length&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list_B&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">rs&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lable&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">b_begin&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_one:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">B_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_one_then&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_two:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">B_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_two_then&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jal_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jal jal_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_then&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;end_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="se">\n\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">b_end&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_one_then:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MD_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;j b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_two&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">b_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_two_then:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MD_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jal jal_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;addu $1, $ra, $0&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">jal_test_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">_then:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MD_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;addiu $ra,$ra, 8&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">B_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;end_&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MD_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;jr $ra&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;mips_code.asm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2147483648&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2147483648&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;li $&lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;li $8, &lt;/span>&lt;span class="si">{}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">2147483648&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2147483648&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="mi">10000&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">R_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MD_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LS_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MTMF_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">I_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">shift_test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="思考题">思考题
&lt;/h2>&lt;ol>
&lt;li>为什么需要有单独的乘除法部件而不是整合进 ALU？为何需要有独立的 HI、LO 寄存器？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]
因为乘除操作较为复杂，需要多个周期才能完成，需要单独处理&lt;/p>&lt;/blockquote>
&lt;ol start="2">
&lt;li>真实的流水线 CPU 是如何使用实现乘除法的？请查阅相关资料进行简单说明。&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">`define size 8
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">module&lt;/span> &lt;span class="n">mul_booth_signed&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="no">`size&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">mul1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">mul2&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">clk_cnt&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="c1">//运算节拍，相当于状态机了，8位的话每次运算有4个拍
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">output&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="no">`size&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">res&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//由于传值默认就是补码，所以只需要再计算“负补码”即可
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="no">`size&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mh">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">bmul1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">bmul2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">bmul1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">mul1&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">bmul2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="n">mul2&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">;&lt;/span>&lt;span class="c1">//其实乘数2的负补码也没用到。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">//其实可以把状态机的开始和结束状态都写出来，我懒得写了，同学们可以尝试一下啊~
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">parameter&lt;/span> &lt;span class="n">zeroone&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">twothree&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b001&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fourfive&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b010&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sixseven&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b011&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//y(i-1),y(i),y(i+1)三个数的判断寄存器，由于有多种情况，也可以看成状态机（也可以改写成状态机形式，大家自己试试吧）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//部分积
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="no">`size&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">A&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//每个节拍下把相应位置的数据传给temp寄存器
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">always&lt;/span> &lt;span class="p">@&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">zeroone&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">mul2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">twothree&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">mul2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">fourfive&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">mul2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">5&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sixseven&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">mul2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mh">7&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">5&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">temp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">endcase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>&lt;span class="c1">//如果节拍到4就让部分积归0，此时已经完成一次计算了
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">case&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b111&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">begin&lt;/span>&lt;span class="c1">//这些是从高位到低位的判断，别看反了噢
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b001&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b010&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">begin&lt;/span>&lt;span class="c1">//加法操作使用补码即可，倍数利用左移解决
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">({{&lt;/span>&lt;span class="mh">8&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">mul1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="no">`size&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">]}},&lt;/span>&lt;span class="n">mul1&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b011&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">({{&lt;/span>&lt;span class="mh">8&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">mul1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="no">`size&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">]}},&lt;/span>&lt;span class="n">mul1&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">begin&lt;/span>&lt;span class="c1">//减法操作利用“负补码”改成加法操作，倍数利用左移解决
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">({{&lt;/span>&lt;span class="mh">8&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">bmul1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="no">`size&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">]}},&lt;/span>&lt;span class="n">bmul1&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b101&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b110&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">({{&lt;/span>&lt;span class="mh">8&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">bmul1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="no">`size&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">]}},&lt;/span>&lt;span class="n">bmul1&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">endcase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//当节拍到4的时候写入结果寄存器。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">assign&lt;/span> &lt;span class="n">res&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">clk_cnt&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">3&lt;/span>&lt;span class="mb">&amp;#39;b100&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">endmodule&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>请结合自己的实现分析，你是如何处理 Busy 信号带来的周期阻塞的？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]
修改P5中的Stall逻辑，当乘除槽处于start或busy状态，且ID级指令需要使用乘除槽时阻塞&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_md&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">busy&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">mult_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">multu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">div_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">divu_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mfhi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mflo_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mthi_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">mtlo_ID&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">Stall&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Stall_RS_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RS_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RT_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RT_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_md&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>请问采用字节使能信号的方式处理写指令有什么好处？（提示：从清晰性、统一性等角度考虑）&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]
更符合实际CPU电路，在实际电路中这样做更加高效。对于外部存储单元，其只需要读取使能信号然后进行相应存储即可，无需增加其他存储逻辑，使外部设备有较为统一的存储逻辑，便于扩展。&lt;/p>&lt;/blockquote>
&lt;ol start="5">
&lt;li>请思考，我们在按字节读和按字节写时，实际从 DM 获得的数据和向 DM 写入的数据是否是一字节？在什么情况下我们按字节读和按字节写的效率会高于按字读和按字写呢？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]
不是一字节。当存储容量较小时按字节读和写会更加高效, 不需要添加多余的逻辑。&lt;/p>&lt;/blockquote>
&lt;ol start="6">
&lt;li>为了对抗复杂性你采取了哪些抽象和规范手段？这些手段在译码和处理数据冲突的时候有什么样的特点与帮助？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]&lt;/p>
&lt;ol>
&lt;li>在高层模块的排布中就屏蔽了实现的细节，只保留了此模块的端口，以及端口的功能。&lt;/li>
&lt;li>对于同一类型的指令增加多位宽type信号，功能模块根据不同type信号执行对应操作。例如：涉及乘除槽的指令，我设置一个mdOp信号来区分指令，从而减少了流水寄存器的接口数目，从而降低复杂度。&lt;/li>
&lt;li>是否阻塞全部放到冲突处理模块判断，尽可能遵循“高内聚低耦合”的原则。&lt;/li>
&lt;li>乘除槽与ALU分离，但是输出路径一致。不需要更改转发逻辑。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;ol start="7">
&lt;li>在本实验中你遇到了哪些不同指令类型组合产生的冲突？你又是如何解决的？相应的测试样例是什么样的？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]
涉及到HI和LO寄存器的指令与其他读写寄存器指令冲突。通过设置合理的阻塞逻辑解决。&lt;/p>&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">ori $2, $0, 128
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lw $3, 0($0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mult $3, $2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="8">
&lt;li>如果你是手动构造的样例，请说明构造策略，说明你的测试程序如何保证&lt;strong>覆盖&lt;/strong>了所有需要测试的情况；如果你是&lt;strong>完全随机&lt;/strong>生成的测试样例，请思考完全随机的测试程序有何不足之处；如果你在生成测试样例时采用了&lt;strong>特殊的策略&lt;/strong>，比如构造连续数据冒险序列，请你描述一下你使用的策略如何&lt;strong>结合了随机性&lt;/strong>达到强测的效果。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>[!ANS]
我才用的方案是手动构造样例确保新指令的功能正确性，随机生成指令强测确保转发和阻塞的正确性。限制读写寄存器的范围，能够尽可能多的造成数据冒险，再加上大量随机数据，基本可以覆盖全部转发和阻塞情况。&lt;/p>&lt;/blockquote>
&lt;ol start="9">
&lt;li>[P5、P6 选做] 请评估我们给出的覆盖率分析模型的合理性，如有更好的方案，可一并提出。&lt;/li>
&lt;/ol></description></item><item><title>P5_设计文档</title><link>https://lhy0424.top/p/co_p5/</link><pubDate>Thu, 14 Nov 2024 00:11:00 +0000</pubDate><guid>https://lhy0424.top/p/co_p5/</guid><description>&lt;img src="https://lhy0424.top/p/co_p5/P5_cover.jpg" alt="Featured image of post P5_设计文档" />&lt;h1 id="p5_document">P5_document
&lt;/h1>&lt;h2 id="hazardv">Hazard.v
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>input&lt;/th>
&lt;th>explain&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Instr_ID&lt;/td>
&lt;td>ID阶段的指令码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instr_EX&lt;/td>
&lt;td>EX阶段的指令码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instr_MA&lt;/td>
&lt;td>MA阶段的指令码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A3_EX&lt;/td>
&lt;td>EX阶段的寄存器写入地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A3_MA&lt;/td>
&lt;td>MA阶段的寄存器写入地址&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="t_use表格需求者">T_use表格（需求者）
&lt;/h4>&lt;p>指令位于ID级时，还需要多少个周期才必须要使用数据。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>$T_{use}(rs)$&lt;/th>
&lt;th>$T_{use}(rt)$&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>add&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sub&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ori&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lw&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sw&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>beq&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lui&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jal&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jr&lt;/td>
&lt;td>0&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nop&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tuse_rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">ori_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lw_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sw_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lui_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">beq_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">jr_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b11&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tuse_rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_ID&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">sw_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">beq_ID&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b11&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="t_new表格供给者">T_new表格（供给者）
&lt;/h4>&lt;p>T_new: 供给指令位于某个流水级时还需要多少个周期才可以计算出结果并存储到流水寄存器中。&lt;/p>
&lt;p>&lt;em>&lt;strong>早于需求指令进入流水线的供给者还需要多少cycle能够产生需求者需要的寄存器值。&lt;/strong>&lt;/em>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Intsr&lt;/th>
&lt;th>功能部件(结果来源)&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>add&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sub&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ori&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lw&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>2&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sw&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>beq&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lui&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jal&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jr&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nop&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tnew_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">add_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">sub_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">ori_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">lui_EX&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">lw_EX&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">1&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Tnew_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lw_MA&lt;/span>&lt;span class="o">?&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="rs策略矩阵">rs策略矩阵
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>$T_{use} \textbackslash \space T_{new}$&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="rt策略矩阵">rt策略矩阵
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>$T_{use} \textbackslash \space T_{new}$&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>EX&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>MA&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;th>WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;td>ALU&lt;/td>
&lt;td>DM&lt;/td>
&lt;td>PC&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>2&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>F&lt;/td>
&lt;td>&lt;strong>S&lt;/strong>&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;td>F&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="如何理解策略矩阵">如何理解策略矩阵
&lt;/h3>&lt;ul>
&lt;li>策略矩阵针对的是AT法中的Time部分，具体判断阻塞还是转发需要综合Adress部分&lt;/li>
&lt;li>对于ALU型指令，如add，只需要关注 $T_{new}$ 的ALU一列，其表示在当前流水级下，还有多少周期才能计算出结果并存入流水级寄存器。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RS_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rs&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_EX&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RS_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rs&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RS_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RT_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_EX&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="n">Stall_RT_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Tuse_rt&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Tnew_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">RT_ID&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">Stall&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Stall_RS_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RS_MA&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RT_EX&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">Stall_RT_MA&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="forward-in-mipsv">Forward in mips.v
&lt;/h2>&lt;h4 id="数据的供给者">数据的供给者
&lt;/h4>&lt;ul>
&lt;li>EX_MA级流水线寄存器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">forward_EX_MA&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">RegWrite_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">ALU_C_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">RegWrite_MA&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="n">pc_add4_MA&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">32&amp;#39;h404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>MA_WB级流水线寄存器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">assign&lt;/span> &lt;span class="n">grf_WD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">ALU_C_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">dm_data_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">pc_add4_WB&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">forward_MA_WB&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">RegWrite_WB&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">grf_WD:&lt;/span> &lt;span class="mh">32&amp;#39;h405&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="数据需求者">数据需求者
&lt;/h4>&lt;ul>
&lt;li>ID级&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">RD1_ID_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD1_ID&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">RD2_ID_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD2_ID&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>EX级&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//forward--select valid ALU_A and ALU_B
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">ALU_A_EX_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RS_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD1_EX&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Grt_EX_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_MA&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_MA&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_EX_MA:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RD2_EX&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="c1">//将目前正确的Grt值，流水到MA级供sw指令使用，也可供R-type-ALU指令使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Grt_MA_valid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">ALU_B_EX_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ALUSrc_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">Grt_EX_valid:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">ALUSrc_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">ext32_EX&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>MA级&lt;/p>
&lt;p>再一次获取转发数据，确保DM中的Grt值是正确的&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">wire&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">Grt_MA_valid_valid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">RT_MA&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">A3_WB&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">A3_WB&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">forward_MA_WB:&lt;/span> &lt;span class="n">Grt_MA_valid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="流水线寄存器">流水线寄存器
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>PC&lt;/th>
&lt;th>IF_ID&lt;/th>
&lt;th>ID_EX&lt;/th>
&lt;th>EX_MA&lt;/th>
&lt;th>MA_WB&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>en&lt;/td>
&lt;td>nStall&lt;/td>
&lt;td>nStall&lt;/td>
&lt;td>true&lt;/td>
&lt;td>false&lt;/td>
&lt;td>true&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>clr&lt;/td>
&lt;td>null&lt;/td>
&lt;td>false&lt;/td>
&lt;td>Stall&lt;/td>
&lt;td>true&lt;/td>
&lt;td>false&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>RegDst&lt;/th>
&lt;th>ExtOp&lt;/th>
&lt;th>jump&lt;/th>
&lt;th>jumpSrc&lt;/th>
&lt;th>branch&lt;/th>
&lt;th>bOp&lt;/th>
&lt;th>ALUSrc&lt;/th>
&lt;th>ALUOP&lt;/th>
&lt;th>MemWrite&lt;/th>
&lt;th>ls_type&lt;/th>
&lt;th>Mem2Reg&lt;/th>
&lt;th>RegWrite&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>作用阶段&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>ID&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>EX&lt;/td>
&lt;td>MA&lt;/td>
&lt;td>MA&lt;/td>
&lt;td>WB&lt;/td>
&lt;td>WB&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IF_ID&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ID_EX&lt;/td>
&lt;td>1&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EX_MA&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MA_WB&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="stall-explain">Stall Explain
&lt;/h4>&lt;p>ID级指令静止，EX级插入一个nop&lt;/p>
&lt;ul>
&lt;li>PC不写入新数据&lt;/li>
&lt;li>IF_ID寄存器不写入新数据&lt;/li>
&lt;li>ID_EX寄存器清零，即插入nop(0x00000000)&lt;/li>
&lt;/ul>
&lt;h4 id="logic">Logic
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">module&lt;/span> &lt;span class="n">Stage_Reg&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">reset&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">en&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="n">clr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">input&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">output&lt;/span> &lt;span class="kt">reg&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mh">31&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="mh">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="n">data_out&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">initial&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="k">posedge&lt;/span> &lt;span class="n">clk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">reset&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">clr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">en&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">data_out&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="信号解释">信号解释
&lt;/h2>&lt;h4 id="jumpsrc-2-bit">jumpSrc (2-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>jumpSrc&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2&amp;rsquo;b00&lt;/td>
&lt;td>branch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b01&lt;/td>
&lt;td>jump&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b10&lt;/td>
&lt;td>jr&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">next_pc_ID&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">jumpSrc_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">branch_offset_ID:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">jumpSrc_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">jumpExt32_ID:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">jumpSrc_ID&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">RD1_ID_valid:&lt;/span> &lt;span class="mh">32&amp;#39;h404&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="mem2reg-2-bit">Mem2Reg (2-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Mem2Reg&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2‘b00&lt;/td>
&lt;td>ALU&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b01&lt;/td>
&lt;td>lw&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b10&lt;/td>
&lt;td>link&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">grf_WD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">ALU_C_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">dm_data_WB&lt;/span> &lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">Mem2Reg_WB&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="n">pc_add4_WB&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d4&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="mh">32&lt;/span>&lt;span class="mi">&amp;#39;d0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="regdst-2-bit">RegDst (2-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>RegDst&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2&amp;rsquo;b00&lt;/td>
&lt;td>无需写入寄存器的指令&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b01&lt;/td>
&lt;td>R-type，写入rd寄存器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b10&lt;/td>
&lt;td>I-type，写入rt寄存器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&amp;rsquo;b11&lt;/td>
&lt;td>link，写入$ra ($31)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">assign&lt;/span> &lt;span class="n">A3_EX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="c1">//null
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">RD_EX:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="nl">RT_EX:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">RegDst_EX&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b11&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">?&lt;/span> &lt;span class="mh">5&amp;#39;h1f&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">5&lt;/span>&lt;span class="mb">&amp;#39;b00000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="alu-4-bit">ALU (4-bit)
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ALU&lt;/th>
&lt;th>type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>4&amp;rsquo;b0000&lt;/td>
&lt;td>add&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0001&lt;/td>
&lt;td>sub&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0010&lt;/td>
&lt;td>or&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&amp;rsquo;b0011&lt;/td>
&lt;td>lui&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">F&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`ADD&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`SUB&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`OR&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">A&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">B&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="no">`SL16&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">B&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mh">16&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="n">C&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mh">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">endcase&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="测试方案">测试方案
&lt;/h2>&lt;h3 id="指令分类">指令分类
&lt;/h3>&lt;h4 id="r-type">R-type
&lt;/h4>&lt;ul>
&lt;li>&lt;em>&lt;strong>ALU型指令（Grd &amp;lt;- Grs ? Grt）&lt;/strong>&lt;/em>——（add、sub、or）&lt;/li>
&lt;li>&lt;em>&lt;strong>ALU型指令（Grd &amp;lt;- Grt ？ shamt）&lt;/strong>&lt;/em>——（sll、srl、sra）&lt;/li>
&lt;li>&lt;em>&lt;strong>跳转型指令（PC &amp;lt;- Grs）&lt;/strong>&lt;/em>——（jr）&lt;/li>
&lt;/ul>
&lt;h4 id="i-type">I-type
&lt;/h4>&lt;ul>
&lt;li>&lt;em>&lt;strong>ALU-Imm型指令（Grt &amp;lt;- Grs ？ imm）&lt;/strong>&lt;/em>——（ori、lui）&lt;/li>
&lt;li>&lt;em>&lt;strong>Memory-Store型指令（Memory[Grs + offset] &amp;lt;- Grt）&lt;/strong>&lt;/em>——（sw、sb、sh）&lt;/li>
&lt;li>&lt;em>&lt;strong>Memory-load型指令（Grt &amp;lt;- Memory[Grs + offset]）&lt;/strong>&lt;/em>——（lw、lb、lbu、lh）&lt;/li>
&lt;li>&lt;em>&lt;strong>Branch型指令（Grs ? Grt，PC &amp;lt;- PC + 4 + offset）&lt;/strong>&lt;/em>——（beq、bgez、bgtz、blez、bltz、bne）&lt;/li>
&lt;/ul>
&lt;h4 id="j-type">J-type
&lt;/h4>&lt;ul>
&lt;li>&lt;em>&lt;strong>J-link型指令&lt;/strong>&lt;/em> —— (jal)&lt;/li>
&lt;li>&lt;em>&lt;strong>无条件Jump型指令&lt;/strong>&lt;/em>&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>IF级&lt;/th>
&lt;th>ID级&lt;/th>
&lt;th>EX级&lt;/th>
&lt;th>MA级&lt;/th>
&lt;th>WB级&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>&lt;strong>R-ALU&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs、Grt）&lt;/td>
&lt;td>计算数据&lt;/td>
&lt;td>&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>R-jump&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据并跳转&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-imm&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grt、imm）&lt;/td>
&lt;td>计算数据&lt;/td>
&lt;td>&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-store&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs+offset、Grt）&lt;/td>
&lt;td>计算数据（地址）&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-load&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs+offset、Grt）&lt;/td>
&lt;td>计算数据（地址）&lt;/td>
&lt;td>读取数据&lt;/td>
&lt;td>写入数据&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>I-branch&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>读取数据（Grs、Grt）比较数据并跳转&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>&lt;strong>J-link&lt;/strong>&lt;/em>&lt;/td>
&lt;td>&lt;/td>
&lt;td>扩展数据并跳转&lt;/td>
&lt;td>传递跳转PC&lt;/td>
&lt;td>传递跳转PC&lt;/td>
&lt;td>写入pc+8&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="测试步骤">测试步骤
&lt;/h3>&lt;ol>
&lt;li>编写测试代码
&lt;ul>
&lt;li>包括所有阻塞情况&lt;/li>
&lt;li>测试所有转发通路&lt;/li>
&lt;li>可利用课程组提供的分析工具对代码测试强度进行评估&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将ISE输出与Mars输出比对
&lt;ul>
&lt;li>可利用同学开发评测机进行快速比对&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>大量随机数据强测
&lt;ul>
&lt;li>代码生成思路参照&lt;a class="link" href="http://cscore.buaa.edu.cn/#/discussion_area/1482/1793/posts" target="_blank" rel="noopener"
>P4数据生成思路&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">random&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SUPPORTED_INSTRUCTIONS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;add&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sub&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;ori&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;lui&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># arithmetic &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;lw&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sw&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># storage &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;beq&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;bne&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># B-type &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;j&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;jal&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># jump &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;nop&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># command jr will be generated according to the use of command jal &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">REGISTERS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;$&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">26&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">weighted_choice&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choices&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">REGISTERS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">weights&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">REGISTER_WEIGHTS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">generate_random_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">half&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">instruction&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">choice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SUPPORTED_INSTRUCTIONS&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">instruction&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;add&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;sub&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;and&amp;#34;&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># add $t0, $t1, $t2 : op rd, rs, rt &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">weighted_choice&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">weighted_choice&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rt&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">weighted_choice&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">instruction&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">rd&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">rs&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">rt&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># other instructions... &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># parser... &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">high_weight_registers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sample&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">REGISTERS&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># print(f&amp;#34;High weight registers: {high_weight_registers}&amp;#34;) &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">global&lt;/span> &lt;span class="n">REGISTER_WEIGHTS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">REGISTER_WEIGHTS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">reg&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">high_weight_registers&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">reg&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">REGISTERS&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mips_code&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_mips_code&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">num_instructions&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="思考题">思考题
&lt;/h2>&lt;ol>
&lt;li>我们使用提前分支判断的方法尽早产生结果来减少因不确定而带来的开销，但实际上这种方法并非总能提高效率，请从流水线冒险的角度思考其原因并给出一个指令序列的例子。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>提前分支判断会带增加阻塞的情况，从而降低效率&lt;/p>
&lt;p>lw $1, 0($0)
ori $2, $0, 514
beq $1, $2, label&lt;/p>
&lt;p>对于上述代码，需要阻塞两次&lt;/p>&lt;/blockquote>
&lt;ol start="2">
&lt;li>因为延迟槽的存在，对于 jal 等需要将指令地址写入寄存器的指令，要写回 PC + 8，请思考为什么这样设计？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>因为，jr返回时应该执行延迟槽后面的指令&lt;/p>&lt;/blockquote>
&lt;ol start="3">
&lt;li>我们要求所有转发数据都来源于流水寄存器而不能是功能部件（如 DM、ALU），请思考为什么？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>减少组合逻辑与时序逻辑的组合，减少毛刺，使流水线分级更清晰&lt;/p>&lt;/blockquote>
&lt;ol start="4">
&lt;li>我们为什么要使用 GPR 内部转发？该如何实现？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>解决结构冒险。由于流水线中grf的读写在不同级，所以当同时读和写grf时会出现结构冒险&lt;/p>
&lt;p>assign RD1 = (A3!=0 &amp;amp; A1==A3 &amp;amp; WE) ? WD : grf[A1];&lt;br>
assign RD2 = (A3!=0 &amp;amp; A2==A3 &amp;amp; WE) ? WD : grf[A2];&lt;/p>&lt;/blockquote>
&lt;ol start="5">
&lt;li>我们转发时数据的需求者和供给者可能来源于哪些位置？共有哪些转发数据通路？&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>见上文&lt;/p>&lt;/blockquote>
&lt;ol start="6">
&lt;li>在课上测试时，我们需要你现场实现新的指令，对于这些新的指令，你可能需要在原有的数据通路上做哪些扩展或修改？提示：你可以对指令进行分类，思考每一类指令可能修改或扩展哪些位置。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;ol>
&lt;li>添加控制信号&lt;/li>
&lt;li>可能需要修改ALU&lt;/li>
&lt;li>修改顶层模块，可能需要添加wire&lt;/li>
&lt;li>可能需要修改阻塞逻辑&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;ol start="7">
&lt;li>简要描述你的译码器架构，并思考该架构的优势以及不足。、&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>集中式译码。只需一次译码，然后流水各个信号。
优势：资源占用小，代码量小
不足：流水信号比较麻烦，添加控制信号时比较麻烦&lt;/p>&lt;/blockquote>
&lt;ol start="8">
&lt;li>[P5 选做] 请详细描述你的测试方案及测试数据构造策略。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>见测试方案&lt;/p>&lt;/blockquote>
&lt;ol start="9">
&lt;li>[P5、P6 选做] 请评估我们给出的覆盖率分析模型的合理性，如有更好的方案，可一并提出。&lt;/li>
&lt;/ol></description></item><item><title>P4_设计文档</title><link>https://lhy0424.top/p/co_p4/</link><pubDate>Sat, 02 Nov 2024 18:06:00 +0000</pubDate><guid>https://lhy0424.top/p/co_p4/</guid><description>&lt;img src="https://lhy0424.top/p/co_p4/P4_cover.jpg" alt="Featured image of post P4_设计文档" />&lt;h1 id="p4_l0_document">P4_L0_document
&lt;/h1>&lt;h2 id="信号解释">信号解释
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>RegDst（寄存器写入地址）&lt;/strong>
&lt;ul>
&lt;li>2&amp;rsquo;b00: RT&lt;/li>
&lt;li>2&amp;rsquo;b01: RD&lt;/li>
&lt;li>2&amp;rsquo;b11: 5&amp;rsquo;h1f&lt;/li>
&lt;li>default: 5&amp;rsquo;b0&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Mem2Reg（寄存器写入数据）&lt;/strong>
&lt;ul>
&lt;li>2&amp;rsquo;b00: alu_c&lt;/li>
&lt;li>2&amp;rsquo;b01: dm_data&lt;/li>
&lt;li>2&amp;rsquo;b10: pc + 32&amp;rsquo;d4&lt;/li>
&lt;li>default: 32&amp;rsquo;b0&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>ALUSrc（alu的b操作数选择）&lt;/strong>
&lt;ul>
&lt;li>1&amp;rsquo;b0: grf_RD2&lt;/li>
&lt;li>1&amp;rsquo;b1: ext_ext32&lt;/li>
&lt;li>default: 32&amp;rsquo;b0&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>ALU_F（ALU计算方式）&lt;/strong>
&lt;ul>
&lt;li>4&amp;rsquo;b0000: add&lt;/li>
&lt;li>4&amp;rsquo;b0001: sub&lt;/li>
&lt;li>4&amp;rsquo;b0010: or&lt;/li>
&lt;li>4&amp;rsquo;b0011: SL16 (lui)&lt;/li>
&lt;li>4&amp;rsquo;b0100: SLL (补0逻辑左移)&lt;/li>
&lt;li>4’b0101: SRL (补0逻辑右移)&lt;/li>
&lt;li>4‘b0110: SRA (算数右移)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>ExtOp (扩展操作)&lt;/strong>
&lt;ul>
&lt;li>2’b01: 0扩展&lt;/li>
&lt;li>2‘b10: 算术扩展（符号位）&lt;/li>
&lt;li>2’b11: 1扩展&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="设计草稿">设计草稿
&lt;/h2>&lt;p>本次CPU支持&lt;code>add, sub, or, ori, lw, sw, lb, lbu, lh, sb, sh, beq, lui, nop，begz，bgtz，blez，bltz，bne, j, jal, jr&lt;/code>共23条指令。&lt;/p>
&lt;h3 id="mipsv-top">mips.v (Top)
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/logisim_CPU.png"
width="2204"
height="1156"
srcset="https://lhy0424.top/p/co_p4/logisim_CPU_hu_b6e1a89de386ea01.png 480w, https://lhy0424.top/p/co_p4/logisim_CPU_hu_e38151aba6a13c1f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/mips.svg"
loading="lazy"
alt="mips"
>&lt;/p>
&lt;h4 id="ports">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>clk&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reset&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="signals">Signals
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>pc&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>if_jump&lt;/td>
&lt;td>wire&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>if_branch&lt;/td>
&lt;td>wire&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>instr_out&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ifu_offset&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OPCODE&lt;/td>
&lt;td>wire [5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FUNCT&lt;/td>
&lt;td>wire [5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RS&lt;/td>
&lt;td>wire [4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RT&lt;/td>
&lt;td>wire [4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RD&lt;/td>
&lt;td>wire [4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SHAMT&lt;/td>
&lt;td>wire [4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>IMM&lt;/td>
&lt;td>wire [15:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>INDEX&lt;/td>
&lt;td>wire [25:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bOp_out&lt;/td>
&lt;td>wire [5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RegDst_out&lt;/td>
&lt;td>wire [1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUSrc_out&lt;/td>
&lt;td>wire&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mem2Reg_out&lt;/td>
&lt;td>wire [1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RegWrite_out&lt;/td>
&lt;td>wire&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MemWrite_out&lt;/td>
&lt;td>wire&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch_out&lt;/td>
&lt;td>wire&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ExtOp_out&lt;/td>
&lt;td>wire [1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUOP_out&lt;/td>
&lt;td>wire [1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jumpSrc_out&lt;/td>
&lt;td>wire [1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dm_data&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ext_ext32&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grf_RD1&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grf_RD2&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>alu_B&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>alu_C&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grf_WA&lt;/td>
&lt;td>wire [4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>grf_WD&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jumpext_ext32&lt;/td>
&lt;td>wire [31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="instantiations">Instantiations
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>ifu: IFU&lt;/p>
&lt;/li>
&lt;li>
&lt;p>controller: Controller&lt;/p>
&lt;/li>
&lt;li>
&lt;p>grf: GRF&lt;/p>
&lt;/li>
&lt;li>
&lt;p>alu: ALU&lt;/p>
&lt;/li>
&lt;li>
&lt;p>dm: DM&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ext: EXT&lt;/p>
&lt;/li>
&lt;li>
&lt;p>jumpext: jumpEXT&lt;/p>
&lt;/li>
&lt;li>
&lt;p>bcheck: bCheck&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="ifuv">IFU.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/IFU.png"
width="969"
height="630"
srcset="https://lhy0424.top/p/co_p4/IFU_hu_260e60f83d2f88f4.png 480w, https://lhy0424.top/p/co_p4/IFU_hu_a676316910adf921.png 1024w"
loading="lazy"
alt="IFU"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="369px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/IFU.svg"
loading="lazy"
alt="IFU"
>&lt;/p>
&lt;h4 id="ports-1">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>clk&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reset&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jump&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>offset&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PC&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instr&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="controllerv">Controller.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/Controller.png"
width="2203"
height="1236"
srcset="https://lhy0424.top/p/co_p4/Controller_hu_feed0c1cd3ba30b1.png 480w, https://lhy0424.top/p/co_p4/Controller_hu_c24e85860a631164.png 1024w"
loading="lazy"
alt="Controller"
class="gallery-image"
data-flex-grow="178"
data-flex-basis="427px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/Controller.svg"
loading="lazy"
alt="Controller"
>&lt;/p>
&lt;h4 id="ports-2">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>OpCode&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Funct&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>rt&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jump&lt;/td>
&lt;td>output&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jumpSrc&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bOp&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RegDst&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUSrc&lt;/td>
&lt;td>output&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mem2Reg&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RegWrite&lt;/td>
&lt;td>output&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MemWrite&lt;/td>
&lt;td>output&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch&lt;/td>
&lt;td>output&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ExtOp&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUOP&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="信号映射表">信号映射表
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>OpCode&lt;/th>
&lt;th>Funct&lt;/th>
&lt;th>RT&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>add&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>100000&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sub&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>100010&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>or&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>100101&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SLL&lt;/strong>&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SRL&lt;/strong>&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>000010&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SRA&lt;/strong>&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>000011&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ori&lt;/td>
&lt;td>001101&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lw&lt;/td>
&lt;td>100011&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>sw&lt;/td>
&lt;td>101011&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>lb&lt;/strong>&lt;/td>
&lt;td>100000&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>lbu&lt;/strong>&lt;/td>
&lt;td>100100&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>lh&lt;/strong>&lt;/td>
&lt;td>100001&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>sb&lt;/strong>&lt;/td>
&lt;td>101000&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>sh&lt;/strong>&lt;/td>
&lt;td>101001&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>beq&lt;/td>
&lt;td>000100&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>lui&lt;/td>
&lt;td>001111&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bgez&lt;/td>
&lt;td>000001&lt;/td>
&lt;td>&lt;/td>
&lt;td>00001&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bgtz&lt;/td>
&lt;td>000111&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>blez&lt;/td>
&lt;td>000110&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bltz&lt;/td>
&lt;td>000001&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bne&lt;/td>
&lt;td>000101&lt;/td>
&lt;td>&lt;/td>
&lt;td>00000&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jump&lt;/td>
&lt;td>000010&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jal&lt;/td>
&lt;td>000011&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jr&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>001000&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>add&lt;/th>
&lt;th>sub&lt;/th>
&lt;th>ori&lt;/th>
&lt;th>SLL&lt;/th>
&lt;th>SRL&lt;/th>
&lt;th>SRA&lt;/th>
&lt;th>or&lt;/th>
&lt;th>lw&lt;/th>
&lt;th>sw&lt;/th>
&lt;th>lb&lt;/th>
&lt;th>lbu&lt;/th>
&lt;th>lh&lt;/th>
&lt;th>sb&lt;/th>
&lt;th>sh&lt;/th>
&lt;th>branch&lt;/th>
&lt;th>lui&lt;/th>
&lt;th>jump&lt;/th>
&lt;th>jal&lt;/th>
&lt;th>jr&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>RegDst&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>11(const31)&lt;/td>
&lt;td>00&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUSrc&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mem2Reg&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>10(PC + 4)&lt;/td>
&lt;td>00&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RegWrite&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MemWrite&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ExtOp&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01(zero)&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>00&lt;/td>
&lt;td>]10(signed)&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>10&lt;/td>
&lt;td>10&lt;/td>
&lt;td>10&lt;/td>
&lt;td>10&lt;/td>
&lt;td>10&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>00&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUOP&amp;lt;3,0&amp;gt;&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0001&lt;/td>
&lt;td>0010&lt;/td>
&lt;td>0100&lt;/td>
&lt;td>0101&lt;/td>
&lt;td>0110&lt;/td>
&lt;td>0010&lt;/td>
&lt;td>0000(+)&lt;/td>
&lt;td>0000(+)&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000(+)&lt;/td>
&lt;td>0011&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000&lt;/td>
&lt;td>0000&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jumpSrc&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>10&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jump&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ls_type&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>10&lt;/td>
&lt;td>11&lt;/td>
&lt;td>01&lt;/td>
&lt;td>11&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="grfv">GRF.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/GRF.png"
width="2217"
height="941"
srcset="https://lhy0424.top/p/co_p4/GRF_hu_1cbaf3b4dd8768d9.png 480w, https://lhy0424.top/p/co_p4/GRF_hu_466543eef7e3b78b.png 1024w"
loading="lazy"
alt="GRF"
class="gallery-image"
data-flex-grow="235"
data-flex-basis="565px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/GRF.svg"
loading="lazy"
alt="GRF"
>&lt;/p>
&lt;h4 id="ports-3">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A1&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A2&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>A3&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WD&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>clk&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reset&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WE&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pc&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RD1&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RD2&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="dmv">DM.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/DM.svg"
loading="lazy"
alt="DM"
>&lt;/p>
&lt;h4 id="ports-4">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>D_input&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>str&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>clk&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pc&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>D_output&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="aluv">ALU.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/ALU.svg"
loading="lazy"
alt="ALU"
>&lt;/p>
&lt;h4 id="ports-5">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>A&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>B&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>shamt&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[4:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>F&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[3:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>C&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="bcheckv">bCheck.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/bCheck.png"
width="1652"
height="745"
srcset="https://lhy0424.top/p/co_p4/bCheck_hu_713d380c5af825c6.png 480w, https://lhy0424.top/p/co_p4/bCheck_hu_7ef70c1026195de.png 1024w"
loading="lazy"
alt="bCheck"
class="gallery-image"
data-flex-grow="221"
data-flex-basis="532px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/bCheck.svg"
loading="lazy"
alt="bCheck"
>&lt;/p>
&lt;h4 id="ports-6">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Grs&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Grt&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>bOp&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[5:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch&lt;/td>
&lt;td>input&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check&lt;/td>
&lt;td>output&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="extv">EXT.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/EXT.png"
width="798"
height="334"
srcset="https://lhy0424.top/p/co_p4/EXT_hu_12e1b4a627f3f351.png 480w, https://lhy0424.top/p/co_p4/EXT_hu_27593ea1fdf31eba.png 1024w"
loading="lazy"
alt="EXT"
class="gallery-image"
data-flex-grow="238"
data-flex-basis="573px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/EXT.svg"
loading="lazy"
alt="EXT"
>&lt;/p>
&lt;h4 id="ports-7">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>imm16&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[15:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ExtOp&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[1:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ext32&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="jumpextv">jumpEXT.v
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/jumpEXT.png"
width="912"
height="398"
srcset="https://lhy0424.top/p/co_p4/jumpEXT_hu_4625e878bc2a25ae.png 480w, https://lhy0424.top/p/co_p4/jumpEXT_hu_b20552e79e0fef33.png 1024w"
loading="lazy"
alt="jumpEXT"
class="gallery-image"
data-flex-grow="229"
data-flex-basis="549px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p4/jumpEXT.svg"
loading="lazy"
alt="jumpEXT"
>&lt;/p>
&lt;h4 id="ports-8">Ports
&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Port name&lt;/th>
&lt;th>Direction&lt;/th>
&lt;th>Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>index&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[25:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pc&lt;/td>
&lt;td>input&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ext32&lt;/td>
&lt;td>output&lt;/td>
&lt;td>[31:0]&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="测试方案">测试方案
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>&lt;em>&lt;strong>利用魔改Mars：&lt;/strong>&lt;/em> 直接比较ISE得输出和Mars的输出&lt;/p>
&lt;/li>
&lt;li>
&lt;p>***课上环境：***在Isim中将32个Reg和内存添加到波形图中，对比最终结果&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>简单的测试代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#GRF REG_WRITE TEST&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$1&lt;/span>, &lt;span class="m">125&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$2&lt;/span>, &lt;span class="m">300&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$3&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$4&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1024&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">56&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$6&lt;/span>, &lt;span class="nv">$0&lt;/span>,125
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$7&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">525&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$8&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">10086&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$9&lt;/span>, &lt;span class="nv">$0&lt;/span>,14514
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$10&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">625&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$11&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">168&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$12&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">576&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$13&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$14&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">6666&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$15&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">424&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$16&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">2024&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$16&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1101&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$17&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">2203&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$18&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">2306&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$19&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">999&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$20&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">2005&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$21&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$22&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">176&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$23&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">616&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$24&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1213&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$25&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1314&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$26&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">888&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$27&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">545&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$28&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#LUI TEST&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lui &lt;span class="nv">$1&lt;/span>, &lt;span class="m">424&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lui &lt;span class="nv">$12&lt;/span>, &lt;span class="m">500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lui &lt;span class="nv">$24&lt;/span>, &lt;span class="m">233&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#ADD or SUB TEST&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">add &lt;span class="nv">$21&lt;/span>, &lt;span class="nv">$27&lt;/span>, &lt;span class="nv">$28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sub &lt;span class="nv">$21&lt;/span>, &lt;span class="nv">$27&lt;/span>, &lt;span class="nv">$28&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#MEMORY TEST&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sw &lt;span class="nv">$21&lt;/span>, 0&lt;span class="o">(&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lw &lt;span class="nv">$28&lt;/span>, 0&lt;span class="o">(&lt;/span>&lt;span class="nv">$0&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#BRANCH TEST&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">beq &lt;span class="nv">$24&lt;/span>, &lt;span class="nv">$25&lt;/span>, beq_label_false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$24&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1314&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">beq &lt;span class="nv">$24&lt;/span>, &lt;span class="nv">$25&lt;/span>, beq_label_true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">beq_label_false:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">666&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">beq_label_true:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">667&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#JUMP TEST&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jal &lt;span class="k">function&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">9&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">j jump_label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">function&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1111&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jr &lt;span class="nv">$ra&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jump_label:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">nop
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bgez &lt;span class="nv">$0&lt;/span>, bgez_label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$1&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">11451&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bgez_label:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$1&lt;/span>, &lt;span class="nv">$0&lt;/span>, -10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bltz &lt;span class="nv">$1&lt;/span>, bltz_label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">1314&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$6&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">156&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bltz_label:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bne &lt;span class="nv">$0&lt;/span>, &lt;span class="nv">$1&lt;/span>, bne_label
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$5&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">131&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ori &lt;span class="nv">$6&lt;/span>, &lt;span class="nv">$0&lt;/span>, &lt;span class="m">15&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bne_label:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lui &lt;span class="nv">$12&lt;/span>, &lt;span class="m">2333&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">//STDOUT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003000: $ &lt;span class="m">1&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000007d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003004: $ &lt;span class="m">2&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000012c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003008: $ &lt;span class="m">3&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000005&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000300c: $ &lt;span class="m">4&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000400&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003010: $ &lt;span class="m">5&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000038&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003014: $ &lt;span class="m">6&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000007d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003018: $ &lt;span class="m">7&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000020d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000301c: $ &lt;span class="m">8&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00002766&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003020: $ &lt;span class="m">9&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000038b2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003024: &lt;span class="nv">$10&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000271&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003028: &lt;span class="nv">$11&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000000a8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000302c: &lt;span class="nv">$12&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000240&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003030: &lt;span class="nv">$13&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000800&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003034: &lt;span class="nv">$14&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 00001a0a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003038: &lt;span class="nv">$15&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000001a8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000303c: &lt;span class="nv">$16&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000007e8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003040: &lt;span class="nv">$16&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000044d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003044: &lt;span class="nv">$17&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000089b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003048: &lt;span class="nv">$18&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000902&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000304c: &lt;span class="nv">$19&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000003e7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003050: &lt;span class="nv">$20&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000007d5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003054: &lt;span class="nv">$21&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003058: &lt;span class="nv">$22&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000000b0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000305c: &lt;span class="nv">$23&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000268&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003060: &lt;span class="nv">$24&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000004bd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003064: &lt;span class="nv">$25&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000522&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003068: &lt;span class="nv">$26&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000378&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000306c: &lt;span class="nv">$27&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000221&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003070: &lt;span class="nv">$28&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000001c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003074: $ &lt;span class="m">1&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 01a80000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003078: &lt;span class="nv">$12&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 01f40000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000307c: &lt;span class="nv">$24&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 00e90000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003080: &lt;span class="nv">$21&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000023d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003084: &lt;span class="nv">$21&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000205&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003088: *00000000 &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000205&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@0000308c: &lt;span class="nv">$28&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000205&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@00003094: &lt;span class="nv">$24&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000522&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030a0: $ &lt;span class="m">5&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 0000029b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030a4: &lt;span class="nv">$31&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 000030a8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030b8: $ &lt;span class="m">5&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000457&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030a8: $ &lt;span class="m">5&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030ac: $ &lt;span class="m">5&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000001&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030b0: $ &lt;span class="m">5&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> &lt;span class="m">00000009&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030d4: $ &lt;span class="m">1&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> ffff0000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030d8: $ &lt;span class="m">1&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> fffffff6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030dc: $ &lt;span class="m">1&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> fffffff6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">@000030f8: &lt;span class="nv">$12&lt;/span> &amp;lt;&lt;span class="o">=&lt;/span> 091d0000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="思考题">思考题
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>阅读下面给出的 DM 的输入示例中（示例 DM 容量为 4KB，即 32bit × 1024字），根据你的理解回答，这个 addr 信号又是从哪里来的？地址信号 addr 位数为什么是 [11:2] 而不是 [9:0] ？&lt;/p>
&lt;blockquote>
&lt;p>addr信号来源于ALU的结果输出端。&lt;/p>
&lt;p>输入信号为按字节索引的地址，而DM的存储方式为按字索引，取&lt;em>&lt;strong>addr[11:2]&lt;em>&lt;strong>即等于&lt;/strong>&lt;/em>addr[9:0] &amp;laquo; 2&lt;/strong>&lt;/em>&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>思考上述两种控制器设计的译码方式，给出代码示例，并尝试对比各方式的优劣。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl"> &lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b000000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">Funct&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b100000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">//add
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">RegDst&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ALUSrc&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Mem2Reg&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">RegWrite&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MemWrite&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">branch&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ExtOp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ALUOP&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">jumpSrc&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">jump&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">1&lt;/span>&lt;span class="mb">&amp;#39;b0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-verilog" data-lang="verilog">&lt;span class="line">&lt;span class="cl">&lt;span class="k">always&lt;/span> &lt;span class="p">@(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b100011&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b101011&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b000100&lt;/span> &lt;span class="o">||&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b001111&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ExtOp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b10&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">OpCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mh">6&lt;/span>&lt;span class="mb">&amp;#39;b001101&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ExtOp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b01&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span> &lt;span class="k">begin&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ExtOp&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mh">2&lt;/span>&lt;span class="mb">&amp;#39;b00&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>&lt;strong>记录指令对应的控制信号如何取值&lt;/strong>：方便添加新指令。&lt;/li>
&lt;li>&lt;strong>记录控制信号每种取值所对应的指令&lt;/strong>：方便添加控制信号。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>在相应的部件中，复位信号的设计都是&lt;strong>同步复位&lt;/strong>，这与 P3 中的设计要求不同。请对比&lt;strong>同步复位&lt;/strong>与&lt;strong>异步复位&lt;/strong>这两种方式的 reset 信号与 clk 信号优先级的关系。&lt;/p>
&lt;blockquote>
&lt;p>异步复位reset信号优先，同步复位clk信号优先。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>C 语言是一种弱类型程序设计语言。C 语言中不对计算结果溢出进行处理，这意味着 C 语言要求程序员必须很清楚计算结果是否会导致溢出。因此，如果仅仅支持 C 语言，MIPS 指令的所有计算指令均可以忽略溢出。 请说明为什么在忽略溢出的前提下，addi 与 addiu 是等价的，add 与 addu 是等价的。提示：阅读《MIPS32® Architecture For Programmers Volume II: The MIPS32® Instruction Set》中相关指令的 Operation 部分。&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>The term “unsigned” in the instruction name is a misnomer; this operation is 32-bit modulo arithmetic that does not trap on overflow. This instruction is appropriate for unsigned arithmetic, such as address arithmetic, or integer arithmetic environments that ignore overflow, such as C language arithmetic.&lt;/em>&lt;/p>
&lt;p>addu和add的区别、addi和addiu的区别均仅在与是否有溢出判断，故忽略溢出时效果是一样的。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ol></description></item><item><title>如何优雅地编写Verilog</title><link>https://lhy0424.top/p/verilog_edit/</link><pubDate>Sat, 02 Nov 2024 18:06:00 +0000</pubDate><guid>https://lhy0424.top/p/verilog_edit/</guid><description>&lt;img src="https://lhy0424.top/p/verilog_edit/vscode_teros_cover.png" alt="Featured image of post 如何优雅地编写Verilog" />&lt;h1 id="如何优雅地编写verilog">如何优雅地编写Verilog
&lt;/h1>&lt;h2 id="一替换ise默认编辑器">一、替换ISE默认编辑器
&lt;/h2>&lt;p>ISE仿佛知道自己的默认编辑器很难用，所以允许用户自定义编辑器（&lt;/p>
&lt;p>打开ISE，上方工具栏&lt;strong>Edit -&amp;gt; Preferences&lt;/strong>，在左侧Category选择&lt;strong>ISE General -&amp;gt; Editors&lt;/strong>，第一栏下拉选项选择&lt;strong>Custom&lt;/strong>，在后面一栏输入编辑器的路径，我们以sublime为例，格式如下（大括号内为自己的路径）&lt;/p>
&lt;blockquote>
&lt;p>{D:\sublime\Sublime Text\sublime_text.exe} +$2 $1&lt;/p>&lt;/blockquote>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/ise_editor.png"
width="916"
height="744"
srcset="https://lhy0424.top/p/verilog_edit/ise_editor_hu_236f077b786c971.png 480w, https://lhy0424.top/p/verilog_edit/ise_editor_hu_578e688e1024d27d.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="295px"
>&lt;/p>
&lt;p>设置完成后我们在ISE中点击自己verilog文件就可以自动跳转至指定编辑器了&lt;/p>
&lt;p>sublime默认并不支持verilog文件，所以我们还需要安装相关插件&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/sublime_plugin.png"
width="725"
height="213"
srcset="https://lhy0424.top/p/verilog_edit/sublime_plugin_hu_2402696251ce1887.png 480w, https://lhy0424.top/p/verilog_edit/sublime_plugin_hu_bc8e18b95123f170.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="340"
data-flex-basis="816px"
>&lt;/p>
&lt;p>这些插件可以实现基本的语法补全、代码高亮等功能，效果如下&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/sublime_display.png"
width="626"
height="723"
srcset="https://lhy0424.top/p/verilog_edit/sublime_display_hu_2dc2037cb739c1c2.png 480w, https://lhy0424.top/p/verilog_edit/sublime_display_hu_18ad0f30f47cc25c.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="86"
data-flex-basis="207px"
>&lt;/p>
&lt;p>在编辑器编辑完保存后，我们可以返回ISE进行后续的仿真、查看波形图等功能。&lt;/p>
&lt;h2 id="二强大的vscode插件teroshdl">二、强大的VScode插件——TerosHDL
&lt;/h2>&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/vscode_teros.png"
width="1265"
height="253"
srcset="https://lhy0424.top/p/verilog_edit/vscode_teros_hu_6c685e9aa008245e.png 480w, https://lhy0424.top/p/verilog_edit/vscode_teros_hu_f555769537904ca8.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="500"
data-flex-basis="1200px"
>&lt;/p>
&lt;p>具体配置过程见官网：&lt;a class="link" href="https://terostechnology.github.io/terosHDLdoc/docs/intro/" target="_blank" rel="noopener"
>TerosHDL&lt;/a>&lt;/p>
&lt;p>除了基础的语法补全功能，该插件提供如下功能：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>显示项目中各个模块或文件之间的层次结构和依赖关系&lt;/p>
&lt;/li>
&lt;li>
&lt;p>实时错误检查&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自动模板用于testbench等&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自动生成文档&lt;/p>
&lt;/li>
&lt;li>
&lt;p>生成状态机的状态转移图&lt;/p>
&lt;/li>
&lt;li>
&lt;p>代码格式化&lt;/p>
&lt;/li>
&lt;li>
&lt;p>生成原理图&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以及许多编辑工具：语法高亮、悬停提示、名称重构、名称重构、代码折叠、求值字面量&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/teros_function1.png"
width="1772"
height="1095"
srcset="https://lhy0424.top/p/verilog_edit/teros_function1_hu_13901c8d71870c0e.png 480w, https://lhy0424.top/p/verilog_edit/teros_function1_hu_6958632a4e189231.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="161"
data-flex-basis="388px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/teros_function2.png"
width="1780"
height="1097"
srcset="https://lhy0424.top/p/verilog_edit/teros_function2_hu_7c90be6c541693eb.png 480w, https://lhy0424.top/p/verilog_edit/teros_function2_hu_a445204b2bc36fa.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="162"
data-flex-basis="389px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/teros_function3.png"
width="1764"
height="1222"
srcset="https://lhy0424.top/p/verilog_edit/teros_function3_hu_697bc61da4dcad8.png 480w, https://lhy0424.top/p/verilog_edit/teros_function3_hu_1536f6060690dc51.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="144"
data-flex-basis="346px"
>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>此外，这款插件还可以集成外部工具，如使用iverilog编译、GTKWave查看波形，而且好像还支持ISE的命令行工具？期待大家进一步探索。&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/verilog_edit/teros_settings.png"
width="350"
height="706"
srcset="https://lhy0424.top/p/verilog_edit/teros_settings_hu_d38bb324dddab1c6.png 480w, https://lhy0424.top/p/verilog_edit/teros_settings_hu_73aae31fcb18e01a.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="49"
data-flex-basis="118px"
>&lt;/p>
&lt;h2 id="三vscode--ise命令行工具">三、VScode + ISE命令行工具
&lt;/h2>&lt;p>TerosHDL的配置比较麻烦，如果想简单一点，可以使用VScode + ISE命令行工具&lt;/p>
&lt;p>详情请见大佬的帖子,&lt;a class="link" href="http://cscore.buaa.edu.cn/#/discussion_area/1461/1777/posts" target="_blank" rel="noopener"
>通过命令行，更优雅地利用ISE进行开发&lt;/a>&lt;/p>
&lt;p>在VScode中编写verilog文件后，直接在VScode中新建一个.bat文件，复制以下内容，然后在文件资源管理器中双击打开即可实现一键&lt;strong>编译、仿真、查看波形&lt;/strong>，基本可以脱离ISE。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bat" data-lang="bat">&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">echo&lt;/span> off
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">REM 编译&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">%XILINX%&lt;/span>&lt;span class="s2">\bin\nt64\fuse.exe&amp;#34;&lt;/span> -nodebug -prj mips.prj -o mips.exe mips_tb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">IF&lt;/span> &lt;span class="k">ERRORLEVEL&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">echo&lt;/span> 编译失败，请检查错误。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pause&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">REM 运行仿真&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mips.exe -nolog -tclbatch mips.tcl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">IF&lt;/span> &lt;span class="k">ERRORLEVEL&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">echo&lt;/span> 仿真失败，请检查错误。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pause&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">REM 查看波形&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">%XILINX%&lt;/span>&lt;span class="s2">\bin\nt64\isimgui.exe&amp;#34;&lt;/span> -view isim.wdb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">IF&lt;/span> &lt;span class="k">ERRORLEVEL&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">echo&lt;/span> 查看波形失败，请检查错误。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">pause&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">pause&lt;/span> REM 暂停，以便查看输出
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>P3_设计文档</title><link>https://lhy0424.top/p/co_p3/</link><pubDate>Sun, 27 Oct 2024 17:53:00 +0000</pubDate><guid>https://lhy0424.top/p/co_p3/</guid><description>&lt;img src="https://lhy0424.top/p/co_p3/P3_cover.jpg" alt="Featured image of post P3_设计文档" />&lt;h1 id="p3_document">P3_document
&lt;/h1>&lt;h2 id="设计草稿">设计草稿
&lt;/h2>&lt;p>本次P3搭建的CPU支持&lt;code>add, sub, ori, lw, sw, beq, lui, nop，begz，bgtz，blez，bltz，bne, j, jal&lt;/code>&lt;/p>
&lt;h3 id="ifu-instruction-fetch-unit">IFU (Instruction Fetch Unit)
&lt;/h3>&lt;p>PC和nPC内置在IFU中，通过branch信号控制PC变换逻辑&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/IFU.png"
width="217"
height="187"
srcset="https://lhy0424.top/p/co_p3/IFU_hu_246762bdd93fcd81.png 480w, https://lhy0424.top/p/co_p3/IFU_hu_8edeabc3234aafda.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="116"
data-flex-basis="278px"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>端口&lt;/th>
&lt;th>方向&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Instr[31:0]&lt;/td>
&lt;td>O&lt;/td>
&lt;td>输出32位指令二进制编码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>offset[31:0]&lt;/td>
&lt;td>I&lt;/td>
&lt;td>输入branch指令的地址偏移量&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>reset&lt;/td>
&lt;td>I&lt;/td>
&lt;td>复位信号&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch&lt;/td>
&lt;td>I&lt;/td>
&lt;td>是否branch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PC&lt;/td>
&lt;td>O&lt;/td>
&lt;td>用于测试PC&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="controller">Controller
&lt;/h3>&lt;p>用于控制信息通路中的多路选择器，选择正确的功能&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/Controller.png"
width="237"
height="293"
srcset="https://lhy0424.top/p/co_p3/Controller_hu_637e88a6f8be578b.png 480w, https://lhy0424.top/p/co_p3/Controller_hu_34a96c4feeda354e.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="80"
data-flex-basis="194px"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>add&lt;/th>
&lt;th>sub&lt;/th>
&lt;th>ori&lt;/th>
&lt;th>lw&lt;/th>
&lt;th>sw&lt;/th>
&lt;th>beq&lt;/th>
&lt;th>lui&lt;/th>
&lt;th>bgez&lt;/th>
&lt;th>bgtz&lt;/th>
&lt;th>blez&lt;/th>
&lt;th>bltz&lt;/th>
&lt;th>bne&lt;/th>
&lt;th>jump&lt;/th>
&lt;th>jal&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>OpCode&lt;/strong>&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>000000&lt;/td>
&lt;td>001101&lt;/td>
&lt;td>100011&lt;/td>
&lt;td>101011&lt;/td>
&lt;td>000100&lt;/td>
&lt;td>001111&lt;/td>
&lt;td>000001&lt;/td>
&lt;td>000111&lt;/td>
&lt;td>000110&lt;/td>
&lt;td>000001&lt;/td>
&lt;td>000101&lt;/td>
&lt;td>000010&lt;/td>
&lt;td>000011&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Function&lt;/strong>&lt;/td>
&lt;td>100000&lt;/td>
&lt;td>100010&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>00001&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>00000&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;td>xxxxxx&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>add&lt;/th>
&lt;th>sub&lt;/th>
&lt;th>ori&lt;/th>
&lt;th>lw&lt;/th>
&lt;th>sw&lt;/th>
&lt;th>branch&lt;/th>
&lt;th>lui&lt;/th>
&lt;th>jump&lt;/th>
&lt;th>jal&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>RegDst&lt;/td>
&lt;td>01&lt;/td>
&lt;td>01&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>11(const31)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUSrc&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mem2Reg&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>10(PC + 4)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>RegWrite&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MemWrite&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>nPC_Sel&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ExtOp&lt;/td>
&lt;td>00&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01(zero)&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>10(signed)&lt;/td>
&lt;td>00&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ALUOP&amp;lt;1,0&amp;gt;&lt;/td>
&lt;td>00&lt;/td>
&lt;td>01&lt;/td>
&lt;td>10&lt;/td>
&lt;td>00(+)&lt;/td>
&lt;td>00(+)&lt;/td>
&lt;td>00(+)&lt;/td>
&lt;td>11&lt;/td>
&lt;td>00&lt;/td>
&lt;td>0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>jump&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>0&lt;/td>
&lt;td>1&lt;/td>
&lt;td>1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>beq&lt;/th>
&lt;th>bgez&lt;/th>
&lt;th>bgtz&lt;/th>
&lt;th>blez&lt;/th>
&lt;th>bltz&lt;/th>
&lt;th>bne&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>bOp&lt;/td>
&lt;td>100000&lt;/td>
&lt;td>010000&lt;/td>
&lt;td>001000&lt;/td>
&lt;td>000100&lt;/td>
&lt;td>000010&lt;/td>
&lt;td>000001&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="grf-general-register-file">GRF (General Register File)
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/GRF.png"
width="153"
height="189"
srcset="https://lhy0424.top/p/co_p3/GRF_hu_eb7f16537f4c59f2.png 480w, https://lhy0424.top/p/co_p3/GRF_hu_89a3424de69e6891.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="80"
data-flex-basis="194px"
>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>引用自P0_Q2&lt;/strong>&lt;/p>
&lt;p>GRF中包含32个32位寄存器，分别对应0~31号寄存器，其中0号寄存器读取的结果恒为0。&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/GRF_signal.png"
width="745"
height="512"
srcset="https://lhy0424.top/p/co_p3/GRF_signal_hu_ad9e30dc0d93fe33.png 480w, https://lhy0424.top/p/co_p3/GRF_signal_hu_b9950bfe607dc030.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="145"
data-flex-basis="349px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/GRF_function.png"
width="744"
height="185"
srcset="https://lhy0424.top/p/co_p3/GRF_function_hu_f739ed04f5634ca4.png 480w, https://lhy0424.top/p/co_p3/GRF_function_hu_b6bc04b00c322bb2.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="402"
data-flex-basis="965px"
>&lt;/p>&lt;/blockquote>
&lt;h3 id="alu-arithmetic-logic-unit">ALU (Arithmetic Logic Unit)
&lt;/h3>&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/ALU.png"
width="141"
height="143"
srcset="https://lhy0424.top/p/co_p3/ALU_hu_98f1645a0857296b.png 480w, https://lhy0424.top/p/co_p3/ALU_hu_39fa86313d2598e7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="98"
data-flex-basis="236px"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ALUOP&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>00&lt;/td>
&lt;td>加法&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>01&lt;/td>
&lt;td>减法&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>或&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>11&lt;/td>
&lt;td>立即数加载到高位&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="ext-extend">EXT (Extend)
&lt;/h3>&lt;p>用于数据扩展&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/ExtOp.png"
width="200"
height="102"
srcset="https://lhy0424.top/p/co_p3/ExtOp_hu_81fec8418b7be79.png 480w, https://lhy0424.top/p/co_p3/ExtOp_hu_5fb2d3520595f292.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="196"
data-flex-basis="470px"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ExtOp&lt;/th>
&lt;th>操作&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>00&lt;/td>
&lt;td>无操作&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>01&lt;/td>
&lt;td>0扩展&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>10&lt;/td>
&lt;td>signed扩展&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>11&lt;/td>
&lt;td>1扩展&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="bchecker-branch-checker">bChecker (Branch Checker)
&lt;/h3>&lt;p>用于判断是否跳转&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/bCheck.png"
width="240"
height="156"
srcset="https://lhy0424.top/p/co_p3/bCheck_hu_f5f69a4f47ea413d.png 480w, https://lhy0424.top/p/co_p3/bCheck_hu_db5c5a13ef869db6.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="369px"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>端口&lt;/th>
&lt;th>方向&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>bOp&lt;/td>
&lt;td>I&lt;/td>
&lt;td>连接到Controller.bOp，获取branch类型&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>branch&lt;/td>
&lt;td>I&lt;/td>
&lt;td>连接到Controller.branch，判断是否是branch信号&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>G[rs]&lt;/td>
&lt;td>I&lt;/td>
&lt;td>连接到GRF.RD1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>G[rt]&lt;/td>
&lt;td>I&lt;/td>
&lt;td>连接到GFR.RD2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>check&lt;/td>
&lt;td>O&lt;/td>
&lt;td>判断是否符合branch条件，连接到IFU.branch&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="jumpext">jumpEXT
&lt;/h3>&lt;p>用于实现jump和jal指令，计算 &lt;em>&lt;strong>PC31&amp;hellip;28 || Instr_index || 00&lt;/strong>&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/co_p3/jump.png"
width="152"
height="107"
srcset="https://lhy0424.top/p/co_p3/jump_hu_583c9b61f0be0644.png 480w, https://lhy0424.top/p/co_p3/jump_hu_48fb96d38eed6c7e.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="142"
data-flex-basis="340px"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>端口&lt;/th>
&lt;th>方向&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>index&lt;/td>
&lt;td>I&lt;/td>
&lt;td>获取Instr_index，即机器码的后26位&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PC&lt;/td>
&lt;td>I&lt;/td>
&lt;td>获取PC的值&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ext32&lt;/td>
&lt;td>O&lt;/td>
&lt;td>下一个PC的值（nPC）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="测试方案">测试方案
&lt;/h2>&lt;p>随机生成数据 -&amp;gt; 导出十六进制文件 -&amp;gt; 自动化工具生成新电路 -&amp;gt; 比对mars运行结果和circ运行结果&lt;/p>
&lt;p>&lt;strong>randomMipsCmd.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">random&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">generate_register&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;生成一个随机寄存器编号（0-31）。&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">31&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">generate_immediate&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;生成一个随机立即数（0-65535）。&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">65535&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">generate_memory_address&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;生成一个随机内存地址（0-3071，左移2位）。&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3071&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="mi">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">instruction&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;将指令写入文件。&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">instruction&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">seed&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">length&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">int&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;请输入要生成的指令数量：&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">label_count&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;result.asm&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">_&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">tmp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">match&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;add $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;sub $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ori $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_immediate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;lw $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_memory_address&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">($0)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;sw $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_memory_address&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">($0)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">label_count&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">num2&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">num1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">num2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;ori $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">num1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">num1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_immediate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;beq $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">num1&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">num2&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, label&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">random&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">randint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">label_count&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;lui $&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_register&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">generate_immediate&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;nop&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">write_instruction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;label&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">label_count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">:&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">label_count&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>autoWrite2Rom.py&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">re&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 读取 ROM 文件内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;python&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s2">autoTest_P3&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s2">rom.txt&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rom_content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">f&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">strip&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1"># 去掉前后空白字符&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 读取电路文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;python&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s2">autoTest_P3&lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s2">cpu.circ&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;r&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">cur_file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cur_content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">cur_file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用正则表达式替换 ROM 内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cur_content&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sub&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">r&lt;/span>&lt;span class="s1">&amp;#39;addr/data: 12 32([\s\S]*?)&amp;lt;/a&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1"># 使用非贪婪模式匹配&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;addr/data: 12 32&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">rom_content&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s1">&amp;lt;/a&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cur_content&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flags&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DOTALL&lt;/span> &lt;span class="c1"># 允许 . 匹配换行符&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 写入新的电路文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">with&lt;/span> &lt;span class="nb">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;cpu_remake.circ&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;w&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">file&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cur_content&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="思考题">思考题
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>上面我们介绍了通过 FSM 理解单周期 CPU 的基本方法。请大家指出单周期 CPU 所用到的模块中，哪些发挥状态存储功能，哪些发挥状态转移功能。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>状态存储功能：IFU、GRF&lt;/li>
&lt;li>状态转移功能：Controller、ALU、EXT、bCheckTT&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>现在我们的模块中 IM 使用 ROM， DM 使用 RAM， GRF 使用 Register，这种做法合理吗？ 请给出分析，若有改进意见也请一并给出。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>合理&lt;/p>
&lt;ul>
&lt;li>ROM是只读存储器，不会被写入，内部数据不会被修改，适合用来储存指令。&lt;/li>
&lt;li>RAM可以存取存储器，可以被写入可以被读取，适合用来读取数据。&lt;/li>
&lt;li>GRF是寄存器堆，Register具有较高的读写速度，适合用来存储指令中的数据。&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>在上述提示的模块之外，你是否在实际实现时设计了其他的模块？如果是的话，请给出介绍和设计的思路。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>额外设计了Branch Checker，用于判断是否branch，设计思路见&amp;quot;设计草稿&amp;quot;&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>事实上，实现 &lt;code>nop&lt;/code> 空指令，我们并不需要将它加入控制信号真值表，为什么？&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>nop的指令码是0x00000000，会被翻译为*** sll $0, $0 0***，即把$0的值左移0位存入$0，因为$0的值始终为零不会被改变，所以nop不会带来电路的任何改变。&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>阅读 Pre 的 &lt;a class="link" href="http://cscore.buaa.edu.cn/tutorial/mips/mips-6/mips6-1/" target="_blank" rel="noopener"
>“MIPS 指令集及汇编语言”&lt;/a> 一节中给出的测试样例，评价其强度（可从各个指令的覆盖情况，单一指令各种行为的覆盖情况等方面分析），并指出具体的不足之处。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>强度一般&lt;/p>
&lt;p>没有测试到所有的寄存器，也没有考虑到数据溢出的情况&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ol></description></item><item><title>大模型调研——以《链接》第六链为例</title><link>https://lhy0424.top/p/%E7%A7%91%E7%A0%94%E8%AF%BE%E5%A0%82%E8%B0%83%E7%A0%94/</link><pubDate>Sat, 12 Oct 2024 18:06:00 +0000</pubDate><guid>https://lhy0424.top/p/%E7%A7%91%E7%A0%94%E8%AF%BE%E5%A0%82%E8%B0%83%E7%A0%94/</guid><description>&lt;img src="https://lhy0424.top/p/%E7%A7%91%E7%A0%94%E8%AF%BE%E5%A0%82%E8%B0%83%E7%A0%94/llm_kykt.png" alt="Featured image of post 大模型调研——以《链接》第六链为例" />&lt;p>科研课题调研任务&lt;/p>
&lt;h3 id="声明">声明
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;em>为了公平起见，本次所比较的四个大模型均使用免费的默认模型（打开对应的网页直接使用）。&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>所引用的回答均是首次回答。&lt;/em>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;em>所有排行均是个人主观判断&lt;/em>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="一我对第六链的理解">一、我对第六链的理解
&lt;/h3>&lt;p>在第五链中，作者着重介绍了“枢纽节点”，提出了对“随即网络”的质疑，并指出“枢纽节点服从严格的数学规律，枢纽节点的无处不在促使我们对网络进行全新的思考”。&lt;/p>
&lt;p>在第六链中，作者向我们介绍了&lt;strong>复杂网络的分布规律——幂律&lt;/strong>。我认为对第六链的总结应包含以下几个方面：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>帕累托定律（80/20定律）与幂律的关系&lt;/strong>。幂律从数学角度验证了80/20定律：少数几个大事件发挥了大部分的作用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布与钟形分布与无尺度网络&lt;/strong>。钟形分布曲线有一个峰，这个峰代表所有节点的特征尺度，偏离这一尺度的事件很少发生；，幂律分布曲线没有峰，而是不断递减的曲线，在幂律分布中，大量微小事件和少数非常重大的事件并存，无法找到一个能代表所有节点特性的节点，即不存在固有的尺度，拥有这一分布特征的网络被称为“无尺度网络”。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布网络的不均匀性&lt;/strong>。多数少链接节点和少数多链接节点（枢纽节点）并存，网络的连通性由少数枢纽节点保证，是它们让真实网络免于瓦解。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>无序到有序的涌现与自组织&lt;/strong>。在相变点，物质开始遵循相同的幂律，不同系统之间有着高度的相似。幂律是复杂系统自组织所独有的特性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律无处不在&lt;/strong>。在各个学科中，只要有自组织的现象，就存在幂律。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="二文本阅读能力">二、文本阅读能力
&lt;/h3>&lt;p>epub文件来源于Z-Library，0.99MB&lt;/p>
&lt;p>pdf文件由epub文件通过&lt;a class="link" href="www.zamzar.com" >zamzar&lt;/a>转换而来，5.20MB&lt;/p>
&lt;p>&lt;strong>两个文件均为整本书&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>ChatGPT&lt;/th>
&lt;th>通义千问&lt;/th>
&lt;th>零一万物&lt;/th>
&lt;th>腾讯元宝&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>epub文件阅读&lt;/td>
&lt;td>✗&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✗&lt;/td>
&lt;td>✗&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>pdf文件阅读&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>文档大小&lt;/td>
&lt;td>可上传20个文件，单个文件上限512MB&lt;/td>
&lt;td>可上传100个文件，单个文件上限150MB&lt;/td>
&lt;td>支持10个pdf同时上传，总页数上限5000（约500万字）&lt;/td>
&lt;td>可上传50个文件，单个文件上限100MB&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="三文本摘要能力">三、文本摘要能力
&lt;/h3>&lt;h4 id="给出整本书的文件仅总结第六链">给出整本书的文件，仅总结第六链
&lt;/h4>&lt;h5 id="epub---通义千问">epub - 通义千问
&lt;/h5>&lt;blockquote>
&lt;p>第六链讨论了幂律（Power Law）在复杂网络中的分布规律。幂律揭示了网络中节点的连接度分布并非随机，而是遵循一定的数学规律。这种规律体现在许多自然和社会现象中，比如财富分配、城市规模等，并且在网络科学中尤为重要。&lt;/p>
&lt;p>书中提到，帕累托（Pareto）和他的80/20定律是幂律的一个著名例子，即少数关键因素往往决定了大部分的结果。在复杂网络中，这意味着少数枢纽节点拥有大量的链接，而大多数节点只有很少的链接。这样的分布可以用概率形式表达，一个随机选择的节点恰好拥有k条链接的概率服从分布P(k)～k^(-γ)，其中γ被称为度指数。&lt;/p>
&lt;p>巴拉巴西等人发现，万维网的结构也符合幂律分布，这表明网络具有无尺度特性（scale-free），即网络中存在一些高度连接的节点（枢纽节点）。这些枢纽节点的存在使得网络表现出小世界特性，即任意两个节点之间的平均路径长度相对较短。此外，幂律分布还出现在其他系统中，如好莱坞演员的合作网络。&lt;/p>
&lt;p>幂律分布不仅是复杂网络的关键特征之一，也是理解网络健壮性与脆弱性的基础。它表明，虽然大多数节点对网络的整体连通性影响不大，但枢纽节点对于保持网络的完整性和功能性至关重要。如果枢纽节点被移除，整个网络可能会分裂成碎片。因此，幂律分布为我们提供了关于如何设计更加鲁棒的网络以及如何更有效地分析和控制网络的洞见。&lt;/p>&lt;/blockquote>
&lt;p>通义千问对epub文件的总结很详细，但显然没抓住了本章的重点，且忽略了一部分内容。此外，通义千问还擅自加入了一些额外的内容，如“提供了关于如何设计更加鲁棒的网络以及如何更有效地分析和控制网络的洞见”，这些概念并没有在文件中出现。&lt;/p>
&lt;h5 id="pdf---chatgpt">pdf - ChatGPT
&lt;/h5>&lt;blockquote>
&lt;p>第六链《幂律——复杂网络的分布规律》讨论了复杂网络中的一个重要特性——幂律分布。幂律规律揭示了在复杂系统中，少数节点会拥有大量连接，而大多数节点则只有少量连接。该规律与帕累托的80/20定律类似，表现为少部分节点掌握了大部分连接。通过幂律分布，我们可以看到有序是如何从无序中涌现出来的，从看似随机的结构中，复杂网络逐渐自组织并展现出稳定的分布模式。&lt;/p>
&lt;p>在这一链中，书中通过多个案例讨论了幂律分布的普遍性，包括互联网的连接分布、社交网络的关系模式等，强调了这种分布在现实世界中的无处不在。&lt;/p>&lt;/blockquote>
&lt;p>ChatGPT的回答很简短，但却最能抓住重点，基本覆盖了本章的所有重要内容。个人认为是&lt;strong>最佳回答&lt;/strong>。&lt;/p>
&lt;h5 id="pdf---通义千问">pdf - 通义千问
&lt;/h5>&lt;blockquote>
&lt;p>第六链主要讨论了复杂网络中的幂律分布规律。这一章节揭示了在许多真实世界的网络中，节点的连接度（即一个节点与其他节点相连的数量）并不是均匀分布的，而是遵循一种特定的数学模式——幂律分布。幂律分布意味着少数节点拥有大量的链接，而大多数节点只有很少的链接。这种分布通常用P(k)～k^(-γ)来表示，其中P(k)是具有k个链接的节点的概率，γ是一个大于1的常数，称为度指数。&lt;/p>
&lt;p>书中提到，幂律分布在多种系统中都有出现，包括互联网、社交网络、细胞内的分子网络等。例如，在万维网中，少量网页成为了非常受欢迎的中心节点，它们被大量其他网页所链接，而绝大多数网页则相对较少地被链接。这样的结构被称为无尺度网络，它与传统的随机网络模型有很大的不同。&lt;/p>
&lt;p>此外，本章还探讨了幂律分布如何从无序中涌现有序，并且解释了生长机制和偏好连接是形成这种分布的两个重要原则。这意味着网络中的新节点更倾向于与那些已经拥有许多链接的节点建立联系，从而加强了这些中心节点的重要性，导致“富者愈富”的现象。这一过程也体现了“适者愈富”或“胜者通吃”的动态，其中某些节点能够迅速成长为网络中的关键枢纽。&lt;/p>&lt;/blockquote>
&lt;p>通义千问对pdf的总结不如epub，把重点放在了介绍“什么是幂律分布”，忽略了一部分内容，不像是对文章的总结。且出现了和对epub总结一样的问题，额外联想了一些内容，在最后一段中出现了大量下一章的内容，这显然不是我们在文章总结中所希望看到的。&lt;/p>
&lt;h5 id="pdf---零一万物">pdf - 零一万物
&lt;/h5>&lt;blockquote>
&lt;p>第六链主要讨论了复杂网络中的分布规律，特别是幂律分布。这一概念起源于帕累托提出的80/20定律，即在许多情况下，约80%的效果是由约20%的原因产生的。在网络科学中，幂律分布表明网络中的节点连接度分布是不均匀的，少数节点（即枢纽节点）拥有大量的连接，而大多数节点的连接数则相对较少。这种分布方式对于理解网络的结构和行为非常重要，因为它揭示了网络中连接模式的普遍规律，以及这些规律如何影响网络的稳定性和传播动力学。&lt;/p>&lt;/blockquote>
&lt;p>观点错误，幂律分布并不是起源于80/20定律。且概括不全面，缺少要点。&lt;/p>
&lt;h5 id="pdf---腾讯元宝">pdf - 腾讯元宝
&lt;/h5>&lt;blockquote>
&lt;p>第六链主要探讨了复杂网络中的幂律分布现象，解释了幂律在网络中的普遍性和重要性，并提出了无尺度网络模型。以下是主要内容：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>幂律分布的普遍性&lt;/strong>：幂律分布不仅在万维网和好莱坞演员网络中出现，还在许多其他领域（如细胞网络、食物链网络、互联网等）中普遍存在。这种分布揭示了网络中少数枢纽节点的重要性。&lt;/li>
&lt;li>&lt;strong>无尺度网络模型&lt;/strong>：巴拉巴西和雷卡·阿尔伯特提出了一个无尺度网络模型，解释了幂律分布的来源。该模型通过“复制-连接”操作生成具有层次化聚团性的网络，展示了无尺度网络和模块化网络的融合。&lt;/li>
&lt;li>&lt;strong>枢纽节点的作用&lt;/strong>：枢纽节点在网络中扮演着关键角色，它们连接了大量其他节点，使得网络具有小世界特性。枢纽节点的存在使得网络在面对局部故障时更具健壮性，但也更容易受到攻击。&lt;/li>
&lt;li>&lt;strong>模块化与无尺度网络的结合&lt;/strong>：研究表明，许多真实网络不仅是无尺度的，还具有模块化特性。这种结合使得网络在保持整体连通性的同时，也能在局部区域内进行高效的组织和运作。&lt;/li>
&lt;/ol>&lt;/blockquote>
&lt;p>存在非本章的内容，如“枢纽节点的存在使得网络更容易受到攻击”和“真实网络具有模块化特性”。显然没有很好的分割各个章节。&lt;/p>
&lt;h4 id="仅给出第六链部分的pdf文件总结第六链">仅给出第六链部分的pdf文件，总结第六链
&lt;/h4>&lt;h5 id="pdf---chatgpt---6only">pdf - ChatGPT - 6’only
&lt;/h5>&lt;blockquote>
&lt;p>你上传的文件提到了关于复杂网络和幂律分布的内容，重点包括以下几个方面：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>幂律分布的特点&lt;/strong>：幂律分布是指很多小事件与少数重大事件共存的现象。该分布在现实中没有峰值，呈现出一种不断递减的曲线。这种现象在许多领域都有应用，例如互联网、社会经济不平等以及自然现象等。&lt;/li>
&lt;li>&lt;strong>帕累托与80/20定律&lt;/strong>：帕累托最初发现经济中的不平等现象，用他的经验观察指出80%的财富掌握在20%的人手中。这一原则后来被扩展为管理学中的80/20定律，适用于众多领域，例如客户服务、工作效率等。&lt;/li>
&lt;li>&lt;strong>无尺度网络与枢纽节点&lt;/strong>：无尺度网络是指遵循幂律度分布的网络，这种网络的特点是大多数节点连接较少，而少数枢纽节点连接很多。在这种结构中，网络的连通性和稳定性主要依赖于这些枢纽节点。&lt;/li>
&lt;li>&lt;strong>有序与无序的涌现&lt;/strong>：通过对物质相变的研究，物理学家发现了从无序到有序的自然转变过程中，幂律往往标志着从混沌到有序的过渡。这种现象不仅仅适用于物理系统，也适用于复杂网络等许多其他领域。&lt;/li>
&lt;/ol>
&lt;p>总结来说，幂律和无尺度网络揭示了自然界和社会系统中普遍存在的一种秩序，它们解释了从无序到有序的转变，以及少数事件对整体系统的深远影响。这些规律为理解复杂系统提供了重要的理论基础。&lt;/p>&lt;/blockquote>
&lt;p>完美！&lt;/p>
&lt;h5 id="pdf---通义千问---6only">pdf - 通义千问 - 6‘only
&lt;/h5>&lt;blockquote>
&lt;p>这本书中提到的幂律和无尺度网络是理解复杂系统的关键概念。以下是这些概念的核心要点总结：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>幂律分布&lt;/strong>：这是一种没有峰值且不断递减的分布，它描述了大量微小事件与少数重大事件共存的情况。例如，在一个假设星球上，如果居民身高遵循幂律分布，那么大多数人的身高会非常矮，但也会存在极少数几百米高的巨人。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>无尺度网络&lt;/strong>：这种网络的特点是其节点度数（即链接数量）遵循幂律分布。在这样的网络里，大部分节点只有很少几个链接，而少数枢纽节点拥有大量的链接。无尺度网络的结构类似于航空交通系统，其中许多小机场通过少数主要交通枢纽连接在一起。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>帕累托定律（80/20定律）&lt;/strong>：这个原则表明，一小部分因素通常会产生大部分结果。比如，80%的利润可能来自20%的员工；或者80%的土地被20%的人口所占有。尽管80/20法则有多种应用，但它并不适用于所有情况，而是特定系统中的特征。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律在网络中的意义&lt;/strong>：当研究者发现万维网上的网页链接也遵循幂律时，这揭示了真实网络远非随机，而是具有某种内在秩序。这意味着网络中有重要的组织规则在起作用，特别是那些高度连接的枢纽节点对整个网络的稳定性、动态行为以及健壮性有着决定性的影响。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自组织与涌现现象&lt;/strong>：书中还探讨了从无序到有序转变的现象，如水结冰或磁体形成的过程。这些相变展示了如何从个体单元间的简单相互作用中涌现出复杂的集体行为，这是理解和分析复杂系统的另一个关键方面。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>综上所述，幂律和无尺度网络的概念帮助我们理解了复杂系统背后的规律性和自组织特性，并强调了在看似混沌的环境中存在的潜在秩序。&lt;/p>&lt;/blockquote>
&lt;p>要点总结完美，但最后的综述偏离了文章主旨。&lt;/p>
&lt;h5 id="pdf---零一万物---6only">pdf - 零一万物 - 6’only
&lt;/h5>&lt;blockquote>
&lt;p>本文讨论了复杂网络中的幂律分布，这是一种没有峰值、不断递减的曲线，其中大量微小事件与少数重大事件并存。无尺度网络遵循幂律度分布，其中大多数节点只有少数链接，通过少数高度连接的枢纽节点连接在一起。帕累托的80/20定律是幂律分布的一个例子，其中80%的结果来自20%的原因。&lt;/p>
&lt;p>文章提到，40年前，埃尔德什和莱利将复杂网络视为随机系统，但幂律的出现表明这些网络实际上是自组织的。万维网上，网页链接数的分布遵循幂律，度指数接近2。这种分布意味着网络不是随机的，而是存在某种秩序。&lt;/p>
&lt;p>文章还讨论了相变，即物质从无序到有序的转变，其中也观察到了幂律。物理学家利奥·卡达诺夫和肯尼斯·威尔逊等人的工作揭示了相变中的普遍性，即不同系统在临界点附近表现出相似的行为，遵循幂律。&lt;/p>
&lt;p>最后，文章提出了问题：在网络中观察到的幂律意味着什么类型的转变？为什么枢纽节点出现在各种网络中？是否存在某种根本定律让不同的网络具有相同的普遍形式和形状？这些问题表明，尽管我们已经知道枢纽节点和幂律分布是自组织和有序的标志，但产生这些现象的机制仍然是一个谜。&lt;/p>&lt;/blockquote>
&lt;p>逻辑混乱，重点不突出，总结性不强。&lt;/p>
&lt;h5 id="pdf---腾讯元宝---6only">pdf - 腾讯元宝 - 6‘only
&lt;/h5>&lt;blockquote>
&lt;p>这篇文章探讨了幂律分布及其在复杂网络中的应用，特别是无尺度网络的特征和重要性。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>幂律分布的定义与特征&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布的定义&lt;/strong>：幂律分布是一种没有峰值且不断递减的曲线，特征是大量微小事件和少数重大事件并存。&lt;/li>
&lt;li>&lt;strong>幂律分布的实例&lt;/strong>：例如，星球上居民的身高分布，大多数人都很矮，但偶尔会有几百米高的巨人。&lt;/li>
&lt;li>&lt;strong>幂律分布与钟形曲线的区别&lt;/strong>：钟形曲线有明显的峰值，而幂律分布没有峰值，尾部衰减得更慢，允许“罕见事件”的存在。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>无尺度网络的概念&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>无尺度网络的定义&lt;/strong>：无尺度网络是遵循幂律度分布的网络，大多数节点只有少数几个链接，通过少数高度连接的枢纽节点连接。&lt;/li>
&lt;li>&lt;strong>无尺度网络的视觉形象&lt;/strong>：类似于航空交通系统，很多小机场通过少数几个主要交通枢纽连接。&lt;/li>
&lt;li>&lt;strong>无尺度网络与随机网络的对比&lt;/strong>：随机网络大多数节点拥有相同的链接数，而无尺度网络有少数枢纽节点拥有大量链接。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>帕累托与80/20定律&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>帕累托的生平与背景&lt;/strong>：意大利经济学家，曾从事铁路工程，后致力于经济学研究。&lt;/li>
&lt;li>&lt;strong>帕累托的观察与定律&lt;/strong>：发现80%的财富由20%的人口占有，提出了著名的80/20定律。&lt;/li>
&lt;li>&lt;strong>80/20定律的应用与扩展&lt;/strong>：广泛应用于管理学、社会学等领域，描述了大多数情况下，少量因素决定了大部分结果的现象。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布与度指数&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布的数学表达&lt;/strong>：幂律分布可以用幂函数表示，每个幂律都有一个独一无二的幂指数。&lt;/li>
&lt;li>&lt;strong>万维网的幂律分布&lt;/strong>：网页链接数的分布遵循幂律，度指数接近2。&lt;/li>
&lt;li>&lt;strong>其他复杂网络的幂律分布&lt;/strong>：如好莱坞演员网络、细胞内部网络等，均遵循幂律分布。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律网络的特性与影响&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律网络的不均匀性&lt;/strong>：大多数节点只有少数链接，枢纽节点拥有大量链接，保证了网络的连通性。&lt;/li>
&lt;li>&lt;strong>幂律网络的无尺度特性&lt;/strong>：没有特征节点，节点间存在连续的层级结构。&lt;/li>
&lt;li>&lt;strong>枢纽节点的重要性&lt;/strong>：枢纽节点决定了网络的结构稳定性、动态行为、健壮性、容错性和故障容忍性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布的普遍性与自组织&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布的普遍性&lt;/strong>：在自然界和复杂系统中广泛存在，如液体结冰、磁体涌现等。&lt;/li>
&lt;li>&lt;strong>相变与幂律分布&lt;/strong>：临界点附近，系统从无序到有序的相变过程中，幂律分布起着关键作用。&lt;/li>
&lt;li>&lt;strong>重整化理论&lt;/strong>：由肯尼斯·威尔逊提出，解释了幂律分布的数学基础，揭示了从无序到有序的转变机制。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布的未来研究方向&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>枢纽节点生成机制的研究&lt;/strong>：尚未完全解决，需要进一步探索。&lt;/li>
&lt;li>&lt;strong>复杂网络的临界点研究&lt;/strong>：研究网络为何处于临界点并展现无尺度行为。&lt;/li>
&lt;li>&lt;strong>普遍网络定律的探索&lt;/strong>：寻找不同网络具有相同普遍形式和形状的根本定律。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>总的来说，这篇文章详细介绍了幂律分布及其在复杂网络中的应用，特别是无尺度网络的特征和重要性，展示了幂律分布在不同领域中的普遍性和深远影响。&lt;/p>&lt;/blockquote>
&lt;p>要点全面，但是冗余信息过多，总结性不强。&lt;/p>
&lt;h4 id="小结">小结
&lt;/h4>&lt;p>将整本书上传给大模型并要求总结特定章节时，部分大模型会出现“章节划分不清晰”的问题。而仅上传特定章节让其总结，效果显著提高。&lt;/p>
&lt;p>四个大模型均可通过进一步提示扩写摘要，但大致内容没有变化。&lt;/p>
&lt;p>在所评测的四个大模型中，ChatGPT &amp;gt; 通义千问 &amp;gt; 腾讯元宝 &amp;gt; 零一万物。&lt;/p>
&lt;h3 id="四文本理解能力">四、文本理解能力
&lt;/h3>&lt;p>仅给出第六链部分的文件，基于我自己提出的问题比较四个大模型的文本理解能力。&lt;/p>
&lt;h4 id="q1幂律分布和钟形分布的区别">Q1：幂律分布和钟形分布的区别
&lt;/h4>&lt;h5 id="chatgpt">ChatGPT
&lt;/h5>&lt;blockquote>
&lt;p>根据你上传的文件，幂律分布和钟形分布之间的主要区别如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>形状和分布特征&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布&lt;/strong>：是一条没有峰值、不断递减的曲线，表示大多数事件非常小，少数事件非常大。幂律分布允许极端事件（如巨大的枢纽节点）存在，通常在复杂网络中广泛出现。&lt;/li>
&lt;li>&lt;strong>钟形分布（正态分布）&lt;/strong>：有一个明显的峰值，表示大多数事件集中在平均值附近，偏离平均值的事件相对较少。钟形分布常见于自然界的随机现象，如人的身高、体重等。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>尾部衰减&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布&lt;/strong>：尾部衰减较慢，意味着极端大事件的发生虽然少见，但仍可能出现。比如，在网络中少数枢纽节点拥有大量连接。&lt;/li>
&lt;li>&lt;strong>钟形分布&lt;/strong>：尾部衰减非常快，极端事件几乎不会出现。它表明系统中的大多数事件会集中在某个范围内，极端偏离的现象极为罕见。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>应用场景&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布&lt;/strong>：适用于复杂系统，如互联网节点、社交网络、科学家之间的引用关系等，反映了大多数节点只有少数连接，而少数枢纽节点连接非常多。&lt;/li>
&lt;li>&lt;strong>钟形分布&lt;/strong>：适用于随机现象或系统，如大气分子的速度分布、人类的智商分布等。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>总结：幂律分布强调少数重大事件对系统的显著影响，而钟形分布强调事件的集中性和一致性，极端事件在钟形分布中非常少见。&lt;/p>&lt;/blockquote>
&lt;p>观点正确，回答全面，逻辑性强。&lt;/p>
&lt;h5 id="通义千问">通义千问
&lt;/h5>&lt;blockquote>
&lt;p>幂律分布和钟形分布（也称为正态分布或高斯分布）在形状和特性上有显著的区别：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>形状上的区别&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：这种分布有一个明显的峰，大多数数据点集中在平均值附近，随着远离平均值，出现的数据点数量迅速减少。它呈现出对称的钟形曲线。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：幂律分布没有明显的峰，而是呈现出一条不断递减的曲线。这意味着有大量微小事件的存在，同时伴随着少数非常重大的事件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>尾部行为&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：其尾部衰减得非常快，偏离平均值较远的数据点极为罕见。这表明极端事件的发生概率极低。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：幂律分布的尾部衰减速度慢得多，允许存在“罕见事件”。例如，在一个假设的星球上，如果居民身高遵循幂律分布，那么虽然大多数人很矮，但偶尔看到一个几百米高的巨人也不会让人感到特别惊讶。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数学表达&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：可以用正态分布函数来描述，具有明确的均值和方差。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：通常用幂函数来表示，形式为 $N(k) \sim k^{-\gamma}$，其中 \(k\) 是变量，\(N(k)\) 是该变量取值 \(k\) 的频率，而 $\gamma$ 是度指数。不同的系统会有不同的 $\gamma$ 值。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>实际应用中的意义&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：适用于很多自然现象，如人类的身高、智商等，这些量通常围绕着某个中心值波动，并且极端值很少见。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：则常见于复杂网络中，比如网页链接数、社交网络中的好友数等，说明了网络中存在少量高度连接的节点（枢纽节点），它们对于整个网络结构至关重要。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>简而言之，钟形分布强调的是数据的集中趋势，而幂律分布则揭示了数据中存在的广泛差异性和极端事件的可能性。这两种分布反映了自然界和社会现象中不同类型的数据模式。&lt;/p>&lt;/blockquote>
&lt;p>完美！逻辑和ChatGPT很像，但是多出了数学表达部分。&lt;/p>
&lt;h5 id="零一万物">零一万物
&lt;/h5>&lt;blockquote>
&lt;p>幂律分布和钟形分布的主要区别在于它们在分布尾部的行为。钟形分布，如正态分布，在尾部呈现出指数衰减，这意味着极端事件发生的概率非常低。相比之下，幂律分布在尾部的衰减要慢得多，这允许罕见事件（如枢纽节点）的存在。在钟形分布中，极端事件几乎不可能发生，而在幂律分布中，虽然罕见事件发生的概率也很低，但它们的存在是分布的一个显著特征。&lt;/p>&lt;/blockquote>
&lt;p>“主要区别在于它们在分布尾部的行为”这一观点并不准确，缺乏逻辑性。&lt;/p>
&lt;h5 id="腾讯元宝">腾讯元宝
&lt;/h5>&lt;blockquote>
&lt;p>根据文档内容，幂律分布和钟形分布在分布的尾部存在重要的定性差异：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>尾部衰减速度&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：尾部的指数衰减速度非常快。这意味着偏离平均值的节点（如具有极多或极少链接的节点）非常罕见。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：尾部的衰减速度较慢。这意味着在幂律分布中，存在一些“罕见事件”，即具有极多链接的枢纽节点。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>枢纽节点的存在&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：由于尾部快速衰减，枢纽节点几乎不存在。大多数节点的链接数都接近平均值。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：由于尾部衰减较慢，枢纽节点可以存在。这些枢纽节点拥有大量链接，使得网络具有高度的连通性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>分布形状&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>钟形分布&lt;/strong>：呈现出一个明显的峰值，表明大多数节点的链接数集中在平均值附近。&lt;/li>
&lt;li>&lt;strong>幂律分布&lt;/strong>：没有明显的峰值，呈现不断递减的曲线，表明大多数节点的链接数较少，但存在少数节点拥有非常多的链接。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>总结来说，幂律分布和钟形分布的主要区别在于尾部的衰减速度和枢纽节点的存在与否。钟形分布的尾部快速衰减，导致枢纽节点不存在；而幂律分布的尾部衰减较慢，允许枢纽节点的存在。&lt;/p>&lt;/blockquote>
&lt;p>我个人认为，在幂律分布和钟形分布的差别中不应该出现“枢纽节点”，因为枢纽节点是具有幂律特性的网络中的一个具体现象，而不是两种分布的差异所在。&lt;/p>
&lt;p>&lt;strong>对于Q1，通义千问 &amp;gt; ChatGPT &amp;gt; 腾讯元宝 &amp;gt; 零一万物&lt;/strong>&lt;/p>
&lt;h4 id="q2什么是度指数">Q2：什么是度指数
&lt;/h4>&lt;h5 id="chatgpt-1">ChatGPT
&lt;/h5>&lt;blockquote>
&lt;p>根据文件，&lt;strong>度指数&lt;/strong>是用于描述复杂网络中节点的链接数（度数）分布的一种参数，通常与幂律分布相关。&lt;/p>
&lt;p>具体来说，度指数是幂律分布公式中的指数参数，用来衡量网络中节点的链接数是如何分布的。例如，对于一个网络，具有 \( k \) 个链接的节点数 \( N(k) \) 遵循幂律分布，表达式为：$ N(k) \sim k^{-\gamma} $其中，&lt;strong>γ（度指数）&lt;/strong> 描述了链接数分布的衰减速率。度指数越小，表示网络中有更多节点拥有大量链接；度指数越大，表示大部分节点的链接数较少，而少数枢纽节点拥有非常多的链接。&lt;/p>
&lt;p>在万维网的研究中，导入链接数的分布度指数大约为 2，而导出链接的分布度指数略大一些，表明不同网页之间的链接并不均匀，大多数网页有少量链接，而少数网页有大量链接。&lt;/p>&lt;/blockquote>
&lt;p>用词准确，回答简介易懂，没有缺少要点。&lt;/p>
&lt;h5 id="通义千问-1">通义千问
&lt;/h5>&lt;blockquote>
&lt;p>度指数是幂律分布中的一个关键参数，它描述了网络中节点的链接数（即度）是如何分布的。在数学上，如果一个网络的节点度数遵循幂律分布，那么可以表示为 $N(k) \sim k^{-\gamma}$，这里的 \(k\) 表示节点的度数，\(N(k)\) 表示具有 \(k\) 个链接的节点数量，而 $ \gamma $ 就是度指数。&lt;/p>
&lt;p>度指数 $ \gamma $ 的值决定了网络中不同度数节点的数量比例。具体来说：&lt;/p>
&lt;ul>
&lt;li>当 $ \gamma $接近2时，意味着非常流行的节点（拥有大量链接的节点）相对较多。&lt;/li>
&lt;li>如果 $ \gamma $ 稍微大一些，比如接近3或更大，则说明非常流行的节点较少，大多数节点只有少量链接。&lt;/li>
&lt;/ul>
&lt;p>通过度指数，我们可以了解相对于不流行的网页，到底有多少非常流行的网页。在网络分析中，度指数通常用来衡量网络的异质性，以及识别出那些对网络连通性和稳定性起着关键作用的高度连接节点（枢纽节点）。例如，在万维网的研究中发现，网页的导入链接数和导出链接数都遵循幂律分布，其中导入链接的度指数接近2，而导出链接的度指数则稍微大一些。这些发现表明，尽管大部分网页只有少量链接，但少数网页却拥有大量的链接，这构成了无尺度网络的特征。&lt;/p>&lt;/blockquote>
&lt;p>基本和ChatGPT打平，用词稍微有点冗余，不够简洁，但无伤大雅。&lt;/p>
&lt;h5 id="零一万物-1">零一万物
&lt;/h5>&lt;blockquote>
&lt;p>度指数是指在网络中，节点连接度的分布遵循幂律分布时的幂指数。它表征了网络中节点连接度分布的形状，即有多少节点拥有多少连接。度指数可以通过在双对数坐标系下拟合节点连接度的直方图来确定，直线的斜率即为度指数。在万维网上，度指数接近2，这意味着网页的导入链接数的分布遵循幂律，且大多数网页只有少数链接，而少数枢纽网页则拥有非常多的链接。&lt;/p>&lt;/blockquote>
&lt;p>观点有误，度指数并非代表有多少节点拥有多少连接，缺少要点，缺少数学公式。&lt;/p>
&lt;h5 id="腾讯元宝-1">腾讯元宝
&lt;/h5>&lt;blockquote>
&lt;p>根据文档内容，度指数是指幂律分布中的一个参数，用来描述网络中度（即节点的连接数）的分布情况。具体来说，度指数决定了幂律分布的具体形式。在网络科学中，度指数通常表示为γ，用来描述节点连接数的分布。文档中提到：&lt;/p>
&lt;blockquote>
&lt;p>每一个幂律都有一个独一无二的幂指数。通过幂指数我们可以得知，相对于那些不流行的网页，到底有多少非常流行的网页。在网络中，幂律可用于描述度的分布，而幂指数通常被称为度指数。&lt;/p>&lt;/blockquote>
&lt;p>例如，文档中提到网页的导入链接数的分布遵循幂律，度指数接近2；导出链接的度指数稍微大一些，大约为2.5。这意味着，如果有k个导入链接的网页数目N(k)遵循幂律分布，则可以表示为：&lt;/p>
&lt;p>$ N(k) \sim k^{-\gamma} $&lt;/p>
&lt;p>其中，γ就是度指数。在文档中提到的具体数值中，导入链接的度指数γ接近2，导出链接的度指数γ约为2.5。&lt;/p>&lt;/blockquote>
&lt;p>回答没有问题，但引用显得有些多余，逻辑也不够清晰。&lt;/p>
&lt;p>&lt;strong>对于Q2，ChatGPT = 通义千问 &amp;gt; 腾讯元宝 &amp;gt; 零一万物&lt;/strong>&lt;/p>
&lt;h4 id="q3互联网中的幂律是如何被发现的">Q3：互联网中的幂律是如何被发现的
&lt;/h4>&lt;h5 id="chatgpt-2">ChatGPT
&lt;/h5>&lt;blockquote>
&lt;p>根据文件，互联网中的幂律分布是通过对万维网结构的分析而被发现的。发现过程如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>最初的预期&lt;/strong>：研究者最初预计万维网是一个随机网络，网页之间的链接数应遵循类似于钟形曲线的单峰分布。这意味着大多数网页的链接数相差不大，且没有明显的极端现象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>实际发现&lt;/strong>：当郑浩雄（研究者）设计万维网采集机器人来分析网络时，采集到的数据表明，万维网上的链接数分布并不符合钟形分布。相反，很多网页只有少量链接，而少数网页拥有大量链接（枢纽节点）。这种分布与预期大相径庭。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布的确认&lt;/strong>：通过将网络节点的链接数进行双对数坐标图绘制，研究者发现节点的连接度分布遵循幂律分布。这意味着，网页的链接数按照幂律的方式衰减：大多数节点只有少量链接，但少数枢纽节点拥有非常多的链接。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>结果的意义&lt;/strong>：这一发现表明，万维网并不是一个随机网络，而是一个无尺度网络（幂律分布的网络），其中少数枢纽节点在网络的连通性和结构中扮演着重要角色。研究者进一步观察到，其他复杂网络（如好莱坞演员网络、科学家引用网络等）也呈现出类似的幂律分布。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>通过这一过程，研究者首次确认了万维网的链接数遵循幂律分布，从而揭示了互联网背后复杂的网络结构。&lt;/p>&lt;/blockquote>
&lt;p>要点没有缺失，逻辑清晰，标准答案！&lt;/p>
&lt;h5 id="通义千问-2">通义千问
&lt;/h5>&lt;blockquote>
&lt;p>互联网中的幂律是通过研究网页之间的链接结构而被发现的。具体来说，当科学家们开始使用网络爬虫（微型搜索引擎）来探索万维网的结构时，他们原本预期会看到类似于随机网络的单峰分布，即大多数网页具有相似数量的链接。然而，实际观察到的结果却与这一预期大相径庭。&lt;/p>
&lt;p>研究人员注意到，在万维网中：&lt;/p>
&lt;ul>
&lt;li>许多节点（网页）只有少量链接。&lt;/li>
&lt;li>一些枢纽节点（少数非常流行的网页）拥有大量的链接。&lt;/li>
&lt;/ul>
&lt;p>这种模式在双对数坐标系下进行拟合时，显示出一个令人惊讶的现象：网页链接数的分布严格遵循被称为幂律的数学表达式。这意味着，对于具有 \(k\) 个导入链接的网页数目 \(N(k)\)，其分布可以用公式 $ N(k) \sim k^{-\gamma} $ 来描述，其中 $\gamma$ 是度指数，大约为2.1；而对于导出链接数的分布，度指数则稍大一些，约为2.5。&lt;/p>
&lt;p>这些发现表明，万维网并不是一个随机网络，而是展现出了一种全新的秩序——无尺度网络。在这个网络中，大部分节点仅有少数几个链接，但少数高度连接的枢纽节点确保了整个网络的连通性。这样的网络结构具有不同寻常的一致性和美感，并且揭示了复杂网络背后的自组织特性。此外，它也预示着存在一些重要的规则支配着网络的演化过程。这个发现改变了人们对网络结构的理解，并推动了进一步的研究，以探究其他复杂系统如好莱坞演员网络、科学合作网络等是否也遵循类似的规律。&lt;/p>&lt;/blockquote>
&lt;p>要点完整，但是逻辑不够清晰，介绍“幂律”有点多余。&lt;/p>
&lt;h5 id="零一万物-2">零一万物
&lt;/h5>&lt;blockquote>
&lt;p>互联网中的幂律是通过对万维网上网页链接的分布进行研究而被发现的。研究人员设计了微型搜索引擎（也称为网络爬虫或机器人），用来收集和分析网页之间的链接。他们发现，网页的导入链接数遵循幂律分布，度指数接近2。这意味着网页链接的分布并不是随机的，而是呈现出一种特定的模式，其中大多数网页只有少量链接，而少数网页（枢纽节点）则拥有非常多的链接。这种分布与传统的钟形曲线不同，它表明了网络的自组织特性，即网络不是随机生成的，而是由某种规则支配的。&lt;/p>&lt;/blockquote>
&lt;p>要点完整，逻辑清晰，但是不够详细，语言描述上有待加强。&lt;/p>
&lt;h5 id="腾讯元宝-2">腾讯元宝
&lt;/h5>&lt;blockquote>
&lt;p>根据文档内容，互联网中的幂律是通过以下步骤和实验被发现的：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>初步观察&lt;/strong>：郑浩雄在设计万维网采集机器人时，原本预期网页之间的连接是随机的，类似于单峰分布，即大多数文档的流行度相似。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>实际数据采集&lt;/strong>：机器人带回的网络数据中，发现许多节点只有少量链接，而一些枢纽节点却拥有非常多的链接。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据分析&lt;/strong>：在双对数坐标系下拟合节点连接度的直方图时，发现网页链接数的分布严格遵循幂律的数学表达式。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律特征&lt;/strong>：幂律分布没有峰，是一条不断递减的曲线，这意味着大量微小事件和少数非常重大的事件并存。这与自然界中大多数量遵循的钟形曲线（单峰分布）有显著差异。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>广泛适用性&lt;/strong>：除了万维网，幂律分布也在其他复杂网络中被发现，如好莱坞演员网络、细胞内部网络、物理期刊引用网络等。这些发现表明，幂律分布是一种普遍存在于复杂网络中的现象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>科学研究&lt;/strong>：科学家们进一步研究了幂律分布的数学特性和物理意义，发现幂律分布通常标志着从无序到有序的过渡，是复杂系统自组织的一种表现。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>理论发展&lt;/strong>：为了理解幂律分布背后的机制，物理学家提出了重整化群理论，由肯尼斯·威尔逊等人发展，为相变和临界现象提供了统一的解释框架。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>通过这些步骤，科学家们逐渐认识到幂律分布是描述复杂网络，特别是互联网中节点连接度分布的关键数学工具。&lt;/p>&lt;/blockquote>
&lt;p>存在大量冗余信息，逻辑混乱。&lt;/p>
&lt;p>&lt;strong>对于Q3，ChatGPT &amp;gt; 零一万物 &amp;gt; 通义千问 &amp;gt; 腾讯元宝&lt;/strong>&lt;/p>
&lt;h4 id="q4具有幂律度分布的网络为什么被称为无尺度网络">Q4：具有幂律度分布的网络为什么被称为“无尺度网络”
&lt;/h4>&lt;h5 id="chatgpt-3">ChatGPT
&lt;/h5>&lt;blockquote>
&lt;p>根据文件，具有幂律度分布的网络之所以被称为“无尺度网络”，是因为在这些网络中&lt;strong>没有一个特定的特征节点或特征尺度&lt;/strong> 来描述整个网络的结构。&lt;/p>
&lt;p>具体来说：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>度分布没有特征尺度&lt;/strong>：在无尺度网络中，节点的连接数（度数）并不集中在一个特定的值范围内。相反，连接数分布遵循幂律，大多数节点拥有少量链接，而少数枢纽节点拥有大量链接。这种分布没有峰值或明显的平均值，因此无法用单一的度数来概括所有节点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>层级结构&lt;/strong>：无尺度网络展现出一种连续的层级结构，从少数具有大量链接的枢纽节点到大量只有少量链接的小节点。由于没有统一的尺度或平均链接数，网络的整体结构是通过这种层级组织维持的，而不是通过均匀分布的节点。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布的性质&lt;/strong>：幂律分布的尾部衰减较慢，允许极少数节点拥有非常多的链接（即枢纽节点），这与随机网络中大多数节点拥有相似链接数的情况不同。无尺度网络的连通性和稳定性主要依赖这些枢纽节点，而随机网络的节点连接度具有特定的尺度（通常为平均连接数）。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>因此，具有幂律度分布的网络被称为“无尺度网络”，因为它们没有固定的特征节点或平均连接数，表现出一种从大量小节点到少数枢纽节点的层级结构。&lt;/p>&lt;/blockquote>
&lt;p>要点完整，详略得当，标准答案！&lt;/p>
&lt;h5 id="通义千问-3">通义千问
&lt;/h5>&lt;blockquote>
&lt;p>具有幂律度分布的网络被称为“无尺度网络”，主要是因为这种网络中不存在一个典型的或者特征性的节点度数（即链接数量）。在传统的随机网络中，节点的度分布呈现出单峰曲线，大多数节点拥有接近平均值的链接数，偏离这个平均值的情况非常少见。这样的网络有一个明确的特征尺度，可以用平均节点来代表。&lt;/p>
&lt;p>相比之下，在遵循幂律度分布的网络里，绝大多数节点仅有少数几个链接，而同时存在少量高度连接的枢纽节点，每个枢纽节点拥有大量的链接。由于这些枢纽节点的存在，网络中的节点度数范围可以从很小延伸到非常大，形成了一个连续的层级结构，从极少数的大枢纽节点到众多的小节点。因此，在这种网络中，无法找到一个能够代表所有节点特性的单一尺度或特征节点。&lt;/p>
&lt;p>具体来说：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>没有特征尺度&lt;/strong>：幂律分布缺乏钟形曲线那样的峰值，这表明在网络中找不到一个可以作为“典型”或“平均”的节点。&lt;/li>
&lt;li>&lt;strong>连续的层级结构&lt;/strong>：从最大的枢纽节点开始，随后是稍微小一些的枢纽节点，接着是一系列更小的节点，最后是大量的小节点，形成了一个平滑过渡的层级结构。&lt;/li>
&lt;li>&lt;strong>网络连通性依赖于枢纽节点&lt;/strong>：小节点拥有的少数链接不足以保证整个网络完全连通，而是由少数高度连接的枢纽节点确保了网络的整体连通性。&lt;/li>
&lt;/ul>
&lt;p>由于上述特性，研究者将这类网络称为“无尺度网络”，强调了它们与传统随机网络在结构上的根本不同。无尺度网络的概念揭示了自然界和人类社会中许多复杂系统的共通规律，并且对理解这些系统的稳定性、动态行为以及故障容忍性等方面提供了重要的视角。&lt;/p>&lt;/blockquote>
&lt;p>和ChatGPT的逻辑很相似，但是语言描述上不够简洁。&lt;/p>
&lt;h5 id="零一万物-3">零一万物
&lt;/h5>&lt;blockquote>
&lt;p>具有幂律度分布的网络被称为“无尺度网络”是因为在这种网络中，节点的连接度分布遵循幂律，这意味着网络中不存在特征尺度。在无尺度网络中，大多数节点只有少数连接，而少数枢纽节点拥有大量连接。这种分布没有峰值，衰减速度比钟形分布慢，允许罕见但高度连接的枢纽节点存在。由于没有特征尺度，网络的结构和动态行为不能通过单一的尺度来描述，因此被命名为“无尺度网络”。&lt;/p>&lt;/blockquote>
&lt;p>要点不够清晰，逻辑混乱。&lt;/p>
&lt;h5 id="腾讯元宝-3">腾讯元宝
&lt;/h5>&lt;blockquote>
&lt;p>根据文档内容，具有幂律度分布的网络被称为“无尺度网络”的原因如下：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>幂律分布的特性&lt;/strong>：幂律分布是一种没有峰值的分布，其特点是大量微小事件和少数非常重大的事件并存。这与钟形分布（如正态分布）不同，后者有一个明显的峰值，表明大多数事件集中在平均值附近。&lt;/li>
&lt;li>&lt;strong>网络结构的特殊性&lt;/strong>：在无尺度网络中，大多数节点只有少数几个链接，而少数枢纽节点拥有非常多的链接。这种结构使得网络在形状上类似于航空交通系统，其中很多小机场通过少数几个主要的交通枢纽连接在一起。&lt;/li>
&lt;li>&lt;strong>无尺度特性&lt;/strong>：幂律分布的无尺度特性意味着网络中没有特征尺度或特征节点。在随机网络中，分布的峰值意味着绝大多数节点拥有同样数目的链接，而在无尺度网络中，幂律分布没有峰值，表明节点间存在连续的层级结构，从少数枢纽节点到为数众多的小节点。&lt;/li>
&lt;li>&lt;strong>枢纽节点的决定性作用&lt;/strong>：无尺度网络中的枢纽节点对网络的连通性和整体结构起着决定性作用。这些枢纽节点的存在使得网络免于瓦解，并且它们的数量和分布遵循幂律分布。&lt;/li>
&lt;li>&lt;strong>放弃尺度或特征节点的概念&lt;/strong>：由于幂律分布没有峰值，网络中不存在固有的尺度或特征节点。这意味着在无尺度网络中，无法找到一个能够代表所有节点特性的节点，这与随机网络和钟形分布的网络形成鲜明对比。&lt;/li>
&lt;/ol>
&lt;p>因此，具有幂律度分布的网络被称为“无尺度网络”，是因为它们展示了一种没有特征尺度或特征节点的网络结构，其中枢纽节点对网络的性质起着决定性作用，并且节点的连接度分布遵循幂律分布。&lt;/p>&lt;/blockquote>
&lt;p>信息冗余，一些要点表达的是同一个意思，逻辑有点混乱。&lt;/p>
&lt;p>&lt;strong>对于Q4，ChatGPT &amp;gt; 通义千问 &amp;gt; 零一万物 &amp;gt; 腾讯元宝&lt;/strong>&lt;/p>
&lt;h4 id="小结-1">小结
&lt;/h4>&lt;p>根据文件回答问题，ChatGPT综合表现最优，回答直击要点，逻辑清晰，基本可以看作标准答案；通义千问表现也很好，但是在语言的简洁性和逻辑性上略输ChatGPT；腾讯元宝表现较差，出现大量冗余信息；零一万物表现最差，会出现错误答案，且回答不够详细。&lt;/p>
&lt;h3 id="五文本输出能力">五、文本输出能力
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>ChatGPT&lt;/th>
&lt;th>通义千问&lt;/th>
&lt;th>零一万物&lt;/th>
&lt;th>腾讯元宝&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>PPT&lt;/td>
&lt;td>✗&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✗&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Markdown&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>思维导图&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✓&lt;/td>
&lt;td>✗&lt;/td>
&lt;td>✓&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>仅通义千问和零一万物可以输出ppt，其中仅通义千问可以根据pdf文件制作ppt，零一万物只能通过word和ppt格式文件制作ppt。&lt;/p>
&lt;p>仅通义千问和腾讯元宝有专门的阅读文件模式且能输出思维导图，其他大模型仅能输出文字大纲。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>通义千问在阅读模式中提供了“导读”、“翻译”、“脑图”、“笔记”四个功能。其中思维导图是按“定义与特点”、“历史发展”、“未来研究方向”等方面划分层次。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>腾讯元宝在阅读模式中提供了“总结”、“精读”、“脑图”三个功能。思维导图按小标题划分层次。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>个人认为腾讯元宝的思维导图质量远大于通义千问。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="小结-2">小结
&lt;/h4>&lt;p>通义千问完胜。&lt;/p>
&lt;h3 id="六多知识点层次结构关联">六、多知识点层次结构关联
&lt;/h3>&lt;p>&lt;strong>ChatGPT&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>根据你上传的文件内容，关于幂律分布、无尺度网络等相关知识的结构层次关联可以整理如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>幂律分布的基本概念&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布&lt;/strong>：指在复杂网络中，大多数节点有少量链接，少数节点拥有大量链接。其数学特征是一条不断递减的曲线，没有峰值。&lt;/li>
&lt;li>关键词：大量微小事件、少数重大事件、递减曲线。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布与随机分布的区别&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>幂律分布&lt;/strong>：允许极端事件（如大量链接的枢纽节点）存在，表现为尾部衰减慢。&lt;/li>
&lt;li>&lt;strong>钟形分布&lt;/strong>：大多数事件集中在平均值附近，尾部迅速衰减，极端事件极少。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布中的度指数&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>度指数&lt;/strong>：幂律分布公式中的指数参数，反映网络中节点链接数的衰减速率。度指数小，表示更多节点拥有大量链接；度指数大，表示少数节点拥有大量链接。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布在互联网中的发现&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>发现过程&lt;/strong>：研究者最初预计万维网的链接数分布是随机的，但通过数据分析发现，网页之间的链接数遵循幂律分布，揭示出互联网的复杂网络结构。&lt;/li>
&lt;li>&lt;strong>双对数坐标&lt;/strong>：幂律分布在双对数坐标系下呈现为线性，进一步证明了少数节点（枢纽节点）的重要性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>无尺度网络的定义与特点&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>无尺度网络&lt;/strong>：具有幂律度分布的网络，因为没有明显的特征尺度而得名。即没有特征节点，节点的度数没有集中在某个值。
&lt;ul>
&lt;li>主要特点：少数枢纽节点连接大量小节点，网络的连通性和稳定性由枢纽节点维持。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>无尺度网络与随机网络的对比&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>随机网络&lt;/strong>：节点的链接数遵循钟形分布，节点间连接较为均匀，大多数节点拥有相似的链接数。&lt;/li>
&lt;li>&lt;strong>无尺度网络&lt;/strong>：节点的链接数遵循幂律分布，少数枢纽节点连接大量节点，枢纽节点是网络的核心。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律与复杂系统的涌现&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>从无序到有序的涌现&lt;/strong>：幂律分布往往出现在复杂系统从无序向有序转变的过程中，如物质相变或网络结构的形成。&lt;/li>
&lt;li>&lt;strong>自组织与幂律&lt;/strong>：幂律分布是复杂网络自组织行为的表现，枢纽节点的形成和稳定性由这种自组织推动。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律分布在不同领域的应用&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>互联网、科学家引用、好莱坞演员网络&lt;/strong>：这些网络都遵循幂律分布，表明复杂网络背后可能存在统一的数学规律。&lt;/li>
&lt;li>&lt;strong>经济学中的帕累托法则&lt;/strong>：80/20定律（帕累托法则）也是幂律分布的一种具体表现，少数资源（财富、影响力）掌握在少数人手中。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>这套知识结构从基础概念到应用，逐步揭示了幂律分布在复杂网络中的作用，并通过无尺度网络的特点来展示其在现实中的应用场景，如互联网、社会网络等。&lt;/p>&lt;/blockquote>
&lt;p>覆盖全面，有对知识点的简单说明。个人认为前四个知识点划分在一起会更好。&lt;/p>
&lt;p>&lt;strong>通义千问&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>根据提供的内容，可以将知识点的结构层次关联整理如下：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>幂律与复杂网络&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>幂律分布：描述了大量微小事件和少数非常重大事件并存的现象。&lt;/li>
&lt;li>无尺度网络：遵循幂律度分布的网络，具有不均匀性，其中大多数节点只有少量链接，而少数枢纽节点拥有大量的链接。&lt;/li>
&lt;li>帕累托原则（80/20定律）：描述了在很多领域中，大部分结果往往由相对较小比例的原因造成。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>复杂网络特性&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>网络中的节点和链接：节点代表个体或实体，链接表示它们之间的关系。&lt;/li>
&lt;li>随机网络 vs 无尺度网络：随机网络节点间的连接是均匀的，而无尺度网络则存在高度连接的枢纽节点。&lt;/li>
&lt;li>度指数：用于描述网络中恰好有k个链接的节点数遵循幂律的方式，不同的系统有不同的度指数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>从无序到有序的相变&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>自发涌现：无序系统在特定条件下自发地形成有序结构。&lt;/li>
&lt;li>相变的例子：如水结冰、金属磁化等现象。&lt;/li>
&lt;li>关联长度：随着系统接近临界点，关联长度按照幂律增加，表明系统内部相关性的变化。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>相变理论的发展&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>卡达诺夫的尺度概念：提出在临界点附近应考虑原子群体的行为而不是单独的原子。&lt;/li>
&lt;li>临界指数：描述相变过程中不同物理量的变化规律。&lt;/li>
&lt;li>威尔逊的重整化理论：提供了一个统一的框架来解释临界现象，并预测临界指数。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>幂律的意义&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>描述自然和社会系统的自组织行为。&lt;/li>
&lt;li>在万维网和其他复杂系统中的发现，揭示了一种新的秩序形式。&lt;/li>
&lt;li>指出当系统经历相变时，幂律的出现是混沌向有序过渡的一个标志。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这些知识点之间通过数学模型和实验观察相互联系，共同构成了理解复杂系统行为的基础。从幂律分布到相变过程，再到对自然界和社会现象的广泛适用性，这些概念帮助我们洞察复杂网络背后的普遍规律。&lt;/p>&lt;/blockquote>
&lt;p>结构划分更合理，但是知识点归类有错误，“度指数”应该放在“幂律与复杂网络”。&lt;/p>
&lt;p>&lt;strong>零一万物&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>知识点的结构层次关联可以按照以下层次来组织：&lt;/p>
&lt;ol>
&lt;li>复杂网络的分布规律
&lt;ul>
&lt;li>幂律分布
&lt;ul>
&lt;li>无尺度网络&lt;/li>
&lt;li>枢纽节点&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>随机网络与无尺度网络的区别&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律分布的特性
&lt;ul>
&lt;li>大量微小事件和少数重大事件并存&lt;/li>
&lt;li>没有峰值，不断递减的曲线&lt;/li>
&lt;li>度指数和幂指数&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>无尺度网络的特点
&lt;ul>
&lt;li>大多数节点只有少数链接&lt;/li>
&lt;li>少数枢纽节点拥有大量链接&lt;/li>
&lt;li>网络的连通性由枢纽节点保证&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>相变理论与幂律的关系
&lt;ul>
&lt;li>从无序到有序的转变&lt;/li>
&lt;li>自组织在相变中的作用&lt;/li>
&lt;li>临界指数和幂律的关联&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>帕累托的80/20定律与幂律分布
&lt;ul>
&lt;li>少数事件或人产生大部分影响&lt;/li>
&lt;li>收入不均衡现象&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>网络中的幂律现象
&lt;ul>
&lt;li>万维网上链接的分布&lt;/li>
&lt;li>好莱坞演员网络&lt;/li>
&lt;li>细胞内部网络&lt;/li>
&lt;li>物理期刊引用数分布&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律在不同系统中的普遍性
&lt;ul>
&lt;li>液体变成气体&lt;/li>
&lt;li>铅变成超导体&lt;/li>
&lt;li>不同系统中的高度相似性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律与自组织秩序
&lt;ul>
&lt;li>幂律作为自组织和有序的标志&lt;/li>
&lt;li>复杂网络中的秩序和一致性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律的机制和网络的演化
&lt;ul>
&lt;li>产生枢纽节点和幂律分布的机制&lt;/li>
&lt;li>网络是否处于从无序到有序的转变中&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自然界中的网络构建
&lt;ul>
&lt;li>不同网络的普遍形式和形状&lt;/li>
&lt;li>自然界如何织成这些网络&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这个结构层次关联图展示了文档中提到的不同概念如何相互关联，以及它们在复杂网络理论中的位置。&lt;/p>&lt;/blockquote>
&lt;p>结构划分不合理，逻辑混乱，且缺少对知识点的简要概括。&lt;/p>
&lt;p>&lt;strong>腾讯元宝&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>复杂网络
&lt;ul>
&lt;li>幂律分布
&lt;ul>
&lt;li>定义：无峰，不断递减的曲线&lt;/li>
&lt;li>特征：大量微小事件和少数非常重大的事件并存&lt;/li>
&lt;li>例子：星球居民身高分布&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>无尺度网络
&lt;ul>
&lt;li>定义：遵循幂律度分布的网络&lt;/li>
&lt;li>特征：大多数节点只有很少几个链接，通过少数几个高度连接的枢纽节点连接&lt;/li>
&lt;li>例子：航空交通系统&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>帕累托与80/20定律
&lt;ul>
&lt;li>帕累托：意大利经济学家，提出80/20定律&lt;/li>
&lt;li>80/20定律：大多数情况下，80%的效果来自20%的原因&lt;/li>
&lt;li>应用：经济学、管理学、网络科学等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律分布与度指数
&lt;ul>
&lt;li>度指数：描述幂律分布的参数&lt;/li>
&lt;li>万维网：导入链接数和导出链接数遵循幂律分布&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>不均匀性，幂律度分布网络的特性
&lt;ul>
&lt;li>随机网络与无尺度网络的对比&lt;/li>
&lt;li>无尺度网络的不均匀特性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>链接洞察
&lt;ul>
&lt;li>幂律分布迫使放弃尺度或特征节点的想法&lt;/li>
&lt;li>无尺度网络中枢纽节点的重要性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律，复杂网络背后的规律
&lt;ul>
&lt;li>幂律在自然界和复杂网络中的普遍性&lt;/li>
&lt;li>幂律标志着从无序到有序的过渡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自发涌现
&lt;ul>
&lt;li>水变成冰的相变现象&lt;/li>
&lt;li>相变是从无序到有序的过程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>有序如何从无序中涌现
&lt;ul>
&lt;li>相变点附近的临界现象&lt;/li>
&lt;li>幂律在相变过程中的普遍性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>从“随机”灌木丛到“自组织”舞台
&lt;ul>
&lt;li>卡达诺夫的尺度不变性概念&lt;/li>
&lt;li>威尔逊的重整化理论&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>幂律无处不在
&lt;ul>
&lt;li>幂律在各种自然现象和复杂网络中的普遍存在&lt;/li>
&lt;li>幂律作为自组织和有序的标志&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>&lt;/blockquote>
&lt;p>完全是按照小标题划分的，出现“链接洞察”这样可笑的错误。&lt;/p>
&lt;h4 id="小结-3">小结
&lt;/h4>&lt;p>在多知识点层次结构关联方面，通义千问 &amp;gt; ChatGPT &amp;gt; 零一万物 &amp;gt; 腾讯混元&lt;/p>
&lt;h3 id="七ai知识点扩写">七、AI知识点扩写
&lt;/h3>&lt;h4 id="扩写幂律分布书本外内容">扩写“幂律分布”（书本外内容）
&lt;/h4>&lt;p>&lt;strong>ChatGPT&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>幂律分布&lt;/strong>在复杂系统的研究中扮演着重要角色，它不仅在互联网、社交网络等现代网络结构中广泛存在，还与多种自然现象和社会现象密切相关。联系文章外的相关内容，幂律分布的研究不仅推动了网络科学的发展，也为其他学科（如经济学、物理学和生物学）提供了新的分析工具和理论框架。以下是基于文章外的扩展讨论：&lt;/p>
&lt;h3 id="1-幂律分布在社会现象中的应用">&lt;strong>1. 幂律分布在社会现象中的应用&lt;/strong>
&lt;/h3>&lt;h4 id="11-财富分配与经济学中的幂律">1.1 &lt;strong>财富分配与经济学中的幂律&lt;/strong>
&lt;/h4>&lt;p>幂律分布与帕累托的&lt;strong>80/20定律&lt;/strong>紧密相关，经济学中的收入和财富分布常常表现为幂律分布。例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>财富集中效应&lt;/strong>：在许多国家中，少数富人占据了大部分的财富，而大多数人仅拥有少量财富。这种不平等的财富分布在不同社会结构中普遍存在，正是帕累托定律的体现。研究表明，无论是全球富人群体，还是具体国家内部，财富的分布都呈现出幂律分布的特征。&lt;/li>
&lt;li>&lt;strong>公司规模与市场份额&lt;/strong>：企业规模（如员工数量或收入）往往也符合幂律分布。少数大型跨国公司（如苹果、亚马逊）主导市场，占据大部分份额，而大多数中小企业只占据少量市场。&lt;/li>
&lt;/ul>
&lt;h4 id="12-犯罪与警务工作">1.2 &lt;strong>犯罪与警务工作&lt;/strong>
&lt;/h4>&lt;p>幂律分布同样可以应用于犯罪现象分析。例如，少数罪犯可能贡献了大多数的犯罪行为。根据“20%的罪犯犯下了80%的犯罪”的规律，警务部门可以根据这一分布规律更有针对性地分配资源，从而提高社会治安的效率。&lt;/p>
&lt;h3 id="2-自然现象中的幂律分布">&lt;strong>2. 自然现象中的幂律分布&lt;/strong>
&lt;/h3>&lt;h4 id="21-地震与自然灾害">2.1 &lt;strong>地震与自然灾害&lt;/strong>
&lt;/h4>&lt;p>在地质学中，地震的规模分布也是幂律分布的一个典型案例，即地震频率与震级大小呈反比关系。小地震频繁发生，而大地震则非常罕见，但其破坏性巨大。正如&lt;strong>古登堡-里希特定律&lt;/strong>所描述，震级增加一级，地震的发生频率会减少大约10倍。这种分布模式有助于地质学家估算地震风险，提前做好防灾预案。&lt;/p>
&lt;h4 id="22-城市规模与人口分布">2.2 &lt;strong>城市规模与人口分布&lt;/strong>
&lt;/h4>&lt;p>城市人口的分布也符合幂律分布。&lt;strong>Zipf定律&lt;/strong>指出，一个国家或地区的城市规模与城市排名成反比关系。例如，在美国，纽约是最大的城市，洛杉矶作为第二大城市的人口大约是纽约的1/2，芝加哥作为第三大城市的人口大约是洛杉矶的1/2。这种规律在世界范围内广泛存在，揭示了城市发展的内在动力和结构规律。&lt;/p>
&lt;h4 id="23-物种分布与生态学">2.3 &lt;strong>物种分布与生态学&lt;/strong>
&lt;/h4>&lt;p>在生态系统中，物种的种群数量也常常呈幂律分布。大多数物种的个体数量较少，而少数物种（如某些主导物种）个体数量较多。这种分布特征揭示了生态系统中的生物多样性和食物链的稳定性，也帮助科学家预测濒危物种和生态系统的动态变化。&lt;/p>
&lt;h3 id="3-幂律分布在物理与技术领域的应用">&lt;strong>3. 幂律分布在物理与技术领域的应用&lt;/strong>
&lt;/h3>&lt;h4 id="31-幂律与物理系统的相变">3.1 &lt;strong>幂律与物理系统的相变&lt;/strong>
&lt;/h4>&lt;p>在物理学中，幂律分布常出现在相变现象的临界点附近。例如，当物质从液态转变为气态或从无序状态转变为有序状态时，系统中的某些量（如簇的大小、磁性强度等）会表现出幂律分布。特别是在&lt;strong>临界点&lt;/strong>处，物质的性质不再依赖于其微观细节，而是呈现出全局的集体行为，物理学家通过幂律分布来描述这些系统的规模不变性和集体现象。&lt;/p>
&lt;h4 id="32-互联网与网络拓扑结构">3.2 &lt;strong>互联网与网络拓扑结构&lt;/strong>
&lt;/h4>&lt;p>在网络科学中，互联网的链接分布是幂律分布的一个典型例子。互联网作为一个复杂网络，其节点（网站或服务器）的链接数遵循幂律分布，这意味着大多数节点（如个人网站、小型服务器）拥有较少的链接，而少数节点（如谷歌、脸书等）拥有大量链接，形成枢纽节点。这些枢纽节点决定了网络的稳定性和连通性。&lt;/p>
&lt;p>这种幂律分布也解释了互联网的&lt;strong>健壮性和脆弱性&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>健壮性&lt;/strong>：网络对随机故障具有很强的抵抗力，即使一些普通节点失效，网络整体仍能保持连通。&lt;/li>
&lt;li>&lt;strong>脆弱性&lt;/strong>：如果少数枢纽节点遭到攻击或失效，整个网络可能迅速瓦解，连通性大大降低。&lt;/li>
&lt;/ul>
&lt;h4 id="33-电力网络与技术系统">3.3 &lt;strong>电力网络与技术系统&lt;/strong>
&lt;/h4>&lt;p>电力网络和技术基础设施中的负载分布也往往表现为幂律分布。少数变电站、发电厂可能承担了大部分的电力传输和生产，而大多数较小的节点只处理少量电力流。这种分布模式帮助工程师更好地理解系统的脆弱性，并设计出更高效的容错机制。&lt;/p>
&lt;h3 id="4-幂律分布与自组织现象">&lt;strong>4. 幂律分布与自组织现象&lt;/strong>
&lt;/h3>&lt;p>幂律分布在许多情况下与&lt;strong>自组织&lt;/strong>现象密切相关。自组织是指系统内部的个体通过简单的局部规则，能够自发形成全局的有序结构，而不需要外部指令或中央控制。复杂网络、相变过程、以及经济系统的演化，都是自组织现象的典型例子。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>自组织临界性&lt;/strong>：许多复杂系统会自发地达到一种临界状态，在这种状态下，系统的行为呈现出幂律分布。这种现象被称为“&lt;strong>自组织临界性&lt;/strong>”，比如雪崩、森林火灾等，这些系统可以在局部扰动下产生大规模连锁反应。&lt;/li>
&lt;/ul>
&lt;h3 id="5-幂律分布的研究进展与挑战">&lt;strong>5. 幂律分布的研究进展与挑战&lt;/strong>
&lt;/h3>&lt;p>尽管幂律分布已经在许多领域得到了广泛应用，但仍有一些挑战存在：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>数据验证&lt;/strong>：现实中的数据是否严格符合幂律分布仍需谨慎验证。由于幂律的长尾效应，数据采样不足可能导致误判。&lt;/li>
&lt;li>&lt;strong>模型解释&lt;/strong>：虽然幂律分布揭示了系统的某些特性，但其背后的形成机制仍需进一步研究。如何通过简单的局部规则生成全局的幂律分布，仍是科学家们正在探索的问题。&lt;/li>
&lt;li>&lt;strong>实际应用&lt;/strong>：虽然幂律分布在理论上具有广泛应用，但如何利用这一规律来改善系统的设计和优化，是工程和应用领域的一个重要问题。&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>总之，幂律分布揭示了复杂系统中极端事件的重要性，联系了不同领域中个体行为与全局结构的关系。从互联网、社交网络到自然界中的地震和城市规模，幂律分布为我们提供了一种理解复杂现象的通用工具。在未来的研究中，进一步探索幂律分布的形成机制及其应用前景，将为复杂系统的理论发展和实际应用提供新的思路。&lt;/p>&lt;/blockquote>
&lt;p>重点叙述了幂律关系在其他领域的应用以及相关研究。内容非常详细。&lt;/p>
&lt;p>&lt;strong>通义千问&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>幂律分布是一种统计分布，它描述的是在很多自然和社会现象中，事件的大小与其发生的频率之间的一种特殊关系。这种分布的特点是少数非常大的事件与大量的小事件共存，并且这些事件的规模和它们出现的概率之间的关系遵循一个特定的数学表达式，即P(x) ∝ x^(-α)，其中P(x)是大于x的事件发生的概率，而α是一个正实数，被称为幂指数或度指数。&lt;/p>
&lt;p>&lt;strong>幂律分布的普遍性&lt;/strong>&lt;/p>
&lt;p>幂律分布在自然界、社会经济系统、互联网、社交网络等多个领域都有广泛的应用。例如：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>自然灾害&lt;/strong>：地震的震级和发生频率、洪水的规模与发生频率等都呈现出幂律分布。&lt;/li>
&lt;li>&lt;strong>城市人口&lt;/strong>：城市的规模（如人口数量）通常遵循幂律分布，这表明大多数城市规模较小，但存在少量非常大的城市。&lt;/li>
&lt;li>&lt;strong>收入分配&lt;/strong>：财富分配不均的现象可以用幂律来描述，说明了极少数人拥有大部分财富的情况。&lt;/li>
&lt;li>&lt;strong>网站链接&lt;/strong>：网页间的链接数也呈现幂律分布，这意味着绝大多数网页只有少数链接，而少数网页则有大量链接。&lt;/li>
&lt;li>&lt;strong>社交媒体&lt;/strong>：用户的粉丝数量或者帖子的转发次数也可能遵循幂律分布。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>幂律分布的意义&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>&lt;strong>揭示隐藏秩序&lt;/strong>：虽然表面上看这些系统似乎是混乱无序的，但幂律分布揭示了它们背后的有序性和一致性。&lt;/li>
&lt;li>&lt;strong>关键节点的重要性&lt;/strong>：在具有幂律分布特性的网络中，一些高度连接的关键节点（枢纽节点）对于整个系统的稳定性和连通性至关重要。&lt;/li>
&lt;li>&lt;strong>预测极端事件&lt;/strong>：理解幂律分布有助于更好地预测罕见但影响巨大的极端事件的发生概率，比如金融市场的崩盘或大规模传染病爆发。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>幂律分布与自组织&lt;/strong>&lt;/p>
&lt;p>幂律分布往往出现在那些通过自我调节过程发展起来的复杂系统中。这些系统不是由外部力量设计出来的，而是通过内部各部分之间的相互作用逐步形成的。这样的自组织过程可以导致幂律分布的形成，因为系统会倾向于优化某些属性，从而使得某些特征比其他特征更加突出。&lt;/p>
&lt;p>&lt;strong>幂律分布的挑战&lt;/strong>&lt;/p>
&lt;p>尽管幂律分布提供了一个强大的工具来分析和理解复杂系统，但在实际应用中也会遇到一些挑战，比如如何准确地识别数据是否符合幂律分布，以及如何解释幂律分布背后的具体机制。此外，在许多情况下，幂律分布可能只是对数据的一个近似描述，而非精确模型，因此需要结合具体情况和其他方法进行综合分析。&lt;/p>
&lt;p>总之，幂律分布为我们提供了理解自然界和社会现象的新视角，它帮助我们认识到即使是在看似随机的环境中，仍然存在着潜在的结构和规律。通过对幂律分布的研究，科学家们能够更好地认识世界的运作方式，并为解决现实世界的问题提供新的思路。&lt;/p>&lt;/blockquote>
&lt;p>其他领域的应用、意义和实际应用中的问题都有涉及，个人认为更加合理。&lt;/p>
&lt;p>&lt;strong>零一万物&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>幂律分布是一种特殊的概率分布，它在很多复杂的自然和社会现象中被观察到。这种分布的特点是没有明显的峰值，而是呈现出一种长尾分布，即大多数事件的规模很小，但偶尔会出现一些非常大的事件。幂律分布可以用一个简单的数学公式来描述，其中包含一个幂指数，这个指数决定了分布的形状。&lt;/p>
&lt;p>在文章中提到的万维网上，网页的链接数遵循幂律分布，这意味着大多数网页只有少数链接，而少数网页（枢纽节点）却拥有大量的链接。这种分布模式在很多其他网络中也存在，比如社交网络、生物网络和经济系统。&lt;/p>
&lt;p>文章外，幂律分布在许多领域都有应用。例如，在经济学中，帕累托法则（80/20法则）指出，20%的人口拥有80%的财富，这实际上是幂律分布的一个例子。在城市规划中，城市的大小和它们的排名也遵循幂律分布，这就是齐普夫定律。在地质学中，地震的规模和它们的频率也符合幂律分布，这意味着大地震虽然罕见，但它们的影响深远。&lt;/p>
&lt;p>此外，幂律分布在物理学中也很重要，特别是在相变理论中。当系统从无序状态转变为有序状态时，例如当物质从液体变成气体时，系统中的某些量会遵循幂律分布。这种分布表明系统正处于临界状态，即从一种状态转变为另一种状态的边缘。&lt;/p>
&lt;p>理解幂律分布对于预测和控制复杂系统的行为至关重要。例如，了解金融市场的幂律分布可以帮助投资者更好地管理风险。在公共卫生领域，了解疾病传播的幂律特性可以帮助政策制定者更有效地分配资源以应对疫情。&lt;/p>
&lt;p>总之，幂律分布是一个跨学科的概念，它在描述和理解复杂系统的行为方面发挥着关键作用。通过研究幂律分布，科学家们可以揭示隐藏在复杂现象背后的简单规律，从而为预测和控制这些现象提供有力的工具。&lt;/p>&lt;/blockquote>
&lt;p>没有层次划分，一大段文字不易阅读，侧重点也在于其他领域的应用。&lt;/p>
&lt;p>&lt;strong>腾讯元宝&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>幂律分布（Power Law Distribution）是一种在自然界和社会科学领域中广泛存在的概率分布现象。它描述了一种“长尾效应”，即在大量数据中，少数数据点占据了大部分的份额，而大多数数据点则相对较少。幂律分布在许多实际应用场景中都有体现，如城市人口分布、互联网网页链接、社交媒体关注度等。&lt;/p>
&lt;h3 id="幂律分布的基本特征">幂律分布的基本特征
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>无标度性&lt;/strong>：幂律分布的一个显著特点是无标度性，即数据的分布不受特定单位或尺度的影响。这意味着在不同尺度上观察数据时，其形态保持一致。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>长尾特性&lt;/strong>：在幂律分布中，尾部的数据点虽然数量少，但它们的总和可能占据整个分布的很大一部分。这种特性使得幂律分布与正态分布等其他常见的概率分布有显著区别。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自相似性&lt;/strong>：幂律分布具有自相似性，即在不同的时间尺度或空间尺度上，数据的分布模式呈现出相似的结构。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="幂律分布的应用领域">幂律分布的应用领域
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>社会科学&lt;/strong>：在社会科学研究中，幂律分布常用于分析社会网络、经济不平等、城市规模分布等问题。例如，城市人口往往遵循幂律分布，少数大城市聚集了大量人口，而众多小城市的人口则相对较少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>网络科学&lt;/strong>：互联网中的网页链接、用户关注度等都表现出幂律分布的特点。搜索引擎算法如PageRank就是基于网页之间的链接关系，利用幂律分布的特性来确定网页的重要性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>金融领域&lt;/strong>：金融市场中的价格波动、交易量等也常常服从幂律分布。这有助于理解极端事件（如金融危机）的发生概率及其影响。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>生物学与生态学&lt;/strong>：生物种群的大小、物种多样性以及生态系统中的能量流动等现象，也可以通过幂律分布来描述。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="幂律分布的形成机制">幂律分布的形成机制
&lt;/h3>&lt;p>幂律分布的形成通常与以下几个因素有关：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>正反馈机制&lt;/strong>：当系统中存在正反馈循环时，小的优势会被不断放大，从而导致某些个体或事件在竞争中占据主导地位。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>网络效应&lt;/strong>：在复杂网络中，节点之间的连接往往遵循幂律分布。网络的生长和演化过程中，新节点更倾向于连接到已有较多连接的节点上。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>随机过程中的稀有事件&lt;/strong>：在某些随机过程中，虽然稀有事件发生的概率很低，但一旦发生，它们会产生深远的影响，进而影响整体的分布格局。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="幂律分布的统计检验与分析方法">幂律分布的统计检验与分析方法
&lt;/h3>&lt;p>为了验证数据是否符合幂律分布，研究者们通常采用以下几种方法：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>对数坐标图&lt;/strong>：将数据取对数后绘制在双对数坐标图上，如果数据点近似呈一条直线，则表明数据服从幂律分布。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>最大似然估计法&lt;/strong>：这是一种更为精确的参数估计方法，可用于确定幂律分布的具体参数。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>拟合优度检验&lt;/strong>：通过比较实际数据与理论幂律分布的拟合程度，来评估幂律分布的适用性。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>总之，幂律分布作为一种普遍存在的自然现象和社会现象，为我们理解和解释复杂系统中的各种不平衡和异质性提供了重要的理论工具和分析框架。&lt;/p>&lt;/blockquote>
&lt;p>最佳回答，涉及基本特征、应用领域、形成机制和分析方法。&lt;/p>
&lt;h4 id="小结-4">小结
&lt;/h4>&lt;p>在这一回合，腾讯元宝 &amp;gt; 通义千问 &amp;gt; ChatGPT &amp;gt; 零一万物&lt;/p>
&lt;h3 id="八ai知识点网搜图">八、AI知识点网搜图
&lt;/h3>&lt;p>仅腾讯元宝能直接给出网搜图，其他模型均只能给出图片建议和关键字&lt;/p>
&lt;p>![](C:\Users\13905\Pictures\Screenshots\屏幕截图 2024-10-06 210638.png)&lt;/p>
&lt;p align="center">腾讯元宝给出的网搜图&lt;/p>
&lt;h3 id="九ai知识点文生图">九、AI知识点文生图
&lt;/h3>&lt;blockquote>
&lt;p>“在相变点，系统在两个状态间面临的抉择，就像站在山脊上的登山者要选择从哪一边下山一样。在没有做出决定之前，系统通常左右摇摆，这种摇摆在临界点附近达到极致。”根据这段文字生成图片&lt;/p>&lt;/blockquote>
&lt;p>&lt;strong>ChatGPT&lt;/strong>&lt;/p>
&lt;p>![](C:\Users\13905\Downloads\DALL·E 2024-10-06 21.28.40 - A metaphorical image representing a phase transition at a critical point, showing a mountain ridge with a climber at the top. The climber stands on th.webp)&lt;/p>
&lt;p>完全写实风格，山的两边对比明显，符合文字的主题。&lt;/p>
&lt;p>&lt;strong>通义千问&lt;/strong>&lt;/p>
&lt;p>&lt;img src="C:%5cUsers%5c13905%5cDownloads%5cimage.png"
loading="lazy"
>&lt;/p>
&lt;p>偏写实风格，山的两边对比明显，符合文字的主题，和我想象的差不多，excellent！&lt;/p>
&lt;p>&lt;strong>零一万物&lt;/strong>&lt;/p>
&lt;p>无法生成图片&lt;/p>
&lt;p>&lt;strong>腾讯元宝&lt;/strong>&lt;/p>
&lt;p>![](C:\Users\13905\Pictures\Screenshots\屏幕截图 2024-10-06 211736.png)&lt;/p>
&lt;p>给出四个图片，卡通画风，大致描绘出了场景，但和文字不搭。&lt;/p>
&lt;h3 id="十总结">十、总结
&lt;/h3>&lt;p>通过本次调研可得到以下结论&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>排名&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>文本阅读能力&lt;/td>
&lt;td>通义千问 &amp;raquo; 腾讯元宝 &amp;gt; ChatGPT &amp;gt; 零一万物&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>文本摘要能力&lt;/td>
&lt;td>ChatGPT &amp;gt; 通义千问 &amp;gt; 腾讯元宝 &amp;gt; 零一万物&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>文本理解能力&lt;/td>
&lt;td>ChatGPT &amp;gt; 通义千问 &amp;gt; 腾讯元宝 &amp;gt; 零一万物&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>文本输出能力&lt;/td>
&lt;td>通义千问完胜&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>多知识点层次结构关联&lt;/td>
&lt;td>通义千问 &amp;gt; ChatGPT &amp;gt; 零一万物 &amp;gt; 腾讯混元&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AI知识点扩写&lt;/td>
&lt;td>腾讯元宝 &amp;gt; 通义千问 &amp;gt; ChatGPT &amp;gt; 零一万物&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AI知识点网搜图&lt;/td>
&lt;td>仅腾讯元宝能做到&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AI知识点文生图&lt;/td>
&lt;td>通义千问 ≈ ChatGPT &amp;gt; 腾讯元宝，零一万物无此功能&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;strong>输入方式&lt;/strong>：对于总结特定章节，特定章节输入 &amp;gt; 整本书输入，文件阅读模式 &amp;gt; 对话模式&lt;/li>
&lt;li>&lt;strong>回答质量/可靠性&lt;/strong>：ChatGPT &amp;gt; 通义千问 &amp;gt; 腾讯元宝 &amp;gt; 零一万物&lt;/li>
&lt;li>&lt;strong>功能性&lt;/strong>：通义千问 &amp;raquo; 腾讯元宝 &amp;gt; 零一万物 &amp;gt; ChatGPT&lt;/li>
&lt;li>&lt;strong>综合能力&lt;/strong>：通义千问 &amp;gt; ChatGPT &amp;gt; 腾讯元宝 &amp;gt; 零一万物&lt;/li>
&lt;/ul></description></item><item><title>Moore与Mealy状态机辨析</title><link>https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/</link><pubDate>Sat, 05 Oct 2024 16:58:00 +0000</pubDate><guid>https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/</guid><description>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/Automata_theory.svg.png" alt="Featured image of post Moore与Mealy状态机辨析" />&lt;h4 id="有限状态机">有限状态机
&lt;/h4>&lt;p>表示有限个状态以及在这些状态之间的转移和动作等行为的&lt;strong>数学统计模型&lt;/strong>。&lt;/p>
&lt;h4 id="有限状态机fsm组成部分">有限状态机（FSM）组成部分
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>&lt;strong>State&lt;/strong> : 系统可能处于的状态。每个状态反映的是系统的某个模式或环节。有限状态机的状态是有限的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Input&lt;/strong> : 外部输入的信号，会影响状态的转换。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Output&lt;/strong> : 状态机在特定条件下输出的信号。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Transitions&lt;/strong> : 系统根据状态转移函数从一个状态转移到另一个状态。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Initial State&lt;/strong> : 系统的初始状态。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="例题字符串匹配">例题（字符串匹配）
&lt;/h4>&lt;p>在了解有限状态机的两种类型前，我们先来看一道例题（选自BUAA_CO_P0）&lt;/p>
&lt;blockquote>
&lt;p>使用Logisim搭建一个有限状态机检测串行输入字符串中的能匹配正则表达式b{1,2}[ac]{2}的子串并输出。即我们要得到这样一个字符串：开头有一个或两个b，接着要出现两次a/c。&lt;/p>
&lt;p>**注意：**每当匹配到一个子串时，需要输出一次1。例如对字符串bacbacac,模块应当在第1个c输入和第2个c输入时输出1,而在其他时刻保持输出为0。&lt;/p>&lt;/blockquote>
&lt;h4 id="moore-machine">Moore Machine
&lt;/h4>&lt;p>我们先通过Moore状态机来实现题目要求。Moore状态机是有限状态机的一种，其输出仅依赖于当前状态。即只要系统处于某个特定状态，无论当前输入是什么，都会有对应的输出。&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore.png"
width="593"
height="185"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_hu_a0dfd89ec93ac608.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_hu_d0425ae1602f2bbd.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="320"
data-flex-basis="769px"
>&lt;/p>
&lt;p>首先我们先画出&lt;strong>状态转移图&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_transition.png"
width="701"
height="233"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_transition_hu_c8e35ce45212ce20.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_transition_hu_bd834bbc6277a871.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="300"
data-flex-basis="722px"
>&lt;/p>
&lt;p>根据上图我们可以轻松地在&lt;strong>logisim&lt;/strong>中搭出相应的电路&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_table.png"
width="643"
height="420"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_table_hu_a576e50aa1a57b13.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_table_hu_b32c45cd15ee5ee7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="153"
data-flex-basis="367px"
>&lt;/p>
&lt;p align = "center">&lt;i>&lt;font color = "gray">利用真值表构建状态转移模块&lt;/font>&lt;/i>&lt;p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_logisim.png"
width="623"
height="229"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_logisim_hu_19dba5df5ff99878.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/moore_logisim_hu_dd6b173fbd2a0ec9.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="272"
data-flex-basis="652px"
>&lt;/p>
&lt;h4 id="mealy-machine">Mealy Machine
&lt;/h4>&lt;p>再利用Mealy状态机实现题目要求。Mealy状态机是有限状态机的另外一种，其输出结果不仅和当前状态有关，还和当前输出有关。&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy.png"
width="593"
height="201"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_hu_b227e79b60b799f7.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_hu_797c9108c2bb94b7.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="295"
data-flex-basis="708px"
>&lt;/p>
&lt;p>我们仍然是先画出&lt;strong>状态转移图&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_transition.png"
width="701"
height="233"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_transition_hu_afe6e998c107cd85.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_transition_hu_30415e718ab41b09.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="300"
data-flex-basis="722px"
>&lt;/p>
&lt;p>在&lt;strong>logisim&lt;/strong>中搭建相应电路&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_table.png"
width="735"
height="416"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_table_hu_9404a3165c6ba825.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_table_hu_1aed7ce11eba17e1.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="176"
data-flex-basis="424px"
>&lt;/p>
&lt;p align = "center">&lt;i>&lt;font color = "gray">利用真值表构建状态转移模块&lt;/font>&lt;/i>&lt;p>
&lt;p>由于Mealy状态机的输出Z由状态和输出共同决定，所以可以在构建真值表时直接根据状态和输入给出Z的值。&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_logisim.png"
width="555"
height="211"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_logisim_hu_a937017219dbd312.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/mealy_logisim_hu_111bb1fc4d2ac999.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="263"
data-flex-basis="631px"
>&lt;/p>
&lt;h4 id="moore--mealy">Moore &amp;amp; Mealy
&lt;/h4>&lt;p>下面我们通过波形图的方式分析两种有限状态机的差别。&lt;/p>
&lt;ul>
&lt;li>上升沿输入一个字符，且输入在一个周期内保持不变&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_posedge.png"
width="452"
height="237"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_posedge_hu_359ba7a370f56290.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_posedge_hu_2e0a0be18a5989db.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;p>Moore状态机在读入字符c后状态变为11，经过判断符合置位条件，输入变为1，非常符合我们的直觉。&lt;/p>
&lt;p>Mealy状态机则在读入字符a后输入就变为1，因为读入a之后状态变为10，此时输入仍为a，状态机识别到字符序列baa，符合置位条件，输入变为1，而在读入c之后状态变为00，不再符合置位条件。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>下降沿输入一个字符，且输入在一个周期内保持不变&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_negedge.png"
width="452"
height="237"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_negedge_hu_999d69a74283a5d0.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_negedge_hu_fa0c1b2dc415861f.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;p>虽然是下降沿读入一个字符，但是状态机的状态在上升沿时才会更新，所以对于Moore状态机，其实就等于上一种情况滞后一个周期。&lt;/p>
&lt;p>对于Mealy状态机，在状态更新为10后，输入仍为a，检测序列为baa，符合置位条件，在之后的下降沿输入变为c，此时检测序列为bac，仍符合置位条件。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>异步输入&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_async_true.png"
width="452"
height="237"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_async_true_hu_63ec90afc72bd0cb.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_async_true_hu_6221b091fc98f9d5.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;p>&lt;img src="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_async_fal.png"
width="452"
height="237"
srcset="https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_async_fal_hu_f3e809c7ad84454e.png 480w, https://lhy0424.top/p/%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA/wave_async_fal_hu_84a489208c734f57.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="190"
data-flex-basis="457px"
>&lt;/p>
&lt;p>在接收到字符a后的一个周期内任意时刻输入c，Mealy状态机的输出都会立刻发生变化，而Moore状态机则需要等到下一个时钟上沿到来输出才会变化。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="总结">总结
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>对于本题来说，Moore状态机和Mealy状态机实现的功能有所差异。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>**Moore状态机同步输出，Mealy状态机异步输出。**Mealy对输入的反应更快。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>实现相同功能，Mealy所需要的状态数比Moore型少，Moore需要状态稳定才能输出。（对于异步输入来说，因为同步输入时结果并不相同）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>并非所有时许电路都可以用Mealy状态机实现，一些时序逻辑电路只能通过Moore状态机实现。&lt;/p>
&lt;/li>
&lt;/ul></description></item></channel></rss>